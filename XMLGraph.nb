Notebook[{

Cell[CellGroupData[{
Cell["XMLGraph", \
"CodeSection",ExpressionUUID->"73e32bf8-1e9f-449c-a7e0-f54ac6b0a77c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<XMLGraph`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"a1777e36-e630-4a6e-8278-\
f2ccd73466d1"],

Cell["\<\
\[LeftCeiling]
\tXMLGraph is an object that is stored as XMLGraph[data] where data is an \
Association or other object that supports key access mechanisms that stores \
the core XMLGraph data.
\tKeys *must* include \[OpenCurlyDoubleQuote]Graph\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Data\[CloseCurlyDoubleQuote],  \
\[OpenCurlyDoubleQuote]Version\[CloseCurlyDoubleQuote].
\t\tData      -- data for each node
\t\tGraph   -- structural representation of the XML
\t\tVersion -- version of the object API
\tEach node in Graph will have an entry in Data. Structural lookups happen on \
the Graph. Data lookups happen on the data.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"a9b98545-fc09-4b30-84f0-f50c93dc639e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraph", "::", "usage"}], "=", "\n", "\t", 
   "\"\<A Graph-based representation of XML data\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"0192aaeb-1bef-4c10-b6f6-aa8cdb061efa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<`Package`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"6786ddd7-0c8a-42ed-95a6-\
ba653df63cd8"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Node Stuff\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"aa74b1b3-82c2-4ead-b4e5-0d67f43f3727"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$NodeDefaults", "::", "usage"}], "=", 
   "\"\<Defaults for created nodes\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Node", "::", "usage"}], "=", "\"\<Head for a node\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"8cb563b2-388a-4a0f-9739-d9f958f8c189"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CreateNode", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Creates a node/set of nodes\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InsertNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Adds nodes to the graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DeleteNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Deletes nodes from the graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ModifyNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Modifies a node or set of nodes on the graph\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"60099292-7c37-4c52-83b9-c8780502f48b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RootNode", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Gets the XML root element\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeList", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Lists the nodes on the Graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeData", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Gets a set of nodes off the graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeAttributes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Pulls node attributes off the graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Selects nodes by some criterion\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"def51c9b-9d1e-4e59-8c45-9a70e2e5c0f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NodeChildren", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeParents", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"0084a622-e63d-4063-b6f8-06fd8f5eaba3"]\

}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Object Stuff\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"8484398c-6bcf-4295-a201-1bfb21409ca0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConstructXMLGraph", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphQ", "::", "usage"}], "=", 
   "\"\<Tests whether an XMLGraph structure is a valid XML graph\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MutableXMLGraph", "::", "usage"}], "=", 
   "\"\<Creates a mutable XMLGraph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MutableXMLGraphQ", "::", "usage"}], "=", 
   "\"\<Tests whether a graph is mutable or not\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"134307b6-3d63-40b3-8d10-b415e5e06e1e"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Conversions\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"5c11f8d6-63e7-4141-b002-377728f6bb38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLAssociation", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ToXMLAssociation", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"3971490d-0cf9-4440-908d-3641d132e286"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLObject", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ToXMLObject", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"63efabda-faa5-4263-baa4-c5c72ab540f0"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Graph Operations\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"62a98411-59e8-439b-af3d-2c179fac0440"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XMLSubgraph", "::", "usage"}], "=", 
   "\"\<Extracts a subgraph starting from a head node\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FormattedXMLGraph", "::", "usage"}], "=", 
   "\"\<Returns the Graph with nice formatting\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphSort", "::", "usage"}], "=", 
   "\"\<Sorts the XMLGraph by distance from the \\\"Root\\\" node\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"839bc02a-30e2-4271-977a-b4b4395fb040"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphBFS", "::", "usage"}], "=", 
   "\"\<Applies BreadthFirstScan to the Graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphDFS", "::", "usage"}], "=", 
   "\"\<Applies DepthFirstScan to the Graph\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"e67422c8-e708-431c-a9a0-80ea63abbc78"]\

}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"6141fdb9-45b9-4996-99b6-\
b5e9d136ff13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<`CSSSelectors`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"1b9d2c4e-2447-42e8-897c-\
62d59bfa0797"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParseCSSSelector", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CSSSelector", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CSSCombinator", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CompileCSSSelector", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"a9c0c13d-1f09-4161-b560-fa0533905a98"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CSSSelect", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"95d121c4-010d-45c7-a2cc-8794a73d0b76"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"6693714f-67b4-48fb-b2b8-\
f996c7ea0c7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"25af30df-69d9-4995-b7b5-\
e734bbed5230"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Object API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"a6f45103-1173-486e-88b9-29aff0108c94"],

Cell[BoxData[
 RowBox[{"XMLGraph", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"3de88a08-4f9f-4ea4-a0f7-62a2e9a4d863"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraphQ\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"26db5503-0268-4a39-b403-857b88550ac6"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraphQ\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b1af96ba-f171-42c4-8f9b-ab358d8fb367"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphQ", "[", 
    RowBox[{"a", ":", 
     RowBox[{"Except", "[", "_XMLGraph", "]"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"TrueQ", "@", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"a", ",", " ", "\"\<Version\>\""}], "]"}]}], "]"}], "&&", "\n",
     "\t\t", 
    RowBox[{"AllTrue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Graph\>\"", ",", " ", "\"\<Data\>\""}], "}"}], ",", " ", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"a", ",", " ", "#"}], "]"}], "&"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"HoldPattern", "[", 
   RowBox[{"XMLGraphQ", "[", 
    RowBox[{
     RowBox[{"XMLGraph", "[", "a_", "]"}], "?", 
     RowBox[{"(", "System`Private`HoldNotValidQ", ")"}]}], "]"}], "]"}], ":=",
   "\n", "\t", 
  RowBox[{"XMLGraphQ", "@", "a"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphQ", "[", 
    RowBox[{"_XMLGraph", "?", 
     RowBox[{"(", "System`Private`HoldValidQ", ")"}]}], "]"}], ":=", "\n", 
   "\t", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"XMLGraphQ", "[", "___", "]"}], ":=", 
  "False"}]}], \
"CodeInput",ExpressionUUID->"c7134c5d-3e71-4446-a806-6760d0b5a3ba"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MutableXMLGraphQ\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"edc8752f-f68a-4a94-add1-9093aa342846"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"MutableXMLGraphQ", "[", 
     RowBox[{"XMLGraph", "[", "a_", "]"}], "]"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"MutableXMLGraphQ", "@", "a"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MutableXMLGraphQ", "[", 
   RowBox[{"a", ":", 
    RowBox[{"Except", "[", "_XMLGraph", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"TrueQ", "@", 
   RowBox[{
   "a", "[", "\"\<Mutable\>\"", 
    "]"}]}]}]}], \
"CodeInput",ExpressionUUID->"db9a0b58-b196-4946-9fde-7b0e36ecabd8"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Constructor\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7a7cef16-5be7-4982-b29f-c9c50cf35578"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c3413d31-fa60-4fd3-9ecd-71080a30ed83"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{
     RowBox[{"XMLGraph", "[", "a_", "]"}], "?", 
     RowBox[{"(", "System`Private`HoldNotValidQ", ")"}]}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", "=", 
       RowBox[{"ConstructXMLGraph", "[", "a", "]"}]}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"res", "/;", 
      RowBox[{"XMLGraphQ", "[", "res", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"b518068d-4101-401e-ae02-5ee87a07102d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ConstructXMLGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"154f91c7-0eaf-436b-9233-ada9fd66ff96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$XMLGraphDefaults", "=", "\n", "\t", 
   RowBox[{"<|", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<Version\>\"", "\[Rule]", "1"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Graph\>\"", "\[Rule]", 
      RowBox[{"VertexAdd", "[", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{"{", "}"}], "]"}], ",", " ", "\"\<Root\>\""}], "]"}]}], ",", 
     "\n", "\t\t", 
     RowBox[{"\"\<Data\>\"", "\[Rule]", 
      RowBox[{"<|", "|>"}]}]}], "\n", "\t\t", "|>"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"c6f0c984-ceda-451a-a0cc-b0eda408050b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConstructXMLGraph", "//", "Clear"}], 
  ";"}]], "CodeInput",ExpressionUUID->"63ca1b5a-2ddb-43f4-bddc-5515b6e7e1d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"validateGraphData", "[", "a_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g", "=", 
        RowBox[{"a", "[", "\"\<Graph\>\"", "]"}]}], ",", " ", 
       RowBox[{"d", "=", 
        RowBox[{"a", "[", "\"\<Data\>\"", "]"}]}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"EdgeList", "[", 
         RowBox[{"g", ",", " ", 
          RowBox[{"\"\<Root\>\"", "\[DirectedEdge]", "_"}]}], "]"}], ",", 
        "\n", "\t", "\t\t\t", 
        RowBox[{
         RowBox[{"el", ":", 
          RowBox[{"{", 
           RowBox[{"\"\<Root\>\"", "\[DirectedEdge]", "n_"}], "}"}]}], ":>", 
         "\n", "\t\t\t\t\t", 
         RowBox[{"Set", "[", 
          RowBox[{
           RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], ",", " ", "\n", "\t", 
           "\t\t\t\t\t", 
           RowBox[{"EdgeAdd", "[", 
            RowBox[{
             RowBox[{"EdgeDelete", "[", 
              RowBox[{"g", ",", " ", "el"}], "]"}], ",", " ", 
             RowBox[{"\"\<Root\>\"", "\[UndirectedEdge]", "n"}]}], "]"}]}], 
          "\n", "\t\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t", "]"}], ";", "\n",
       "\t\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "d"}], ">", "0"}], "&&", 
         RowBox[{"!", 
          RowBox[{"AssociationQ", "[", 
           RowBox[{"d", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "\"\<Meta\>\""}], "]"}], "]"}], "]"}]}]}],
         ",", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"a", "[", "\"\<Data\>\"", "]"}], "=", "\n", "\t\t\t\t\t", 
          RowBox[{"MapAt", "[", 
           RowBox[{"Association", ",", " ", "d", ",", " ", 
            RowBox[{"{", 
             RowBox[{"All", ",", " ", "\"\<Meta\>\""}], "}"}]}], "]"}]}], 
         ";"}]}], "\n", "\t\t\t\t", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"validateGraphData", "~", "SetAttributes", "~", 
  "HoldFirst"}]}], \
"CodeInput",ExpressionUUID->"b9893592-67bf-419a-8a8a-4209073b5fdc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConstructXMLGraph", "[", "a_Association", "]"}], ":=", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "a"}], ">", "0"}], "&&", 
      RowBox[{"AssociationQ", "@", 
       RowBox[{"a", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&&", "\n", "\t\t", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Type\>\"", ",", " ", "\"\<Meta\>\"", ",", " ", 
          "\"\<Children\>\""}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{"KeyExistsQ", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", "#"}], "]"}], "&"}]}], 
       "]"}]}], ",", "\n", "\t\t", 
     RowBox[{"FromXMLAssociation", "@", "a"}], ",", "\n", "\t\t", 
     RowBox[{"Module", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"assoc", "=", "\n", "\t", "\t\t\t\t", 
         RowBox[{"Join", "[", "\n", "\t", "\t\t\t\t\t", 
          RowBox[{"$XMLGraphDefaults", ",", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{"KeyTake", "[", 
            RowBox[{"a", ",", " ", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Version\>\"", ",", " ", "\"\<Graph\>\"", ",", " ", 
               "\"\<Data\>\""}], "}"}]}], "]"}]}], "\n", "\t", "\t\t\t\t\t", 
          "]"}]}], "\n", "\t", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"validateGraphData", "[", "assoc", "]"}], ";", "\n", "\t\t\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"d", "=", "assoc"}], "}"}], ",", "\n", "\t", "\t\t\t", 
          RowBox[{"System`Private`HoldSetValid", "@", 
           RowBox[{"XMLGraph", "[", "d", "]"}]}]}], "\n", "\t\t\t\t", 
         "]"}]}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstructXMLGraph", "[", 
    RowBox[{"xml", ":", 
     RowBox[{"_XMLElement", "|", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XMLObject", "[", "_", "]"}], "[", 
        RowBox[{"_", ",", " ", "_", ",", " ", "_"}], "]"}], ")"}], "|", 
      "_String"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"FromXMLObject", "[", "xml", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ConstructXMLGraph", "[", "e_", "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Association", "@", "e"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"AssociationQ", "@", "a"}], ",", "\n", "\t\t\t", 
      RowBox[{"XMLGraph", "@", "a"}], ",", "\n", "\t\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Quiet", "@", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"BooleanQ", "@", 
            RowBox[{"KeyExistsQ", "[", 
             RowBox[{"e", ",", " ", "\"\<Version\>\""}], "]"}]}], ",", " ", 
           "False"}], "]"}]}], ",", " ", "\n", "\t", "\t", "\t\t", 
        RowBox[{
         RowBox[{"KeyValueMap", "[", "\n", "\t", "\t", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"KeyExistsQ", "[", 
                RowBox[{"e", ",", " ", "#"}], "]"}]}], ",", "\n", "\t", "\t", 
              "\t\t\t\t", 
              RowBox[{
               RowBox[{"e", "[", "#", "]"}], "=", "#2"}]}], "\n", "\t", "\t", 
             "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t", "\t", "\t\t\t", 
           "$XMLGraphDefaults"}], "\n", "\t", "\t", "\t\t\t", "]"}], ";", 
         "\n", "\t", "\t", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"XMLGraphQ", "[", "e", "]"}]}], ",", " ", "\n", 
           "\t\t\t\t\t", "$Failed", ",", " ", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"validateGraphData", "[", "e", "]"}], ";", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"System`Private`HoldSetValid", "@", 
             RowBox[{"XMLGraph", "[", "e", "]"}]}]}]}], "\n", "\t", "\t", 
          "\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t", "$Failed"}], "\n", 
       "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"d18087e9-7684-4591-9c01-86a825e0b179"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MutableXMLGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"272ead4e-c389-420e-8fe6-160fcc8b65e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MutableXMLGraph", "[", 
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MutableXMLGraphQ", "[", "x", "]"}], ",", " ", "\n", "\t\t", "x", 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Quiet", "@", "\n", "\t\t\t", 
      RowBox[{"Check", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"Get", "[", "\"\<HashTableInterface`\>\"", "]"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{
        "Get", "[", 
         "\"\<https://github.com/b3m2a1/mathematica-tools/raw/master/\
HashTableInterface.m\>\"", "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"b", "=", 
         RowBox[{"HashTableInterface`HashTable", "[", 
          RowBox[{"x", "[", "\"\<Backend\>\"", "]"}], "]"}]}], "}"}], ",", 
       "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"b", "[", "\"\<Mutable\>\"", "]"}], "=", "True"}], ";", "\n",
         "\t\t\t", 
        RowBox[{"XMLGraph", "[", "b", "]"}]}]}], "\n", "\t\t\t", "]"}]}]}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"18e45e9d-0cdf-4c2e-bdab-5da26ec50aef"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Accessor API\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7c7aa613-3dbf-460f-96cc-134893ae0af1"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Backend\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"192658f1-ad38-4795-876b-8cf3cd2e5c85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "@", 
   RowBox[{
    RowBox[{"XMLGraph", "[", "a_", "]"}], "[", "\"\<Backend\>\"", "]"}]}], ":=",
   "\n", "\t", 
  "a"}]], "CodeInput",ExpressionUUID->"159e2367-9198-461e-9582-249bd8a73991"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Graph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ffa2e8e9-69c5-463a-a9cc-f179bb9100ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "@", 
   RowBox[{
    RowBox[{"XMLGraph", "[", "a_", "]"}], "[", "\"\<Graph\>\"", "]"}]}], ":=",
   "\n", "\t", 
  RowBox[{
  "a", "[", "\"\<Graph\>\"", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"3e11fb21-a683-455a-8d85-58613a460f26"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Data\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4e6dc1c9-f170-4e95-b155-72f312fb1717"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "@", 
   RowBox[{
    RowBox[{"XMLGraph", "[", "a_", "]"}], "[", "\"\<Data\>\"", "]"}]}], ":=", 
  "\n", "\t", 
  RowBox[{
  "a", "[", "\"\<Data\>\"", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"63bac57b-2eb7-4228-bab7-8046d785d109"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Format\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"a34651ea-2a45-4e5e-9aec-e44744f2bf5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"RawBoxes", "@", "\n", "\t\t", 
   RowBox[{"With", "[", "\n", "\t", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"g", "=", 
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"x", "[", "\"\<Nodes\>\"", "]"}]}], "-", "1"}]}], ",", "\n",
        "\t\t\t\t", 
       RowBox[{"r", "=", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"x", "[", "\"\<Root\>\"", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"s", ":", 
            RowBox[{"Except", "[", "None", "]"}]}], ":>", 
           RowBox[{
            RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
            RowBox[{"s", ",", " ", "\"\<Type\>\""}], "]"}]}]}], "]"}]}], ",", 
       "\n", "\t\t\t\t", 
       RowBox[{"be", "=", 
        RowBox[{"x", "[", "\"\<Backend\>\"", "]"}]}]}], "\n", "\t\t\t\t", 
      "}"}], ",", "\n", "\t\t\t", 
     RowBox[{"BoxForm`ArrangeSummaryBox", "[", "\n", "\t\t\t\t", 
      RowBox[{"XMLGraph", ",", "\n", "\t\t\t\t", 
       RowBox[{"Unevaluated", "[", 
        RowBox[{"XMLGraph", "@@", 
         RowBox[{"{", "be", "}"}]}], "]"}], ",", "\n", "\t\t\t\t", "None", 
       ",", "\n", "\t\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"BoxForm`MakeSummaryItem", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Root: \>\"", ",", " ", "r"}], "}"}], ",", " ", 
           "StandardForm"}], "]"}], ",", "\n", "\t\t\t\t\t", 
         RowBox[{"BoxForm`MakeSummaryItem", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Nodes: \>\"", ",", " ", "g"}], "}"}], ",", " ", 
           "StandardForm"}], "]"}]}], "\n", "\t\t\t\t\t", "}"}], ",", "\n", 
       "\t\t\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t\t\t", "StandardForm"}], "\n", 
      "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"4602c545-5722-4356-8003-7be1368633ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Methods/Attributes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"45ad7919-762f-44d1-8396-11ae8be72d04"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Bind\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"411e6571-18ec-4328-b0e5-5e75e163379c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$$objData", "=", 
   RowBox[{"<|", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<Methods\>\"", "\[Rule]", 
      RowBox[{"<|", "|>"}]}], ",", "\n", "\t", 
     RowBox[{"\"\<Attributes\>\"", "\[Rule]", 
      RowBox[{"<|", "|>"}]}]}], "\n", "\t", "|>"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"773220be-4fdc-4daa-a519-5c23b98acf67"],

Cell[BoxData[
 RowBox[{"bindMethod", "/:", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"bindMethod", "[", 
     RowBox[{"graph_", ",", " ", 
      RowBox[{"name_", "[", "pat___", "]"}]}], "]"}], ":=", "def_"}], ")"}], ":=",
   "\n", "\t", 
  RowBox[{"(", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"$$objData", "[", 
      RowBox[{"\"\<Methods\>\"", ",", " ", "name"}], "]"}], "=", "True"}], 
    ";", "\n", "\t\t", 
    RowBox[{"XMLGraph", "/:", 
     RowBox[{
      RowBox[{"graph", "?", "XMLGraphQ"}], "[", 
      RowBox[{"name", "[", "pat", "]"}], "]"}], ":=", "def"}], ";", "\n", 
    "\t\t", 
    RowBox[{"XMLGraph", "/:", 
     RowBox[{
      RowBox[{
       RowBox[{"graph", "?", "XMLGraphQ"}], "[", "name", "]"}], "[", "pat", 
      "]"}], ":=", "def"}], ";"}], "\n", "\t\t", 
   ")"}]}]], \
"CodeInput",ExpressionUUID->"df3cd303-2974-4815-92d3-6be24c8c4185"],

Cell[BoxData[
 RowBox[{"bindAttribute", "/:", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"bindAttribute", "[", 
     RowBox[{"graph_", ",", " ", "name_"}], "]"}], ":=", "def_"}], ")"}], ":=",
   "\n", "\t", 
  RowBox[{"(", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"$$objData", "[", 
      RowBox[{"\"\<Attributes\>\"", ",", " ", "name"}], "]"}], "=", "True"}], 
    ";", "\n", "\t\t", 
    RowBox[{"XMLGraph", "/:", 
     RowBox[{
      RowBox[{"graph", "?", "XMLGraphQ"}], "[", "name", "]"}], ":=", "def"}], 
    ";"}], "\n", "\t\t", 
   ")"}]}]], \
"CodeInput",ExpressionUUID->"96a82a56-229d-4ce4-9634-46cdba86087e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Insert\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"2c5055ba-33a9-4572-b9f4-0edd8e7d05ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Insert\>\"", "[", "n_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"InsertNodes", "[", 
   RowBox[{"x", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"300cf772-407d-4bd8-bc9e-fbe1244e36c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Delete\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"41bf58c3-1b44-4736-b5bb-9b6b3a1c4df1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Delete\>\"", "[", "n_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"DeleteNodes", "[", 
   RowBox[{"x", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"921e7f02-9783-4fad-9a0b-d6636f7abe35"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Modify\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4c357d2e-1390-40eb-be58-185e959bef92"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<ModifyNodes\>\"", "[", "n_", "]"}]}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"ModifyNodes", "[", 
   RowBox[{"x", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"9bfed3be-8147-487b-bb3f-de8ee0203f34"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FormattedGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"42170ecf-2b40-4db6-ad63-40fa89873bb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bindMethod", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"\"\<FormattedGraph\>\"", "[", "o___", "]"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"FormattedXMLGraph", "[", 
    RowBox[{"x", ",", " ", "o"}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"9cd480e9-3006-48c3-9971-d179ef17ad59"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Nodes\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9b0196b6-c7fc-4d01-a2d4-558bb3b71e5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindAttribute", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\"\<Nodes\>\""}], "]"}], ":=", "\n", "\t", 
  RowBox[{
  "NodeList", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"74788f25-e303-4bf0-b974-892f2aaa0256"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Root\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"6bc5781f-733e-42ae-b66b-0edba9cff480"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindAttribute", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\"\<Root\>\""}], "]"}], ":=", "\n", "\t", 
  
  RowBox[{
  "RootNode", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"1dc6b077-6491-41bc-ac71-86432bff55f7"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Select\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"80f065e7-56d5-457c-b3d4-e33e2ebcaa5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Select\>\"", "[", 
     RowBox[{"fn_", ",", " ", "n___"}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"SelectNodes", "[", 
   RowBox[{"x", ",", " ", "fn", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8b005a5d-bc98-49a2-872f-21a6a194d06e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Locate\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"99fe85ae-20bc-41c2-9298-ed695db86ab8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Locate\>\"", "[", "id_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"SelectNodes", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"\"\<id\>\"", "\[Rule]", "id"}], ",", " ", "1"}], "]"}], ",", 
     " ", "None"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4b15c118-0663-449d-b10c-0c3976e9da3f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]BFS\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"fa95fd20-7b43-4e0e-a963-4957cc695bc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<BFS\>\"", "[", "arg__", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLGraphBFS", "[", 
   RowBox[{"x", ",", " ", "arg"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8d47f2e2-86dd-4b86-992a-88fb534df773"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]DFS\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"34214e42-204c-42ad-b791-c850bbac7d0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<DFS\>\"", "[", "arg__", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLGraphDFS", "[", 
   RowBox[{"x", ",", " ", "arg"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"712f237d-ec33-4559-965f-c4a9afcc90e4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Data\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e4b1a840-5fac-4db4-b2dd-1f0dbad3ed38"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bindMethod", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"\"\<Data\>\"", "[", 
      RowBox[{
       RowBox[{"n_:", "All"}], ",", " ", 
       RowBox[{"p_:", "All"}]}], "]"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"NodeData", "[", 
    RowBox[{"x", ",", " ", "n", ",", " ", "p"}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"ed0acc01-3e84-408e-9cb4-b33c2e3df3c7"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Type\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e8d4894b-992e-463c-aed4-62ecea1473c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Type\>\"", "[", 
     RowBox[{"n_:", "All"}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeData", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "\"\<Type\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"e69e4d68-342a-476b-b2ff-01d93760fe39"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Meta\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"2c44d77b-2df9-46b6-b011-366f8e204c3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Meta\>\"", "[", 
     RowBox[{"n_:", "All"}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeData", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "\"\<Meta\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"759cddee-a57f-402a-805f-4f60e42d230f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Attribute\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"299cb282-86e6-45b6-8eca-f15657b8b12e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Attribute\>\"", "[", 
     RowBox[{
      RowBox[{"n_:", "All"}], ",", " ", "attr_"}], "]"}]}], "]"}], ":=", "\n",
   "\t", 
  RowBox[{"NodeAttributes", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "attr"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"ac8abb8e-a9eb-4af8-b626-5bc1dde56a18"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Parent\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f7dce4b0-a19c-4344-be98-aed9e677c602"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Parent\>\"", "[", 
     RowBox[{
      RowBox[{"n_:", "All"}], ",", " ", 
      RowBox[{"depth_:", "1"}]}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeParents", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "depth"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"f42de4a7-a319-4469-9dc2-b223226caf5b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FullParents\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"20689d21-5a21-40f2-a944-1630302c8e03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<FullParents\>\"", "[", 
     RowBox[{
      RowBox[{"n_:", "All"}], ",", " ", 
      RowBox[{"depth_:", "1"}]}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeParents", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "depth", ",", " ", "True"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"232dacb7-814c-47d7-bc95-b566f3b34fc5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Children\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9c5e8e31-c3fd-464b-af12-55a11f09cbda"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Children\>\"", "[", 
     RowBox[{
      RowBox[{"n_:", "All"}], ",", " ", 
      RowBox[{"depth_:", "1"}]}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeChildren", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "depth"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5505037c-2f39-4eda-b2c6-b1e9add9de77"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FullChildren\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c374105b-d126-4e1a-88ef-d333fd28d0b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<FullChildren\>\"", "[", 
     RowBox[{
      RowBox[{"n_:", "All"}], ",", " ", 
      RowBox[{"depth_:", "1"}]}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeChildren", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "depth", ",", " ", "True"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"bcad22a2-3be5-43fb-a93d-eecabcc5813e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Sort\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1a85426e-0bfc-435e-9124-209c1b841c2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Sort\>\"", "[", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{
  "XMLGraphSort", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"478805cb-381c-44bc-996e-bdd9dd673d25"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Subgraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"00ee8d9b-ba1a-46a1-8db4-26f5907a7750"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Subgraph\>\"", "[", "k_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLSubgraph", "[", 
   RowBox[{"x", ",", " ", "k"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5b73a8cc-6417-4c51-be69-06477b88c20a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XML\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"0e0ac211-a0b4-4ed9-9d80-49be316c5577"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindAttribute", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\"\<XML\>\""}], "]"}], ":=", "\n", "\t", 
  RowBox[{
  "ToXMLObject", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"865f3400-6c25-4793-9fc2-d267a0465f4d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Association\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"884cde8e-3409-4602-aa97-c1e84cf315b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindAttribute", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\"\<Association\>\""}], "]"}], ":=", "\n",
   "\t", 
  RowBox[{
  "ToXMLAssociation", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"cc37eab0-3407-4350-aea3-05751574fc19"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Fallthrough\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b07e5513-9e0e-4195-9a02-2ebbc3dc8660"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"h_", "[", 
    RowBox[{"s_String", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"$$objData", "[", 
        RowBox[{"\"\<Attributes\>\"", ",", " ", "#"}], "]"}], "&"}], ")"}]}], 
    "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", "=", 
      RowBox[{"x", "[", "h", "]"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"g", "[", "s", "]"}], "/;", 
     RowBox[{"XMLGraphQ", "[", "g", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8d6b3ec2-1005-44aa-8f64-dd53c1159448"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"h_", "[", 
    RowBox[{
     RowBox[{"s_String", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"$$objData", "[", 
         RowBox[{"\"\<Methods\>\"", ",", " ", "#"}], "]"}], "&"}], ")"}]}], 
     "[", "a___", "]"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", "=", 
      RowBox[{"x", "[", "h", "]"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"s", "[", "a", "]"}], "]"}], "/;", 
     RowBox[{"XMLGraphQ", "[", "g", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"ab5f23dd-077c-4a15-8b9d-1257a3ecc7aa"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Node API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"13740c6e-dc23-4dae-a16e-b0ebd284485c"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$NodeDefaults\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"48e93e77-4858-4d66-aabb-2512ea3b71ac"],

Cell[BoxData[
 RowBox[{"$NodeDefaults", "=", "\n", "\t", 
  RowBox[{"<|", "\n", "\t\t", 
   RowBox[{
    RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<p\>\""}], ",", "\n", "\t\t", 
    RowBox[{"\"\<Meta\>\"", "\[Rule]", 
     RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t", 
    RowBox[{"\"\<Children\>\"", "\[Rule]", 
     RowBox[{"{", "}"}]}]}], "\n", "\t\t", 
   "|>"}]}]], \
"CodeInput",ExpressionUUID->"dc6c636f-ea92-4613-88db-749023bd2c76"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ValidateNode\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"b366e9af-e4a6-410f-9be5-e809b35a407a"],

Cell["\[LeftCeiling]...I should probably write this...\[RightFloor]", "Text",
 Evaluatable->True,ExpressionUUID->"264368c7-bfea-4335-948e-4fe13448830d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Node\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"b6cba970-307f-4b1d-b74c-acb09067bd5f"],

Cell[BoxData[
 RowBox[{"With", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"baseBoxes", "=", "\n", "\t\t", 
     RowBox[{
      RowBox[{"RawBoxes", "@", "\n", "\t\t\t", 
       RowBox[{"BoxForm`ArrangeSummaryBox", "[", "\n", "\t\t\t\t", 
        RowBox[{"Node", ",", "\n", "\t", "\t\t\t", 
         RowBox[{"Node", "[", "$$name", "]"}], ",", "\n", "\t", "\t\t\t", 
         "None", ",", "\n", "\t", "\t\t\t", 
         RowBox[{"{", "$$name", "}"}], ",", "\n", "\t", "\t\t\t", 
         RowBox[{"{", "}"}], ",", "\n", "\t", "\t\t\t", "StandardForm"}], 
        "\n", "\t", "\t\t\t", "]"}]}], "/.", 
      RowBox[{
       RowBox[{"DynamicModuleBox", "[", 
        RowBox[{"_", ",", " ", "b_", ",", " ", "___"}], "]"}], 
       "\[RuleDelayed]", "\n", "\t", "\t\t\t\t\t\t", 
       RowBox[{"RuleCondition", "[", 
        RowBox[{
         RowBox[{"b", "/.", 
          RowBox[{
           RowBox[{"PaneSelectorBox", "[", 
            RowBox[{"s_", ",", " ", "___"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"Lookup", "[", 
            RowBox[{"s", ",", " ", "False"}], "]"}]}]}], ",", " ", "True"}], 
        "]"}]}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t", 
   RowBox[{
    RowBox[{"Format", "[", 
     RowBox[{"Node", "[", "name_String", "]"}], "]"}], ":=", "\n", "\t\t", 
    RowBox[{"baseBoxes", "/.", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"$$name", "\[Rule]", "name"}], ",", "\n", "\t", "\t\t", 
       RowBox[{
        RowBox[{"TagBox", "[", 
         RowBox[{"\"\<$$name\>\"", ",", " ", "\"\<SummaryItem\>\""}], "]"}], 
        "\[RuleDelayed]", "\n", "\t", "\t\t", 
        RowBox[{"RuleCondition", "[", 
         RowBox[{
          RowBox[{"TagBox", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"name", ",", " ", "InputForm"}], "]"}], ",", " ", 
            "\"\<SummaryItem\>\""}], "]"}], ",", " ", "True"}], "]"}]}]}], 
      "\n", "\t", "\t\t", "}"}]}]}]}], "\n", "\t", 
  "]"}]], "CodeInput",ExpressionUUID->"6571a719-65e7-42ec-b8bf-1f547f71d322"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CreateNode\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"559b017c-db6a-4cfb-922e-3007e688b03d"],

Cell["\<\
\[LeftCeiling]
\tCreateNode takes a parent node and a list of child-specs and creates an \
Association for the children out of it.
\tReturns {{childData}, {nodeSpecs...}} where each nodeSpec is an Association \
and the childData is data about the children of the parent node.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"45e7eeba-8158-400b-a8aa-888eb6fa9cda"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CreateNode\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"372d1bdf-16a1-475f-9a43-3c9437d9bd19"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CreateNode", "[", "d_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Reap", "[", 
    RowBox[{"createNode", "[", "d", "]"}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"1aac1c05-d69c-4277-82ad-18358c62b0bc"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]createNode\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"3716d145-65e8-4137-ba67-2f935f90ff52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"createNode", "[", 
    RowBox[{"parent_", "\[Rule]", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"d_", ",", " ", "c_", ",", " ", "b_"}], "]"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"createNode", "[", "\n", "\t\t", 
    RowBox[{"parent", "->", "\n", "\t\t\t", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Type\>\"", "\[Rule]", "d"}], ",", " ", 
       RowBox[{"\"\<Meta\>\"", "\[Rule]", "c"}], ",", " ", 
       RowBox[{"\"\<Children\>\"", "\[Rule]", "b"}]}], "|>"}]}], "\n", "\t\t",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"createNode", "[", 
   RowBox[{"parent_", "\[Rule]", "kid_Association"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"<|", 
        RowBox[{"\"\<Parent\>\"", "\[Rule]", "parent"}], "|>"}]}], ",", "\n", 
      "\t\t\t", "children"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"data", "[", "\"\<Type\>\"", "]"}], "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"kid", ",", " ", "\"\<Type\>\"", ",", " ", 
        RowBox[{"$NodeDefaults", "[", "\"\<Type\>\"", "]"}]}], "]"}]}], ";", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{"data", "[", "\"\<Name\>\"", "]"}], "=", 
      RowBox[{
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{"CreateUUID", "[", 
          RowBox[{
           RowBox[{"data", "[", "\"\<Type\>\"", "]"}], "<>", "\"\<:\>\""}], 
          "]"}], ",", " ", "\"\<-\>\"", ",", " ", "2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"data", "[", "\"\<Meta\>\"", "]"}], "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"kid", ",", " ", "\"\<Meta\>\"", ",", " ", 
        RowBox[{"$NodeDefaults", "[", "\"\<Meta\>\"", "]"}]}], "]"}]}], ";", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{"data", "[", "\"\<Children\>\"", "]"}], "=", "\n", "\t\t\t", 
      RowBox[{"createNode", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"data", "[", "\"\<Name\>\"", "]"}], "->", "\n", "\t\t\t\t\t", 
        
        RowBox[{"Flatten", "@", 
         RowBox[{"List", "@", 
          RowBox[{"Lookup", "[", 
           RowBox[{"kid", ",", " ", "\"\<Children\>\"", ",", " ", 
            RowBox[{"$NodeDefaults", "[", "\"\<Children\>\"", "]"}]}], 
           "]"}]}]}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"Sow", "[", "data", "]"}], ";", "\n", "\t\t", 
     RowBox[{"Node", "[", 
      RowBox[{"data", "[", "\"\<Name\>\"", "]"}], "]"}]}]}], "\n", "\t\t", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"createNode", "[", 
    RowBox[{"parent_", "\[Rule]", 
     RowBox[{"kids", ":", "l_List"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"createNode", "/@", 
    RowBox[{"Thread", "[", 
     RowBox[{"parent", "\[Rule]", "kids"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"createNode", "[", 
   RowBox[{"parent_", "\[Rule]", "kid_"}], "]"}], ":=", "\n", "\t", 
  "kid"}]}], \
"CodeInput",ExpressionUUID->"a961653d-f309-41e3-b8e3-95dd4969b431"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]InsertNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"524d28e7-b71d-4df1-b6b9-fbbc5dc23ed7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InsertNodes", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], ",", " ", "\n", "\t", 
    RowBox[{"nodes", ":", 
     RowBox[{"{", "__Rule", "}"}]}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"XMLGraph", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", 
      "\t\t\t", "data", ",", "\n", "\t\t\t", 
      RowBox[{"parents", "=", 
       RowBox[{"Keys", "@", "nodes"}]}], ",", "\n", "\t\t\t", "pos", ",", 
      "\n", "\t\t\t", 
      RowBox[{"nodez", "=", 
       RowBox[{"Values", "@", "nodes"}]}], ",", "\n", "\t\t\t", "children", 
      ",", "\n", "\t\t\t", "others", ",", "\n", "\t\t\t", "edges", ",", "\n", 
      "\t\t\t", "new"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"(*", " ", 
     RowBox[{
     "If", " ", "no", " ", "position", " ", "is", " ", "specifed", " ", 
      "insert", " ", "at", " ", "the", " ", "end"}], " ", "*)"}], "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"parents", "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"ListQ", "@", "#"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"#", ",", " ", 
            RowBox[{"-", "1"}]}], "}"}], ",", " ", "#"}], "]"}], "&"}], "/@", 
       "parents"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"parents", ",", " ", "pos"}], "}"}], "=", 
      RowBox[{"Transpose", "@", "parents"}]}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Create", " ", "new", " ", "nodes", " ", "from", " ", "rules"}],
       " ", "*)"}], "\n", "\t\t", 
     RowBox[{"nodez", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", "#", "}"}], ",", " ", "1"}], "]"}], "&"}], "/@", 
       "nodez"}]}], ";", "\n", "\t\t", 
     RowBox[{"nodez", "=", 
      RowBox[{"CreateNode", "/@", 
       RowBox[{"Thread", "[", 
        RowBox[{"parents", "\[Rule]", "nodez"}], "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"new", "=", 
      RowBox[{"Join", "@@", 
       RowBox[{"nodez", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}]}], ";", "\n", "\t\t", 
     
     RowBox[{"(*", " ", 
      RowBox[{
      "Add", " ", "constructed", " ", "edges", " ", "to", " ", "the", " ", 
       "Graph"}], " ", "*)"}], "\n", "\t\t", 
     RowBox[{"edges", "=", "\n", "\t\t\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "\"\<Parent\>\"", "]"}], "\[Rule]", 
          RowBox[{"#", "[", "\"\<Name\>\"", "]"}]}], "&"}], ",", " ", "new"}],
        "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], "=", "\n", "\t\t\t", 
      RowBox[{"EdgeAdd", "[", 
       RowBox[{
        RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"UndirectedEdge", "@@@", "edges"}]}], "\n", "\t\t\t\t", 
       "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Add", " ", "data", " ", "to", " ", "Data", " ", "association"}], " ", 
      "*)"}], "\n", "\t\t", 
     RowBox[{"data", "=", 
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"MapThread", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Function", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"#", ",", " ", "\"\<Children\>\""}], "]"}], "=", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"FlattenAt", "[", "\n", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Insert", "[", 
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"#", ",", " ", "\"\<Children\>\""}], "]"}], ",", " ", 
              "#3", ",", " ", "#2"}], "]"}], ",", "\n", "\t\t\t\t\t\t", 
            "#2"}], "\n", "\t\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"data", "[", 
          RowBox[{"#", ",", " ", "\"\<Children\>\""}], "]"}]}], "\n", 
        "\t\t\t\t", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
        "parents", ",", "\n", "\t\t\t\t", "pos", ",", "\n", "\t\t\t\t", 
         RowBox[{"nodez", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "\n", "\t\t\t\t", 
        "}"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"#", "[", "\"\<Name\>\"", "]"}], "]"}], "=", "#"}], "]"}], 
       ",", " ", "new"}], "]"}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Return", " ", "new", " ", "XMLGraph", " ", "and", " ", "added", " ", 
       "nodes"}], " ", "*)"}], "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MutableXMLGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
         RowBox[{"XMLGraph", "@", "a"}]}], "]"}], ",", " ", 
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "}"}]}]}], "\n", 
   "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"073fce56-39b1-4a27-b998-ba2872901103"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]DeleteNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"15cc4fdb-0d1c-43cb-a5ad-174c3353ffab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteNodes", "[", "\n", "\t", 
   RowBox[{"x_XMLGraph", ",", "\n", "\t", 
    RowBox[{"n", ":", 
     RowBox[{"{", "__String", "}"}]}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", "\t\t\t", "g",
       ",", "\n", "\t\t\t", "d", ",", "\n", "\t\t\t", "vs"}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"g", "=", 
      RowBox[{"VertexDelete", "[", 
       RowBox[{"g", ",", " ", "n"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], "=", "g"}], ";", "\n", "\t\t", 
     RowBox[{"d", "=", 
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"vs", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"d", ",", " ", "n"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}], "=", 
      RowBox[{"KeyDrop", "[", 
       RowBox[{"d", ",", " ", "n"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MutableXMLGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
         RowBox[{"XMLGraph", "@", "a"}]}], "]"}], ",", " ", "vs"}], "}"}]}]}],
    "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"403e5fbc-74c1-462e-8fdd-52e088a68f8b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ModifyNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"9e726068-4497-41be-a08b-f7d31b69526f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModifyNodes", "[", "\n", "\t", 
   RowBox[{"x_XMLGraph", ",", "\n", "\t", 
    RowBox[{"n", ":", 
     RowBox[{"{", "__Rule", "}"}]}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", "\t\t\t", "g",
       ",", "\n", "\t\t\t", "d", ",", "\n", "\t\t\t", 
      RowBox[{"vs", "=", 
       RowBox[{"Keys", "@", "n"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"ms", "=", 
       RowBox[{"Association", "/@", 
        RowBox[{"Values", "[", "n", "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"MapThread", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Function", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"#", ",", " ", "\"\<Type\>\""}], "]"}], "=", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"Lookup", "[", 
           RowBox[{"#2", ",", " ", "\"\<Type\>\"", ",", " ", 
            RowBox[{"d", "[", 
             RowBox[{"#", ",", " ", "\"\<Type\>\""}], "]"}]}], "]"}]}], ";", 
         "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"#", ",", " ", "\"\<Meta\>\""}], "]"}], "=", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"Merge", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"#", ",", " ", "\"\<Meta\>\""}], "]"}], ",", " ", 
              RowBox[{"KeyDrop", "[", 
               RowBox[{"#2", ",", " ", "\"\<Type\>\""}], "]"}]}], "}"}], ",", 
            " ", "Last"}], "]"}]}], ";"}], "\n", "\t\t\t\t", "]"}], ",", "\n",
        "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"vs", ",", "\n", "\t\t\t\t", "ms"}], "\n", "\t\t\t\t", 
        "}"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}], "=", "d"}], ";", "\n", "\t\t", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MutableXMLGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
       RowBox[{"XMLGraph", "@", "a"}]}], "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"665815f0-1570-48be-8706-a063f912d22a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]RootNode\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"00c3f9bf-e716-4370-885f-8a722983348e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RootNode", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "#"}], ">", "0"}], ",", " ", "\n", "\t\t", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], ",", "\n", "\t\t", 
      "None"}], "\n", "\t\t", "]"}], "&"}], "@", 
   RowBox[{"IncidenceList", "[", 
    RowBox[{
     RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", " ", "\"\<Root\>\""}], 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"a2a83f45-d5c6-44c6-98a9-06cce1502780"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NodeList\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"1ab82e5f-b5fa-411d-a358-6cacfad52edd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NodeList", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Keys", "@", 
   RowBox[{
   "x", "[", "\"\<Data\>\"", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"f0ffaf5a-c13e-492f-9e77-f625c836d6c1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SelectNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7caf900b-1a15-488a-8e0b-9eab2e0b4fa4"],

Cell[BoxData[
 RowBox[{"SelectNodes", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"9b75872a-9dd5-4f1e-9bc3-2ef16a75f742"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SelectNodes", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "test_String", ",", " ", 
    RowBox[{"n_:", "All"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"CSSSelect", "[", 
   RowBox[{"x", ",", " ", "test", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"f91e0ce0-a3ac-45c6-90ba-c4f6ceeb2481"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"prop_String", "->", "test_"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "\"\<Meta\>\"", ",", " ", "prop"}], "]"}], 
       "]"}], ",", " ", 
      RowBox[{
       RowBox[{"#", "\[Equal]", "test"}], "&"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"test", ":", 
      RowBox[{"Except", "[", 
       RowBox[{
        RowBox[{"_String", "|", "_String"}], "\[Rule]", "_"}], "]"}]}]}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"x", "[", "\"\<Data\>\"", "]"}], ",", " ", "test"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"prop_String", "->", "test_"}], ",", " ", "n_"}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "\"\<Meta\>\"", ",", " ", "prop"}], "]"}], 
       "]"}], ",", " ", 
      RowBox[{
       RowBox[{"#", "\[Equal]", "test"}], "&"}], ",", " ", "n"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"test", ":", 
      RowBox[{"Except", "[", 
       RowBox[{
        RowBox[{"_String", "|", "_String"}], "\[Rule]", "_"}], "]"}]}], ",", 
     " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"x", "[", "\"\<Data\>\"", "]"}], ",", " ", "test", ",", " ", 
      "n"}], "]"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"a3fc19cc-cf86-482e-80f3-763b4b1814a6"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NodeData\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"e42d1f2e-4e7c-464e-aca9-492a25b94d51"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NodeData", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"n", ":", 
      RowBox[{"_String", "|", 
       RowBox[{"{", "__String", "}"}], "|", "All"}]}], ",", " ", 
     RowBox[{"part", ":", 
      RowBox[{"(", 
       RowBox[{"_String", "|", 
        RowBox[{"{", "__String", "}"}], "|", "All"}], ")"}], ":", "All"}]}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", " ", "part"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeData", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"i", ":", 
      RowBox[{"_Integer", "|", 
       RowBox[{"{", "__Integer", "}"}], "|", "_Span"}]}], ",", " ", 
     RowBox[{"parts", ":", 
      RowBox[{"_String", "|", 
       RowBox[{"{", "__String", "}"}], "|", "All"}], ":", "All"}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"NodeData", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{
      RowBox[{"VertexList", "[", 
       RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"NodeData", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"part", ":", 
     RowBox[{"(", 
      RowBox[{"_String", "|", 
       RowBox[{"{", "__String", "}"}], "|", "All"}], ")"}], ":", "All"}]}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{
  "{", "}"}]}]}], \
"CodeInput",ExpressionUUID->"dcc00aa4-7cf1-4e2a-93ab-69a6f99d7145"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NodeAttributes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"3b2d0577-fe71-42a5-81e1-a84a05f5b738"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NodeAttributes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", "\n", "\t", 
     RowBox[{"n", ":", 
      RowBox[{"_String", "|", 
       RowBox[{"{", "__String", "}"}], "|", "All"}]}], ",", " ", "\n", "\t", 
     RowBox[{"part", ":", 
      RowBox[{"(", 
       RowBox[{"_String", "|", 
        RowBox[{"{", "__String", "}"}], "|", "All"}], ")"}], ":", "All"}]}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", " ", "\"\<Meta\>\"", ",", " ", "part"}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeAttributes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"i", ":", 
      RowBox[{"_Integer", "|", 
       RowBox[{"{", "__Integer", "}"}], "|", "_Span"}]}], ",", " ", 
     RowBox[{"parts", ":", 
      RowBox[{"_String", "|", 
       RowBox[{"{", "__String", "}"}], "|", "All"}], ":", "All"}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"NodeAttributes", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{
      RowBox[{"VertexList", "[", 
       RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"NodeAttributes", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"part", ":", 
     RowBox[{"(", 
      RowBox[{"_String", "|", 
       RowBox[{"{", "__String", "}"}], "|", "All"}], ")"}], ":", "All"}]}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{
  "{", "}"}]}]}], \
"CodeInput",ExpressionUUID->"6c5fce5f-2e88-444d-9579-ffbc41451916"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NodeChildren\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"8082ad54-f7b5-406c-92c0-c346b0db675a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NodeChildren", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "n_", ",", " ", 
    RowBox[{"depth_:", "1"}], ",", " ", 
    RowBox[{"full", ":", 
     RowBox[{"True", "|", "False"}], ":", "False"}]}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"full", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Rest", "[", "NestList", "]"}], "[", "##", "]"}], "&"}], ",", 
     " ", "Nest"}], "]"}], "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"NodeData", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{
          RowBox[{"Node", "[", "s_", "]"}], "\[RuleDelayed]", "s"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "1"}], "}"}]}], "]"}], ",", " ", 
       "\"\<Children\>\""}], "]"}], "&"}], ",", "\n", "\t\t", 
    RowBox[{"Thread", "[", 
     RowBox[{"Node", "[", "n", "]"}], "]"}], ",", "\n", "\t\t", "depth"}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"996b10eb-8f90-4163-b718-86ae7cdaadc1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NodeParents\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"5aea2bc6-4353-4edc-a97e-0d17963e2499"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NodeParents", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "n_", ",", " ", 
    RowBox[{"depth_:", "1"}], ",", " ", 
    RowBox[{"full", ":", 
     RowBox[{"True", "|", "False"}], ":", "False"}]}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"full", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Rest", "[", "NestList", "]"}], "[", "##", "]"}], "&"}], ",", 
     " ", "Nest"}], "]"}], "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"NodeData", "[", 
      RowBox[{"x", ",", " ", "#", ",", " ", "\"\<Parent\>\""}], "]"}], "&"}], 
    ",", " ", "\n", "\t\t", "n", ",", " ", "\n", "\t\t", "depth"}], "\n", 
   "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"69425795-0d19-41e1-aae3-73166518ee51"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CSS Selectors\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"c7770b33-dbd3-464b-a231-0da4bda8e679"],

Cell["\<\
\[LeftCeiling]
\tI may want a DFS selection procedure over the Graph representation? This \
would make things like ~ more intuitive and linear time, but might also be a \
bit more of a pain.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"186bae2a-c934-451e-8482-92c8e2399a8f"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Parse\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"81091bdc-eadd-4314-a4f5-54b02b4182bd"],

Cell[BoxData[
 RowBox[{"cssSelectorPatterns", "=", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"\"\<\\*\>\"", "\[Rule]", 
     RowBox[{"CSSSelector", "[", "All", "]"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<.\>\"", "~~", 
      RowBox[{"cls", ":", 
       RowBox[{
        RowBox[{"Except", "[", "WhitespaceCharacter", "]"}], ".."}]}]}], ":>",
      "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"CSSSelector", "[", "\"\<Class\>\"", "]"}], "[", "cls", "]"}]}],
     ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<#\>\"", "~~", 
      RowBox[{"id", ":", 
       RowBox[{
        RowBox[{"Except", "[", "WhitespaceCharacter", "]"}], ".."}]}]}], ":>",
      "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"CSSSelector", "[", "\"\<ID\>\"", "]"}], "[", "id", "]"}]}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", "\"\<,\>\"", "~~", 
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}]}], "\[Rule]", 
     RowBox[{"CSSCombinator", "[", "\"\<Or\>\"", "]"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", "\"\<+\>\"", "~~", 
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}]}], "\[Rule]", 
     RowBox[{"CSSCombinator", "[", "\"\<Next\>\"", "]"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", "\"\<~\>\"", "~~", 
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}]}], "\[Rule]", 
     RowBox[{"CSSCombinator", "[", "\"\<Follows\>\"", "]"}]}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", "\"\<>\>\"", "~~", 
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}]}], "\[Rule]", 
     RowBox[{"CSSCombinator", "[", "\"\<Child\>\"", "]"}]}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"el", ":", 
        RowBox[{"(", 
         RowBox[{"LetterCharacter", "~~", 
          RowBox[{
           RowBox[{"Except", "[", 
            RowBox[{
            "WhitespaceCharacter", "|", "\"\<,\>\"", "|", "\"\<+\>\"", "|", 
             "\"\<~\>\"", "|", "\"\<>\>\""}], "]"}], "..."}]}], ")"}]}], 
       ")"}], "~~", "\n", "\t\t\t", 
      RowBox[{"(", 
       RowBox[{"\"\<[\>\"", "~~", 
        RowBox[{"attr", ":", 
         RowBox[{
          RowBox[{"Except", "[", 
           RowBox[{"WhitespaceCharacter", "|", "\"\<]\>\""}], "]"}], ".."}]}],
         "~~", "\"\<]\>\""}], ")"}]}], ":>", "\n", "\t\t\t\t", 
     RowBox[{
      RowBox[{"CSSCombinator", "[", "\"\<And\>\"", "]"}], "[", "\n", 
      "\t\t\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"CSSSelector", "[", "\"\<Element\>\"", "]"}], "[", "el", 
        "]"}], ",", "\n", "\t\t\t\t\t", 
       RowBox[{"cssAttributeSelector", "[", "attr", "]"}]}], "\n", 
      "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<[\>\"", "~~", 
      RowBox[{"attr", ":", 
       RowBox[{
        RowBox[{"Except", "[", 
         RowBox[{"WhitespaceCharacter", "|", "\"\<]\>\""}], "]"}], ".."}]}], 
      "~~", "\"\<]\>\""}], ":>", "\n", "\t\t\t", 
     RowBox[{"cssAttributeSelector", "[", "attr", "]"}]}], ",", "\n", "\t\t", 
    
    RowBox[{
     RowBox[{"el", ":", 
      RowBox[{"(", 
       RowBox[{"LetterCharacter", "~~", 
        RowBox[{
         RowBox[{"Except", "[", 
          RowBox[{
          "WhitespaceCharacter", "|", "\"\<,\>\"", "|", "\"\<+\>\"", "|", 
           "\"\<~\>\"", "|", "\"\<>\>\""}], "]"}], "..."}]}], ")"}]}], 
     "\[RuleDelayed]", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"CSSSelector", "[", "\"\<Element\>\"", "]"}], "[", "el", 
      "]"}]}]}], "\n", "\t\t", 
   "}"}]}]], \
"CodeInput",ExpressionUUID->"71deaa4e-dcbf-49e2-b25c-1e9fa7101415"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssAttributeSelector", "[", "s_String", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "split", ",", "\n", "\t\t\t", "attr", ",", "\n", "\t\t\t", "token", ",", 
      "\n", "\t\t\t", "val"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"split", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"StringTrim", "[", "s", "]"}], ",", " ", "\"\<=\>\"", ",", 
        " ", "2"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "split"}], "\[Equal]", "2"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"attr", ",", " ", "val"}], "}"}], "=", "split"}], ";", "\n",
         "\t\t\t", 
        RowBox[{"token", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"s", ",", " ", 
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}]}], "]"}]}], ";", "\n", "\t", "\t\t", 
        RowBox[{"attr", "=", 
         RowBox[{"StringDrop", "[", 
          RowBox[{"s", ",", " ", 
           RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "\t", "\t\t", 
        RowBox[{
         RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", 
         RowBox[{"token", ",", " ", "attr", ",", " ", "val"}], "]"}]}], ",", 
       "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", 
        RowBox[{"split", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\n", "\t\t\t", "]"}]}]}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"1c7d5b14-ca6e-47cb-b1d5-6e05227db679"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorPostProcess", "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"\"\< \>\"", "\[Rule]", 
     RowBox[{"CSSCombinator", "[", "\"\<Descendant\>\"", "]"}]}], "\n", 
    "\t\t", "}"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"48bac8f4-ad66-4b3a-ab0c-9fe61eb88cfc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalizeWhiteSpace", "[", "s_String", "]"}], ":=", "\n", "\t", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"s", ",", " ", 
    RowBox[{"Whitespace", "\[Rule]", "\"\< \>\""}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4f56898c-79c5-4754-9da8-6dd19f474aa8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParseCSSSelector", "[", "s_String", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"split", ",", "\n", "\t\t\t", "map", ",", "\n", "\t\t\t", 
      RowBox[{"i", "=", "1"}], ",", "\n", "\t\t\t", "tag"}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"split", "=", 
      RowBox[{"List", "@@", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"normalizeWhiteSpace", "@", "s"}], ",", " ", 
         "cssSelectorPatterns"}], "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"map", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\n", "\t\t", 
     RowBox[{"split", "=", "\n", "\t\t\t", 
      RowBox[{"Flatten", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"StringReplace", "[", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"StringQ", "@", "#"}]}], ",", " ", 
                RowBox[{
                 RowBox[{"tag", "=", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"i", "++"}], "]"}]}], ";", 
                 RowBox[{
                  RowBox[{"map", "[", "tag", "]"}], "=", "#"}], ";", "tag"}], 
                ",", " ", "#"}], "]"}], "&"}], "/@", "split"}], ",", "\n", 
            "\t", "\t\t\t\t\t", "cssSelectorPostProcess"}], "\n", "\t", 
           "\t\t\t\t\t", "]"}], ",", "\n", "\t", "\t\t\t\t", "map", ",", "\n",
           "\t\t\t\t\t", "1"}], "\n", "\t\t\t\t\t", "]"}], ",", "\n", 
        "\t\t\t\t", "1", ",", "\n", "\t\t\t\t", "StringExpression"}], "\n", 
       "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "sel_", "}"}], "\[RuleDelayed]", "sel"}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"_", "\[Rule]", "$Failed"}]}], "\n", "\t\t\t", "}"}], "]"}], 
      "@", "\n", "\t\t", 
      RowBox[{"Fold", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"FixedPoint", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Replace", "[", "\n", "\t", "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"start___", ",", " ", "a_", ",", " ", 
               RowBox[{"j", ":", 
                RowBox[{"CSSCombinator", "[", "#2", "]"}]}], ",", " ", "b_", 
               ",", " ", "end___"}], "}"}], ":>", "\n", "\t", "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"start", ",", " ", 
               RowBox[{"j", "[", 
                RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", "end"}], 
              "}"}]}], "\n", "\t", "\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
           "#"}], "\n", "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t\t\t", 
        "split", ",", "\n", "\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{
         "\"\<Or\>\"", ",", "\n", "\t\t\t\t", "\"\<Descendant\>\"", ",", "\n",
           "\t\t\t\t", "_"}], "\n", "\t\t\t\t", "}"}]}], "\n", "\t\t\t", 
       "]"}]}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"1a4a9cae-5695-4321-a32f-4c54c6423144"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Compile\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"a0c473c7-bb31-4c05-9b84-2b9857b39ea4"],

Cell["\<\
\[LeftCeiling]
\tThis should map to BFS rules and then those may be compiled down to a \
single Select if possible
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"56a0e4f0-8b47-4d3b-a0b1-43ba8518c8c8"],

Cell[BoxData[
 RowBox[{"cssSelectorCompile", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"391ceb0e-b1d0-4ba1-83ec-697e98680e53"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Or\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9fbf43ce-9c95-420c-b8f3-e14264269fb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cssSelectorCompile", "[", 
    RowBox[{
     RowBox[{"CSSCombinator", "[", "\"\<Or\>\"", "]"}], "[", 
     RowBox[{"a_", ",", " ", "b_"}], "]"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"c1", "=", 
        RowBox[{"cssSelectorCompile", "[", "a", "]"}]}], ",", "\n", "\t\t\t", 
       
       RowBox[{"c2", "=", 
        RowBox[{"cssSelectorCompile", "[", "b", "]"}]}]}], "\n", "\t\t\t", 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Or", "[", 
       RowBox[{
        RowBox[{"c1", "[", 
         RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
        RowBox[{"c2", "[", 
         RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}]}], "]"}], 
      "&"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"618ba419-8d8f-42ab-92e0-f011a33bf7b2"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Child\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"5c12ad18-5568-456c-b3c6-c00bbf08fc9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSCombinator", "[", "\"\<Child\>\"", "]"}], "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"c1", "=", 
       RowBox[{"cssSelectorCompile", "[", "b", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"cssSelectorCompile", "[", "a", "]"}], "[", 
        RowBox[{"#2", ",", " ", 
         RowBox[{
          RowBox[{"$ancestors", "[", "#2", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", " ", 
         RowBox[{"#3", "-", "1"}]}], "]"}]}]}], "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
       "c2"}], "]"}], "&"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4734d568-53b7-4bd9-a331-492d7dbc5346"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Descendant\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1957f502-366a-4c1e-bc0e-8abdcf92db93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSCombinator", "[", "\"\<Descendant\>\"", "]"}], "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"c1", "=", 
       RowBox[{"cssSelectorCompile", "[", "b", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"cssSelectorCompile", "[", "a", "]"}], "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{
          RowBox[{"$ancestors", "[", "#", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", " ", "None"}], "]"}]}]}], 
     "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
       RowBox[{"AnyTrue", "[", 
        RowBox[{
         RowBox[{"$ancestors", "[", "#", "]"}], ",", " ", 
         RowBox[{"c2", "&"}]}], "]"}]}], "]"}], "&"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"23f95221-f0fe-477a-8b1a-4ec673249d99"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Next\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"15ce3465-526c-4251-a41a-96057547545f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cssSelectorCompile", "[", 
    RowBox[{
     RowBox[{"CSSCombinator", "[", "\"\<Next\>\"", "]"}], "[", 
     RowBox[{"a_", ",", " ", "b_"}], "]"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"c1", "=", 
        RowBox[{"cssSelectorCompile", "[", "b", "]"}]}], ",", "\n", "\t\t\t", 
       
       RowBox[{"c2", "=", 
        RowBox[{
         RowBox[{"cssSelectorCompile", "[", "a", "]"}], "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{
           RowBox[{"$ancestors", "[", "#", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], ",", " ", "None"}], "]"}]}]}], 
      "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"And", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"c1", "[", 
         RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", "\n",
         "\t\t\t", 
        RowBox[{"AnyTrue", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"$priors", "[", "#", "]"}], ",", " ", 
            RowBox[{"UpTo", "[", "1", "]"}]}], "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"c2", "&"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
       "]"}], "&"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"b884e8ee-f6cf-4dc2-8f0d-ef02cf8bbf68"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Follows\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"d53f9d82-537b-48bd-8753-cc19c9fe0ed4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSCombinator", "[", "\"\<Follows\>\"", "]"}], "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"c1", "=", 
       RowBox[{"cssSelectorCompile", "[", "b", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"cssSelectorCompile", "[", "a", "]"}], "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{
          RowBox[{"$ancestors", "[", "#", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", " ", "None"}], "]"}]}]}], 
     "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Or", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", "\n", 
       "\t\t\t", 
       RowBox[{"AnyTrue", "[", 
        RowBox[{
         RowBox[{"$priors", "[", "#", "]"}], ",", " ", 
         RowBox[{"c2", "&"}]}], "]"}]}], "\n", "\t\t\t", "]"}], "&"}]}], "\n",
    "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"9096e681-7b72-4fea-8bc5-cb636439d1a4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ID\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"aa958915-0fca-45c4-bd40-91c9d0cbbe82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<ID\>\"", "]"}], "[", "a_", "]"}], "]"}], 
  ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"$data", "[", 
     RowBox[{"#", ",", " ", "\"\<Meta\>\"", ",", " ", "\"\<id\>\""}], "]"}], 
    "\[Equal]", "a"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"d7bf16fd-5cf0-4da9-90aa-43670551bdba"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Class\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"885480d4-0a16-4def-8035-3df44c1c1cc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Class\>\"", "]"}], "[", "a_", "]"}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringQ", "[", "#", "]"}], "&&", 
      RowBox[{"StringContainsQ", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"a", "~~", 
         RowBox[{"(", 
          RowBox[{"\"\< \>\"", "|", "EndOfString"}], ")"}]}]}], "]"}]}], 
     "&"}], "[", "\n", "\t\t", 
    RowBox[{"$data", "[", 
     RowBox[{"#", ",", " ", "\"\<Meta\>\"", ",", " ", "\"\<class\>\""}], 
     "]"}], "\n", "\t\t", "]"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"2ee24d4b-fb33-4b03-861b-8de9f506028a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Element\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f57ee52a-7165-4499-9a8b-6e0239b55949"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Element\>\"", "]"}], "[", "a_", "]"}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"$data", "[", 
     RowBox[{"#", ",", " ", "\"\<Type\>\""}], "]"}], "\[Equal]", "a"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"bdcccfcf-10a1-41b0-9a22-06765a653333"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Attribute\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c387a6ce-fb14-4b93-8f51-acd0a7e28ea9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", "attr_", 
    "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"KeyExistsQ", "[", 
    RowBox[{
     RowBox[{"$data", "[", 
      RowBox[{"#", ",", " ", "\"\<Meta\>\""}], "]"}], ",", " ", "attr"}], 
    "]"}], "&"}]}]], \
"CodeInput",ExpressionUUID->"9c0ce94d-d56d-4d0c-8f84-775fb4a70b6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{"\"\<~\>\"", "|", "\"\<*\>\""}], ",", " ", "attr_", ",", " ", 
     "val_"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringQ", "[", "#", "]"}], "&&", 
      RowBox[{"StringContainsQ", "[", 
       RowBox[{"#", ",", " ", "val"}], "]"}]}], "&"}], "[", 
    RowBox[{"$data", "[", 
     RowBox[{"#", ",", " ", "\"\<Meta\>\"", ",", " ", "attr"}], "]"}], "]"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"2657bae2-e430-4a81-acfd-826526027fa9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{"\"\<|\>\"", "|", "\"\<^\>\""}], ",", " ", "attr_", ",", " ", 
     "val_"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringQ", "[", "#", "]"}], "&&", 
      RowBox[{"StringStartsQ", "[", 
       RowBox[{"#", ",", " ", "val"}], "]"}]}], "&"}], "[", 
    RowBox[{"$data", "[", 
     RowBox[{"#", ",", " ", "\"\<Meta\>\"", ",", " ", "attr"}], "]"}], "]"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"acd136f7-cc31-43d9-9054-646ecb73890e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", 
    RowBox[{"\"\<$\>\"", ",", " ", "attr_", ",", " ", "val_"}], "]"}], "]"}], 
  ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringQ", "[", "#", "]"}], "&&", 
      RowBox[{"StringEndsQ", "[", 
       RowBox[{"#", ",", " ", "val"}], "]"}]}], "&"}], "[", 
    RowBox[{"$data", "[", 
     RowBox[{"#", ",", " ", "\"\<Meta\>\"", ",", " ", "attr"}], "]"}], "]"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"f48c2376-35d7-4881-b86b-51b68b82effb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", 
    RowBox[{"oops_", ",", " ", "attr_", ",", " ", "val_"}], "]"}], "]"}], ":=",
   "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"$data", "[", 
     RowBox[{"#", ",", " ", "\"\<Meta\>\"", ",", " ", 
      RowBox[{"attr", "<>", "oops"}]}], "]"}], "==", "val"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"c90a61d3-c541-4a16-9c44-3fdb2b2ee9b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]condenseNodeFuncs\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e8bba73c-f198-4115-a5ce-e3d36bea15f6"],

Cell["\<\
\[LeftCeiling]Originally this was gonna be more complex, but we\
\[CloseCurlyQuote]ll leave it as is\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"fb6a10bf-48c9-4784-9590-c93b7f481a96"],

Cell[BoxData[
 RowBox[{"condenseNodeFuncs", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"30d0dbb7-7da3-4768-b074-512e087402ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"condenseNodeFuncs", "[", "\n", "\t", 
   RowBox[{"f", ":", 
    RowBox[{"Function", "[", "b_", "]"}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"node", ",", "parent", ",", "depth"}], "}"}], ",", " ", 
    RowBox[{"Evaluate", "@", 
     RowBox[{"f", "[", 
      RowBox[{"node", ",", "parent", ",", "depth"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"\t"}]}], \
"CodeInput",ExpressionUUID->"25a79e8c-6216-4bc6-91e2-58421641c8f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]downconvertNodeFunc\[RightFloor]", "CodeSubsubsubsection",
 
 Evaluatable->True,ExpressionUUID->"04d46bf9-833f-4a21-8480-e5c43e1f0195"],

Cell[BoxData[
 RowBox[{
  RowBox[{"downconvertNodeFunc", "[", "sel_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "node", ",", " ", "parent", ",", " ", "depth", ",", "\n", "\t\t\t", 
      "$ancestors", ",", " ", "$priors", ",", "\n", "\t\t\t", "$akids", ",", 
      " ", "$data", ",", "\n", "\t\t\t", "Part", ",", " ", "And", ",", " ", 
      "Or", ",", "\n", "\t\t\t", "Equal", ",", " ", "Take", ",", " ", 
      "AnyTrue", ",", "\n", "\t\t\t", "StringContainsQ", ",", " ", 
      "StringStartsQ", ",", "\n", "\t\t\t", "StringEndsQ", ",", " ", 
      "StringQ"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "node", "}"}], ",", " ", "\n", "\t\t\t", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"sel", "[", 
         RowBox[{"node", ",", " ", 
          RowBox[{"node", "[", "\"\<Parent\>\"", "]"}], ",", " ", "None"}], 
         "]"}], "/.", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"$data", "[", 
           RowBox[{"node", ",", " ", "x__"}], "]"}], ":>", 
          RowBox[{"node", "[", "x", "]"}]}], "\n", "\t\t\t\t\t", "}"}]}], 
       "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4965b4d2-d3a9-4122-8e69-a30104be1707"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CompileCSSSelector\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"6c1bcd85-6fb4-4140-ba01-73b613a7030c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CompileCSSSelector", "[", "selector_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "node", ",", " ", "parent", ",", " ", "depth", ",", "\n", "\t\t\t", 
      "$ancestors", ",", " ", "$priors", ",", "\n", "\t\t\t", "$akids", ",", 
      " ", "$data", ",", "\n", "\t\t\t", "Part", ",", " ", "And", ",", " ", 
      "Or", ",", "\n", "\t\t\t", "Equal", ",", " ", "Take", ",", " ", 
      "AnyTrue", ",", "\n", "\t\t\t", "StringContainsQ", ",", " ", 
      "StringStartsQ", ",", "\n", "\t\t\t", "StringEndsQ", ",", " ", 
      "StringQ"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"condenseNodeFuncs", "@", "\n", "\t\t\t", 
     RowBox[{"cssSelectorCompile", "[", "selector", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"892e495d-6f0b-421a-8b5b-468cc76657d6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]DFSelect\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"db855833-e373-4d63-8c40-c643c17f2e97"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"prepVertex", "[", 
    RowBox[{"u_", ",", " ", "v_", ",", " ", "d_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"prevActive", "=", 
       RowBox[{"Lookup", "[", 
        RowBox[{"$akids", ",", " ", "v", ",", " ", "Nothing"}], "]"}]}], 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"$ancestors", "[", "u", "]"}], "=", "\n", "\t\t\t", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{"$ancestors", ",", " ", "v", ",", " ", 
           RowBox[{"{", "None", "}"}]}], "]"}], ",", " ", "v"}], "]"}]}], ";",
       "\n", "\t\t", 
      RowBox[{
       RowBox[{"$priors", "[", "u", "]"}], "=", "\n", "\t\t\t", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{"$priors", ",", " ", "prevActive", ",", " ", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "prevActive"}], "]"}]}], 
      ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"$akids", "[", "v", "]"}], "=", "u"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringStartsQ", "[", 
         RowBox[{"u", ",", " ", "\"\<table:\>\""}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", " ", "v", ",", " ", "d"}], "}"}], ",", " ", 
          RowBox[{"$ancestors", "[", "u", "]"}], ",", " ", 
          RowBox[{"$priors", "[", "u", "]"}]}], "}"}]}], "]"}]}]}], "\n", 
    "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"a7e808db-7cbb-457b-b8bf-434398d79710"],

Cell[BoxData[
 RowBox[{
  RowBox[{"discoverVertexFunc", "[", "nf_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Function", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"sown", "==", "toTake"}], ",", " ", 
      RowBox[{"Throw", "[", "\"\<Done\>\"", "]"}]}], "]"}], ";", "\n", "\t\t", 
    RowBox[{"prepVertex", "[", "##", "]"}], ";", "\n", "\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"nf", "[", "##", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Sow", "[", "#", "]"}], ";", 
       RowBox[{"sown", "++"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"sown", "==", "toTake"}], ",", " ", 
         RowBox[{"Throw", "[", "\"\<Done\>\"", "]"}]}], "]"}]}]}], "]"}]}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"b71bb1ec-33d3-4b74-88f4-a9540f395842"],

Cell[BoxData[
 RowBox[{"CSSDFSelect", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"463597a9-21ba-4a5c-959e-19cd4575bbf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CSSDFSelect", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "vertexFunc_", ",", " ", 
    RowBox[{"take_:", "All"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"$ancestors", "=", 
       RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"$akids", "=", 
       RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"$priors", "=", 
       RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"$data", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"toTake", "=", "take"}], ",", "\n", "\t\t\t", 
      RowBox[{"sown", "=", "0"}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    
    RowBox[{
     RowBox[{
      RowBox[{"Reap", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Catch", "@", "\n", "\t\t\t\t", 
         RowBox[{"DepthFirstScan", "[", "\n", "\t", "\t\t\t\t", 
          RowBox[{
           RowBox[{"VertexDelete", "[", 
            RowBox[{
             RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", " ", 
             "\"\<Root\>\""}], "]"}], ",", "\n", "\t", "\t\t\t\t", 
           RowBox[{"RootNode", "[", "x", "]"}], ",", "\n", "\t", "\t\t\t\t", 
           RowBox[{"\"\<DiscoverVertex\>\"", "\[Rule]", 
            RowBox[{"discoverVertexFunc", "[", "vertexFunc", "]"}]}]}], "\n", 
          "\t\t\t\t\t", "]"}]}], ";"}], "\n", "\t\t\t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "~", "Flatten", "~", "1"}]}], "\n", 
   "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"4e77d2b5-5acf-4793-9c7f-2e27214bde75"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CSSSelect\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"9871e5eb-3bd2-4f9a-8d49-1083a1d945e0"],

Cell[BoxData[
 RowBox[{"CSSSelect", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"838d1984-8e19-4881-8a36-231034dc9c14"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CSSSelect", "[", 
    RowBox[{"x_", ",", " ", "selector_", ",", " ", 
     RowBox[{"n_:", "All"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sel", "=", 
       RowBox[{"CompileCSSSelector", "@", 
        RowBox[{"ParseCSSSelector", "[", "selector", "]"}]}]}], "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FreeQ", "[", 
        RowBox[{"sel", ",", " ", 
         RowBox[{"$ancestors", "|", "$priors"}]}], "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"$data", "=", 
           RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], "}"}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"Keys", "@", "\n", "\t\t\t\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"IntegerQ", "@", "n"}], "&&", 
             RowBox[{"n", ">", "0"}]}], ",", "\n", "\t\t\t\t\t\t", 
            RowBox[{"Select", "[", 
             RowBox[{"$data", ",", " ", 
              RowBox[{"downconvertNodeFunc", "@", "sel"}], ",", " ", "n"}], 
             "]"}], ",", "\n", "\t\t\t\t\t\t", 
            RowBox[{"Select", "[", 
             RowBox[{"$data", ",", " ", 
              RowBox[{"downconvertNodeFunc", "@", "sel"}]}], "]"}]}], "\n", 
           "\t\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t", "]"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"CSSDFSelect", "[", 
        RowBox[{"x", ",", " ", "sel", ",", " ", "n"}], "]"}]}], "\n", 
      "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"6f7aa287-392e-402a-98b5-d39d59b3263b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Graph API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"b75586c8-101e-4958-9b41-8b71d228ecb8"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLSubgraph\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"71b38dca-777e-4cc0-9657-d4201e1578ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xmlNodeTree", "[", 
    RowBox[{"d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"n", ",", "\n", "\t\t", 
     RowBox[{"Cases", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"n", ",", " ", "\"\<Children\>\""}], "]"}], ",", " ", "\n", 
       "\t", "\t\t", 
       RowBox[{
        RowBox[{"Node", "[", "s_", "]"}], "\[RuleDelayed]", 
        RowBox[{"xmlNodeFullChildren", "[", 
         RowBox[{"d", ",", " ", "s"}], "]"}]}]}], "\n", "\t\t\t", "]"}]}], 
    "\n", "\t\t", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xmlNodeTree", "~", "SetAttributes", "~", "HoldFirst"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"a9e21c7b-0d0f-4500-a919-146994420d28"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xmlSubtree", "[", 
    RowBox[{"g_", ",", " ", "d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"SelectFirst", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"ConnectedComponents", "[", 
      RowBox[{"VertexDelete", "[", 
       RowBox[{"g", ",", " ", 
        RowBox[{"d", "[", 
         RowBox[{"n", ",", " ", "\"\<Parent\>\""}], "]"}]}], "]"}], "]"}], 
     ",", "\n", "\t\t", 
     RowBox[{"MemberQ", "[", "n", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"93e64696-ba75-463c-b5ad-7411d20cb71b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLSubgraph", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "node_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "verts", ",", "\n", "\t\t\t", "sa", ",", "\n", "\t\t\t", "sg", ",", "\n",
       "\t\t\t", 
      RowBox[{"g", "=", 
       RowBox[{"x", "[", "\"\<Graph\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"d", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}]}], "\n", "\t\t\t", "}"}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"verts", "=", 
      RowBox[{"xmlSubtree", "[", 
       RowBox[{"g", ",", " ", "d", ",", " ", "node"}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"XMLGraph", "@", "\n", "\t\t\t", 
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Data\>\"", "\[Rule]", 
         RowBox[{"AssociationThread", "[", 
          RowBox[{"verts", ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"d", ",", " ", "verts"}], "]"}]}], "]"}]}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"\"\<Graph\>\"", "\[Rule]", 
         RowBox[{"EdgeAdd", "[", 
          RowBox[{
           RowBox[{"Subgraph", "[", 
            RowBox[{"g", ",", " ", "verts"}], "]"}], ",", " ", 
           RowBox[{"\"\<Root\>\"", "\[UndirectedEdge]", "node"}]}], "]"}]}]}],
        "\n", "\t\t\t\t", "|>"}]}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"ecd87349-4c05-4694-83dc-a6f533b52daa"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FormattedXMLGraph\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"47e93879-7691-4d2e-b9a8-36f9b578ab76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "FormattedXMLGraph", "]"}], "=", "\n", "\t", 
    RowBox[{"Join", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Options", "[", "Graph", "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{"ColorRules", "->", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"\"\<Root\>\"", "\[Rule]", "Black"}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"\"\<body\>\"", "\[Rule]", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}]}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<head\>\"", "->", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<div\>\"", "->", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "3", "]"}]}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<p\>\"", "->", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "4", "]"}]}]}], "\n", 
         "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", 
     "]"}]}], ";"}], "\t"}], "\n", 
 RowBox[{
  RowBox[{"FormattedXMLGraph", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"VertexDelete", "[", 
           RowBox[{"#", ",", " ", "\"\<Root\>\""}], "]"}], "&"}], "@"}], 
        "*)"}], 
       RowBox[{"x", "[", "\"\<Graph\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"r", "=", 
       RowBox[{"RootNode", "[", "x", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"cr", "=", 
       RowBox[{"OptionValue", "[", "ColorRules", "]"}]}], ",", "\n", "\t\t\t",
       "vs"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"cr", "=", "\n", "\t\t\t", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"cr", "/.", 
           RowBox[{"\"\<Root\>\"", "\[Rule]", "r"}]}], ",", " ", 
          RowBox[{"_", "\[Rule]", "None"}]}], "}"}]}]}]}], ";", "\n", "\t\t", 
     
     RowBox[{"vs", "=", "\n", "\t\t\t", 
      RowBox[{"Normal", "@", 
       RowBox[{
        RowBox[{"DeleteCases", "[", "None", "]"}], "@", "\n", "\t\t\t\t", 
        RowBox[{"AssociationMap", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{
             RowBox[{"#", "[", "\"\<Type\>\"", "]"}], ",", " ", "cr"}], "]"}],
            "&"}], ",", " ", "\n", "\t\t\t\t\t", 
          RowBox[{"VertexList", "@", "g"}]}], "\n", "\t\t\t\t\t", "]"}]}]}]}],
      ";", "\n", "\t\t", 
     RowBox[{"Graph", "[", "\n", "\t\t\t", 
      RowBox[{"g", ",", "\n", "\t\t\t", 
       RowBox[{"VertexStyle", "\[Rule]", "vs"}], ",", "\n", "\t\t\t", 
       RowBox[{"GraphLayout", "->", "\n", "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"\"\<LayeredDigraphEmbedding\>\"", ",", " ", 
          RowBox[{"\"\<RootVertex\>\"", "\[Rule]", "r"}]}], "}"}]}], ",", 
       "\n", "\t\t\t", "ops"}], "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"6b2a27f5-0109-4457-9e6b-a11224bce883"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraphSort\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"bb2064c8-d518-47d1-9e9e-b03b0131b34b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLGraphSort", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      "graph", ",", "\n", "\t\t\t", "vl", ",", "\n", "\t\t\t", "vo"}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"graph", "=", 
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"vl", "=", 
      RowBox[{"VertexList", "@", "graph"}]}], ";", "\n", "\t\t", 
     RowBox[{"vo", "=", 
      RowBox[{"Ordering", "@", 
       RowBox[{"GraphDistance", "[", 
        RowBox[{"graph", ",", " ", "\"\<Root\>\""}], "]"}]}]}], ";", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], "=", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"VertexList", "[", "a", "]"}], "[", 
         RowBox[{"[", "vo", "]"}], "]"}], ",", " ", 
        RowBox[{"EdgeList", "[", "a", "]"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MutableGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
       RowBox[{"XMLGraph", "[", "a", "]"}]}], "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"b86f5306-a58d-4813-a36b-055fced6b260"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Scans\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"08469ad7-99b5-4b1a-80b9-759b393bcd3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLGraphBFS", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\n", "\t", 
    RowBox[{"rootNode", ":", 
     RowBox[{"_String", "|", 
      RowBox[{"Automatic", ":", "Automatic"}]}]}], ",", " ", "\n", "\t", 
    RowBox[{"events_", "?", "OptionQ"}], ",", " ", "e___"}], "\n", "\t", 
   "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"VertexDelete", "[", 
        RowBox[{
         RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", " ", "\"\<Root\>\""}],
         "]"}]}], ",", " ", 
      RowBox[{"r", "=", 
       RowBox[{"x", "[", "\"\<Root\>\"", "]"}]}]}], "}"}], ",", "\n", "\t\t", 
    
    RowBox[{"BreadthFirstScan", "[", 
     RowBox[{"g", ",", " ", "r", ",", " ", "events", ",", " ", "e"}], "]"}]}],
    "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"60f391cc-7419-48ef-972e-f0a22fc36d40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLGraphDFS", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\n", "\t", 
    RowBox[{"rootNode", ":", 
     RowBox[{"_String", "|", 
      RowBox[{"Automatic", ":", "Automatic"}]}]}], ",", " ", "\n", "\t", 
    RowBox[{"events_", "?", "OptionQ"}], ",", " ", "e___"}], "\n", "\t", 
   "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"VertexDelete", "[", 
        RowBox[{
         RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", " ", "\"\<Root\>\""}],
         "]"}]}], ",", " ", 
      RowBox[{"r", "=", 
       RowBox[{"x", "[", "\"\<Root\>\"", "]"}]}]}], "}"}], ",", "\n", "\t\t", 
    
    RowBox[{"DepthFirstScan", "[", 
     RowBox[{"g", ",", " ", "r", ",", " ", "events", ",", " ", "e"}], "]"}]}],
    "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"755181fe-08c0-4a1a-95ec-0f8fe8996265"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Conversion API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"d347c7c0-7c3d-4a29-8fdc-7d6e78f59c28"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FromXMLAssociation\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"237a452f-9354-434f-bd7e-0158aedfe6e0"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]fromAssoc\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"cb2f683f-436f-43a0-8833-4179ecbc1bf0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fromAssoc", "[", 
   RowBox[{"p_", ",", " ", "a_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"name", "=", "\n", "\t\t\t\t", 
      RowBox[{"Lookup", "[", 
       RowBox[{"a", ",", " ", "\"\<Name\>\"", ",", " ", 
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"CreateUUID", "[", 
            RowBox[{
             RowBox[{"a", "[", "\"\<Type\>\"", "]"}], "<>", "\"\<:\>\""}], 
            "]"}], ",", " ", "\"\<-\>\"", ",", " ", "2"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "\n", "\t\t\t", "}"}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Sow", "@", "\n", "\t\t\t", 
      RowBox[{"Join", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"<|", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"\"\<Parent\>\"", "\[Rule]", "p"}], ",", "\n", "\t", 
          "\t\t\t\t", 
          RowBox[{"\"\<Name\>\"", "\[Rule]", "name"}]}], "\n", "\t\t\t\t\t", 
         "|>"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"MapAt", "[", 
         RowBox[{"a", ",", "\n", "\t", "\t", "\t", "\t\t", 
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{"#", ",", " ", "\n", "\t", "\t", "\t\t\t\t", 
             RowBox[{
              RowBox[{"b_Association", "?", "AssociationQ"}], ":>", "\n", 
              "\t", "\t", "\t\t\t\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"ba", "=", 
                  RowBox[{"fromAssoc", "[", 
                   RowBox[{"name", ",", " ", "b"}], "]"}]}], "}"}], ",", "\n",
                 "\t", "\t", "\t\t\t\t\t\t", 
                RowBox[{"Node", "[", 
                 RowBox[{"ba", "[", "\"\<Name\>\"", "]"}], "]"}]}], "\n", 
               "\t", "\t", "\t\t\t\t\t\t", "]"}]}]}], "\n", "\t", "\t", 
            "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t", "\t", "\t\t\t", 
          "\"\<Children\>\""}], "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t",
        "]"}]}], ";"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8c083653-08a7-4bb9-9624-9692ddbb4b9b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FromXMLAssociation\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"40b833b5-9a66-4e9e-85ae-2e59624fadaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FromXMLAssociation", "[", "a_Association", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"data", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Reap", "[", 
          RowBox[{"fromAssoc", "[", 
           RowBox[{"\"\<Root\>\"", ",", " ", "a"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"ConstructXMLGraph", "@", "\n", "\t\t\t", 
     RowBox[{"<|", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"\"\<Data\>\"", "\[Rule]", 
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"data", ",", " ", "\"\<Name\>\""}], "]"}], ",", " ", 
          "data"}], "]"}]}], ",", "\n", "\t\t\t\t", 
       RowBox[{"\"\<Graph\>\"", "\[Rule]", 
        RowBox[{"Thread", "[", 
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{
           RowBox[{"Lookup", "[", 
            RowBox[{"data", ",", " ", "\"\<Parent\>\""}], "]"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"data", ",", " ", "\"\<Name\>\""}], "]"}]}], "]"}], 
         "]"}]}]}], "\n", "\t\t\t\t", "|>"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"72369a88-2107-49a5-86cc-4f43c25676a8"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ToXMLAssociation\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"f4e90f05-9d37-46f0-bb8f-ec958bd5b34e"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]BFS\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"93390014-2133-4b33-b537-47d1ceca9659"],

Cell["\<\
\[LeftCeiling]
\tI think a recursive algorithm will actually perform better
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"df4dd0b2-d897-4e66-b2b5-3d1530b79403"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"insertAssociationVertex", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"d_", ",", " ", "a_", ",", " ", "p_"}], "]"}], "]"}], "[", 
    RowBox[{"node_", ",", " ", "parent_", ",", " ", "depth_"}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"(", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "node", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "[", "parent", "]"}], ",", " ", "parent"}], "}"}]}], ";",
      "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "[", "node", "]"}], ",", " ", "node"}], "}"}]}]}], 
       "]"}], "=", 
      RowBox[{"d", "[", "a", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{"p", "[", "node", "]"}], "}"}]}]}], "]"}], "="}]}], "\n", 
    "\t\t", ")"}]}], 
  "*)"}]], "CodeInput",ExpressionUUID->"672d3279-9eeb-4550-b298-9e17e4f6ff7c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ToXMLAssociation", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"p", "=", 
        RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"d", "=", 
        RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"r", "=", 
        RowBox[{"RootNode", "[", "x", "]"}]}]}], "\n", "\t\t\t", "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", "r", "]"}], "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t\t", 
      RowBox[{"BreadthFirstScan", "[", 
       RowBox[{
        RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", "\n", "\t\t\t", "r", 
        ",", "\n", "\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{"\"\<DiscoverVertex\>\"", "->", "\n", "\t\t\t\t\t", 
          RowBox[{"insertAssociationVertex", "[", 
           RowBox[{"Hold", "[", 
            RowBox[{"d", ",", " ", "a", ",", " ", "p"}], "]"}], "]"}]}], "\n",
          "\t\t\t\t", "}"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
      "a"}]}], "\n", "\t\t", "]"}]}], 
  "*)"}]], "CodeInput",ExpressionUUID->"91a348ee-c9c0-49a6-adfe-73e1bd1c0235"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Recursive\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1062c08d-401c-44db-8815-4570823b6847"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toXMLAssociationRec", "[", 
    RowBox[{"d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"MapAt", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{
         RowBox[{"Node", "[", "s_", "]"}], ":>", 
         RowBox[{"toXMLAssociationRec", "[", 
          RowBox[{"d", ",", " ", "s"}], "]"}]}], ",", " ", "1"}], "]"}], 
      "&"}], ",", "\n", "\t\t", 
     RowBox[{"d", "[", "n", "]"}], ",", "\n", "\t\t", "\"\<Children\>\""}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"toXMLAssociationRec", "~", "SetAttributes", "~", 
  "HoldFirst"}]}], \
"CodeInput",ExpressionUUID->"c8fbdef5-fea3-4ad8-917f-2700317584f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToXMLAssociation", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"r", "=", 
       RowBox[{"RootNode", "[", "x", "]"}]}]}], "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{"toXMLAssociationRec", "[", 
     RowBox[{"d", ",", " ", "r"}], "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4108d398-8fee-4eb9-b210-3ee753f66d1b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FromXMLObject\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"da145b86-7024-4067-8f0c-5ada82a3fc2f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLObject", "[", "s_String", "]"}], ":=", "\n", "\t", 
   RowBox[{"FromXMLObject", "@", "\n", "\t\t", 
    RowBox[{"Quiet", "@", 
     RowBox[{"Check", "[", 
      RowBox[{
       RowBox[{"ImportString", "[", 
        RowBox[{"s", ",", " ", "\"\<XML\>\""}], "]"}], ",", " ", 
       RowBox[{"ImportString", "[", 
        RowBox[{"s", ",", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<HTML\>\"", ",", " ", "\"\<XMLObject\>\""}], "}"}]}], 
        "]"}]}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLObject", "[", 
    RowBox[{
     RowBox[{"XMLObject", "[", "_", "]"}], "[", 
     RowBox[{"_", ",", " ", "d_", ",", " ", "_"}], "]"}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"FromXMLObject", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"FromXMLObject", "[", "x_XMLElement", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"nodes", "=", 
       RowBox[{"CreateNode", "[", 
        RowBox[{"\"\<Root\>\"", "\[Rule]", "x"}], "]"}]}], ",", "\n", 
      "\t\t\t", "edges", ",", "\n", "\t\t\t", "graph", ",", "\n", "\t\t\t", 
      "data"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"nodes", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"nodes", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"data", "=", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"Lookup", "[", 
         RowBox[{"nodes", ",", " ", "\"\<Name\>\""}], "]"}], ",", " ", 
        "nodes"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"edges", "=", "\n", "\t\t\t", 
      RowBox[{"Thread", "@", "\n", "\t\t\t\t", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{"nodes", ",", " ", "\"\<Parent\>\""}], "]"}], ",", " ", 
         RowBox[{"Lookup", "[", 
          RowBox[{"nodes", ",", " ", "\"\<Name\>\""}], "]"}]}], "]"}]}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"graph", "=", 
      RowBox[{"TreeGraph", "[", "edges", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"ConstructXMLGraph", "@", "\n", "\t\t\t", 
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Graph\>\"", "\[Rule]", "graph"}], ",", "\n", "\t\t\t\t", 
        
        RowBox[{"\"\<Data\>\"", "\[Rule]", "data"}]}], "\n", "\t\t\t\t", 
       "|>"}]}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"692f5bff-182e-4f1d-9cb7-13eebaf16c90"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ToXMLObject\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"30ba4923-d27c-4e15-93d2-d9ff7ee0a16b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toXMLElementRec", "[", 
    RowBox[{"d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", "=", 
       RowBox[{"d", "[", "n", "]"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"XMLElement", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"a", "[", "\"\<Type\>\"", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"a", "[", "\"\<Meta\>\"", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"a", "[", "\"\<Children\>\"", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Node", "[", "s_", "]"}], ":>", 
          RowBox[{"toXMLElementRec", "[", 
           RowBox[{"d", ",", " ", "s"}], "]"}]}], ",", " ", "1"}], "]"}]}], 
      "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"toXMLElementRec", "~", "SetAttributes", "~", 
  "HoldFirst"}]}], \
"CodeInput",ExpressionUUID->"08bc9c6e-ab6e-4187-a164-74924160792d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToXMLObject", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"r", "=", 
       RowBox[{"RootNode", "[", "x", "]"}]}]}], "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{"toXMLElementRec", "[", 
     RowBox[{"d", ",", " ", "r"}], "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5c0c5bae-4ba8-44d0-bc9a-47ae2d0c7998"]
}, Closed]]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"62a819e5-936f-4d32-9156-\
8a7af6518a86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"acc9d489-f0b1-47cd-a8c0-\
e469063eb3cc"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"4beedad2-ba75-4bf0-b3ff-\
dc6eca6b6029"],

Cell[BoxData[
 RowBox[{"Remove", "[", "\"\<XMLGraph`*`*\>\"", "]"}]], "Input",
 CellLabel->
  "In[153]:=",ExpressionUUID->"302a191d-18fe-4ca1-915f-878970676795"],

Cell[BoxData[
 RowBox[{"<<", "XMLGraph`"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"89d01cc7-3ca8-4123-b89e-9f5ee60ce202"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testXML", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://developer.github.com/apps/building-oauth-apps/understanding-\
scopes-for-oauth-apps/#available-scopes\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<HTML\>\"", ",", " ", "\"\<XMLObject\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellLabel->"In[97]:=",ExpressionUUID->"0c2900f8-0bcd-4023-b067-36364ca373bd"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"XMLGraph", "[", "testXML", "]"}]}]], "Input",
 CellLabel->"In[99]:=",ExpressionUUID->"2d33a223-f1ed-4f7e-b36b-6dcd6c72c9bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wsjXML", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<http://wsj.com\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<HTML\>\"", ",", " ", "\"\<XMLObject\>\""}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[192]:=",ExpressionUUID->"ee06f0ad-755e-45d0-8f1f-562fdaa8a751"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wsg", "=", 
   RowBox[{"XMLGraph", "@", "wsjXML"}]}], ";"}]], "Input",
 CellLabel->
  "In[193]:=",ExpressionUUID->"533a7b1a-64dd-474f-bf16-689d5ce9bbb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"wsg", "@", 
   RowBox[{"\"\<Type\>\"", "[", "]"}]}], "//", "Counts"}]], "Input",
 CellLabel->
  "In[194]:=",ExpressionUUID->"eb1ac200-8991-487f-8dfd-c98928a0a680"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"title\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"meta\"\>", "\[Rule]", "149"}], ",", 
   RowBox[{"\<\"link\"\>", "\[Rule]", "15"}], ",", 
   RowBox[{"\<\"script\"\>", "\[Rule]", "23"}], ",", 
   RowBox[{"\<\"head\"\>", "\[Rule]", "63"}], ",", 
   RowBox[{"\<\"noscript\"\>", "\[Rule]", "19"}], ",", 
   RowBox[{"\<\"body\"\>", "\[Rule]", "64"}], ",", 
   RowBox[{"\<\"strong\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"span\"\>", "\[Rule]", "115"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "430"}], ",", 
   RowBox[{"\<\"p\"\>", "\[Rule]", "44"}], ",", 
   RowBox[{"\<\"div\"\>", "\[Rule]", "711"}], ",", 
   RowBox[{"\<\"li\"\>", "\[Rule]", "310"}], ",", 
   RowBox[{"\<\"ul\"\>", "\[Rule]", "54"}], ",", 
   RowBox[{"\<\"header\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"nav\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"input\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"i\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"button\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"form\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"style\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"h4\"\>", "\[Rule]", "43"}], ",", 
   RowBox[{"\<\"h3\"\>", "\[Rule]", "110"}], ",", 
   RowBox[{"\<\"img\"\>", "\[Rule]", "16"}], ",", 
   RowBox[{"\<\"iframe\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"ol\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"footer\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"menu\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"html\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[194]=",ExpressionUUID->"bbeb1f23-02a1-40b2-bb67-90f4905d37e9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"wsg", "[", "\"\<Graph\>\"", "]"}]], "Input",
 CellLabel->
  "In[207]:=",ExpressionUUID->"3d4df52e-9786-426c-89bb-b168980175a0"],

Cell[BoxData[
 RowBox[{"Flatten", "@", 
  RowBox[{"Values", "@", "\[IndentingNewLine]", 
   RowBox[{"wsg", "@", 
    RowBox[{"\"\<Children\>\"", "[", "nodes", "]"}]}]}]}]], "Input",
 CellLabel->
  "In[204]:=",ExpressionUUID->"a573018f-02be-4401-95b6-cd4066360c4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"seXML", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://mathematica.stackexchange.com/\>\"", ",", " ", 
     "\"\<XMLObject\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[208]:=",ExpressionUUID->"e9cbf1a0-3a85-4dfc-b62a-f1eaee12d8a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"seg", "=", 
   RowBox[{"XMLGraph", "@", "seXML"}]}], ";"}]], "Input",
 CellLabel->
  "In[209]:=",ExpressionUUID->"37667024-1478-42a8-8853-25f572f545d4"],

Cell[BoxData[
 RowBox[{"seg", "[", "\"\<Graph\>\"", "]"}]], "Input",
 CellLabel->
  "In[210]:=",ExpressionUUID->"d5e316e1-f6ee-4fe2-b567-fe4a8b9306bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"seg", "@", 
   RowBox[{"\"\<Type\>\"", "[", "]"}]}], "//", "Counts"}]], "Input",
 CellLabel->
  "In[211]:=",ExpressionUUID->"e7844729-8360-43a5-9dc4-df67dd158a46"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"title\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"link\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"meta\"\>", "\[Rule]", "11"}], ",", 
   RowBox[{"\<\"script\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"head\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"style\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"noscript\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"body\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"div\"\>", "\[Rule]", "292"}], ",", 
   RowBox[{"\<\"header\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"svg\"\>", "\[Rule]", "11"}], ",", 
   RowBox[{"\<\"g\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"path\"\>", "\[Rule]", "16"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "265"}], ",", 
   RowBox[{"\<\"h4\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"p\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"nav\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"ol\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"input\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"button\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"form\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"li\"\>", "\[Rule]", "151"}], ",", 
   RowBox[{"\<\"span\"\>", "\[Rule]", "82"}], ",", 
   RowBox[{"\<\"h3\"\>", "\[Rule]", "17"}], ",", 
   RowBox[{"\<\"ul\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"br\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"h1\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"footer\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"h5\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"strong\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"img\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"html\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[211]=",ExpressionUUID->"f5681d03-0bc6-4985-b9ba-38462801ac84"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"seg", "=", 
   RowBox[{"XMLGraph", "@", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://mathematica.stackexchange.com/\>\"", ",", " ", 
      "\"\<XMLObject\>\""}], "]"}]}]}], ";"}]], "Input",
 CellLabel->
  "In[258]:=",ExpressionUUID->"355c952a-18c4-4249-ae4b-696533c2cb5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nodes", "=", 
  RowBox[{"seg", "@", 
   RowBox[{"\"\<Select\>\"", "[", 
    RowBox[{"\"\<.summary h3 a\>\"", ",", " ", "2"}], "]"}]}]}]], "Input",
 CellLabel->
  "In[261]:=",ExpressionUUID->"1c9eea5d-8a1a-4527-99ae-0ea5721e6cab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a:aa6a457e\"\>", ",", "\<\"a:7243db38\"\>"}], "}"}]], "Output",
 
 CellLabel->"Out[261]=",ExpressionUUID->"b643c385-317d-4be2-828e-aa43cd8a8804"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "@@", 
  RowBox[{
   RowBox[{"Flatten", "@*", "Values"}], "/@", "\[IndentingNewLine]", 
   RowBox[{"Through", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"seg", "@", 
         RowBox[{"\"\<Attribute\>\"", "[", 
          RowBox[{"#", ",", " ", "\"\<href\>\""}], "]"}]}], "&"}], ",", " ", 
       RowBox[{"seg", "@", "\"\<Children\>\""}]}], "}"}], "@", "nodes"}], 
    "]"}]}]}]], "Input",
 CellLabel->
  "In[264]:=",ExpressionUUID->"6f2d5a0b-c920-4e45-b232-3a1d38f4bf1f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"/questions/184388/unable-to-implement-bisection-method-using-\
recursion\"\>", 
    "\[Rule]", "\<\"Unable to implement bisection method using \
recursion\"\>"}], ",", 
   RowBox[{"\<\"/questions/184399/appending-numericq-automatically-to-every-\
variable-of-a-function-in-the-defini\"\>", 
    "\[Rule]", "\<\"Appending _?NumericQ automatically to every variable of a \
function in the definition\"\>"}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[264]=",ExpressionUUID->"26050f59-0f95-4014-a83a-72caa9b254f6"]
}, Open  ]],

Cell[BoxData["seg"], "Input",
 CellLabel->
  "In[268]:=",ExpressionUUID->"22bc88c5-72df-4beb-b301-c73a2e40bd9b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["XMLGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Root: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"html\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Nodes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["923", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Root: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"html\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Nodes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["923", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  "???",
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{3.7492238434891253`*^9},
 CellLabel->
  "In[269]:=",ExpressionUUID->"f8550479-977e-4ccf-ba56-942c981baa74"],

Cell[BoxData["\<\"???\"\>"], "Output",
 CellLabel->"Out[269]=",ExpressionUUID->"1348af34-1b26-4eb9-9d4c-bb1b08596e17"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"seg", "[", "\"\<Nodes\>\"", "]"}], "[", 
  RowBox[{"[", "100", "]"}], "]"}]], "Input",
 CellLabel->
  "In[275]:=",ExpressionUUID->"13ed1617-05ae-4f9a-bf11-d78ea807a42a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"seg", "[", "\"\<Nodes\>\"", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellLabel->
  "In[282]:=",ExpressionUUID->"36d056f2-759e-48af-b450-e80fd4ad3f33"],

Cell[BoxData["\<\"title:1e7d2772\"\>"], "Output",
 CellLabel->"Out[282]=",ExpressionUUID->"a2f238be-4966-4752-ac1b-6ac6616426fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"seg", "@", 
   RowBox[{"\"\<Select\>\"", "[", "\"\<.summary\>\"", "]"}]}], "//", 
  "Length"}]], "Input",
 CellLabel->
  "In[286]:=",ExpressionUUID->"326ef6de-6b06-4826-b764-2a55d3288d73"],

Cell[BoxData["33"], "Output",
 CellLabel->"Out[286]=",ExpressionUUID->"3fc637af-3a28-43d0-9cf7-49fc0a22e2e8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"sg", "=", 
  RowBox[{"seg", "@", 
   RowBox[{"\"\<Subgraph\>\"", "[", 
    RowBox[{"Last", "@", 
     RowBox[{"seg", "@", 
      RowBox[{"\"\<Select\>\"", "[", "\"\<.summary\>\"", "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellLabel->
  "In[297]:=",ExpressionUUID->"011765a5-718a-4624-8902-8754c0eab1ed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["XMLGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Root: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"div\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Nodes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["24", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Root: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"div\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Nodes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["24", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Apply[XMLGraph`XMLGraph, {
    Association[
    "Version" -> 1, "Graph" -> 
     Graph[{"div:7f55b261", "span:969942ac", "div:9c1827d0", "div:007881b4", 
        "div:00bd6e13", "div:cf4cee74", "div:4482f79c", "div:a52a7a4c", 
        "div:424c8997", "div:5a065db5", "div:6b290de4", "div:cbb1ffbd", 
        "div:0835fb75", "span:8690204c", "span:89ba5e72", "h3:a1ce0e6c", 
        "div:e2d5db05", "div:e4ebb0e4", "a:9d2cafcc", "a:5b1d2e3b", 
        "a:d643430d", "a:099e522d", "a:b58e3479", "span:65bb0e80", 
        "span:50e434bd", "Root"}, {
       Null, {{1, 2}, {3, 1}, {3, 4}, {5, 3}, {5, 6}, {5, 7}, {8, 5}, {6, 
        9}, {6, 10}, {7, 11}, {7, 12}, {8, 13}, {9, 14}, {11, 15}, {13, 16}, {
        13, 17}, {13, 18}, {16, 19}, {17, 20}, {17, 21}, {18, 22}, {18, 23}, {
        18, 24}, {22, 25}, {26, 8}}}], "Data" -> 
     Association[
      "div:7f55b261" -> 
       Association[
        "Parent" -> "div:9c1827d0", "Type" -> "div", "Name" -> "div:7f55b261",
          "Meta" -> Association["class" -> "mini-counts"], "Children" -> {
           XMLGraph`Package`Node["span:969942ac"]}], "span:969942ac" -> 
       Association[
        "Parent" -> "div:7f55b261", "Type" -> "span", "Name" -> 
         "span:969942ac", "Meta" -> Association["title" -> "320 views"], 
         "Children" -> {"320"}], "div:9c1827d0" -> 
       Association[
        "Parent" -> "div:00bd6e13", "Type" -> "div", "Name" -> "div:9c1827d0",
          "Meta" -> Association["class" -> "views"], 
         "Children" -> {"\n            ", 
           XMLGraph`Package`Node["div:7f55b261"], "\n            ", 
           XMLGraph`Package`Node["div:007881b4"], "\n        "}], 
       "div:007881b4" -> 
       Association[
        "Parent" -> "div:9c1827d0", "Type" -> "div", "Name" -> "div:007881b4",
          "Meta" -> Association[], "Children" -> {"views"}], "div:00bd6e13" -> 
       Association[
        "Parent" -> "div:a52a7a4c", "Type" -> "div", "Name" -> "div:00bd6e13",
          "Meta" -> Association[
          "class" -> "cp", "onclick" -> 
           "window.location.href='/questions/184324/computing-the-twin-prime-\
constant-with-mathematica'"], "Children" -> {"\n        ", 
           XMLGraph`Package`Node["div:cf4cee74"], "\n        ", 
           XMLGraph`Package`Node["div:4482f79c"], "\n        ", 
           XMLGraph`Package`Node["div:9c1827d0"], "\n    "}], "div:cf4cee74" -> 
       Association[
        "Parent" -> "div:00bd6e13", "Type" -> "div", "Name" -> "div:cf4cee74",
          "Meta" -> Association["class" -> "votes"], 
         "Children" -> {"\n            ", 
           XMLGraph`Package`Node["div:424c8997"], "\n            ", 
           XMLGraph`Package`Node["div:5a065db5"], "\n        "}], 
       "div:4482f79c" -> 
       Association[
        "Parent" -> "div:00bd6e13", "Type" -> "div", "Name" -> "div:4482f79c",
          "Meta" -> Association[
          "class" -> "status answered-accepted", "title" -> 
           "one of the answers was accepted as the correct answer"], 
         "Children" -> {"\n            ", 
           XMLGraph`Package`Node["div:6b290de4"], "\n            ", 
           XMLGraph`Package`Node["div:cbb1ffbd"], "\n        "}], 
       "div:a52a7a4c" -> 
       Association[
        "Parent" -> "div:258dbf00", "Type" -> "div", "Name" -> "div:a52a7a4c",
          "Meta" -> Association[
          "class" -> "question-summary narrow", "id" -> 
           "question-summary-184324"], "Children" -> {"\n    ", 
           XMLGraph`Package`Node["div:00bd6e13"], "\n    ", 
           XMLGraph`Package`Node["div:0835fb75"], "\n"}], "div:424c8997" -> 
       Association[
        "Parent" -> "div:cf4cee74", "Type" -> "div", "Name" -> "div:424c8997",
          "Meta" -> Association["class" -> "mini-counts"], "Children" -> {
           XMLGraph`Package`Node["span:8690204c"]}], "div:5a065db5" -> 
       Association[
        "Parent" -> "div:cf4cee74", "Type" -> "div", "Name" -> "div:5a065db5",
          "Meta" -> Association[], "Children" -> {"votes"}], "div:6b290de4" -> 
       Association[
        "Parent" -> "div:4482f79c", "Type" -> "div", "Name" -> "div:6b290de4",
          "Meta" -> Association["class" -> "mini-counts"], "Children" -> {
           XMLGraph`Package`Node["span:89ba5e72"]}], "div:cbb1ffbd" -> 
       Association[
        "Parent" -> "div:4482f79c", "Type" -> "div", "Name" -> "div:cbb1ffbd",
          "Meta" -> Association[], "Children" -> {"answers"}], "div:0835fb75" -> 
       Association[
        "Parent" -> "div:a52a7a4c", "Type" -> "div", "Name" -> "div:0835fb75",
          "Meta" -> Association["class" -> "summary"], 
         "Children" -> {"\n        \n        \n        ", 
           XMLGraph`Package`Node["h3:a1ce0e6c"], "\n        ", 
           XMLGraph`Package`Node["div:e2d5db05"], "\n        ", 
           XMLGraph`Package`Node["div:e4ebb0e4"], "\n    "}], "span:8690204c" -> 
       Association[
        "Parent" -> "div:424c8997", "Type" -> "span", "Name" -> 
         "span:8690204c", "Meta" -> Association["title" -> "6 votes"], 
         "Children" -> {"6"}], "span:89ba5e72" -> 
       Association[
        "Parent" -> "div:6b290de4", "Type" -> "span", "Name" -> 
         "span:89ba5e72", "Meta" -> Association["title" -> "3 answers"], 
         "Children" -> {"3"}], "h3:a1ce0e6c" -> 
       Association[
        "Parent" -> "div:0835fb75", "Type" -> "h3", "Name" -> "h3:a1ce0e6c", 
         "Meta" -> Association[], "Children" -> {
           XMLGraph`Package`Node["a:9d2cafcc"]}], "div:e2d5db05" -> 
       Association[
        "Parent" -> "div:0835fb75", "Type" -> "div", "Name" -> "div:e2d5db05",
          "Meta" -> Association[
          "class" -> "tags t-code-review t-prime-numbers"], 
         "Children" -> {"\n            ", 
           XMLGraph`Package`Node["a:5b1d2e3b"], " ", 
           XMLGraph`Package`Node["a:d643430d"], " \n        "}], 
       "div:e4ebb0e4" -> 
       Association[
        "Parent" -> "div:0835fb75", "Type" -> "div", "Name" -> "div:e4ebb0e4",
          "Meta" -> Association["class" -> "started"], 
         "Children" -> {"\n            ", 
           XMLGraph`Package`Node["a:099e522d"], "\n            ", 
           XMLGraph`Package`Node["a:b58e3479"], " ", 
           XMLGraph`Package`Node["span:65bb0e80"], "\n        "}], 
       "a:9d2cafcc" -> 
       Association[
        "Parent" -> "h3:a1ce0e6c", "Type" -> "a", "Name" -> "a:9d2cafcc", 
         "Meta" -> Association[
          "shape" -> "rect", "class" -> "question-hyperlink", "href" -> 
           "/questions/184324/computing-the-twin-prime-constant-with-\
mathematica"], 
         "Children" -> {
          "Computing the twin prime constant with Mathematica"}], 
       "a:5b1d2e3b" -> 
       Association[
        "Parent" -> "div:e2d5db05", "Type" -> "a", "Name" -> "a:5b1d2e3b", 
         "Meta" -> Association[
          "shape" -> "rect", "class" -> "post-tag", "href" -> 
           "/questions/tagged/code-review", "title" -> 
           "show questions tagged 'code-review'", "rel" -> "tag"], 
         "Children" -> {"code-review"}], "a:d643430d" -> 
       Association[
        "Parent" -> "div:e2d5db05", "Type" -> "a", "Name" -> "a:d643430d", 
         "Meta" -> Association[
          "shape" -> "rect", "class" -> "post-tag", "href" -> 
           "/questions/tagged/prime-numbers", "title" -> 
           "show questions tagged 'prime-numbers'", "rel" -> "tag"], 
         "Children" -> {"prime-numbers"}], "a:099e522d" -> 
       Association[
        "Parent" -> "div:e4ebb0e4", "Type" -> "a", "Name" -> "a:099e522d", 
         "Meta" -> Association[
          "shape" -> "rect", "class" -> "started-link", "href" -> 
           "/questions/184324/computing-the-twin-prime-constant-with-\
mathematica/?lastactivity"], "Children" -> {"answered ", 
           XMLGraph`Package`Node["span:50e434bd"]}], "a:b58e3479" -> 
       Association[
        "Parent" -> "div:e4ebb0e4", "Type" -> "a", "Name" -> "a:b58e3479", 
         "Meta" -> Association[
          "shape" -> "rect", "href" -> 
           "/users/41267/gilmar-rodriguez-pierluissi"], 
         "Children" -> {"Gilmar Rodriguez Pierluissi"}], "span:65bb0e80" -> 
       Association[
        "Parent" -> "div:e4ebb0e4", "Type" -> "span", "Name" -> 
         "span:65bb0e80", "Meta" -> 
         Association[
          "class" -> "reputation-score", "dir" -> "ltr", "title" -> 
           "reputation score "], "Children" -> {"523"}], "span:50e434bd" -> 
       Association[
        "Parent" -> "a:099e522d", "Type" -> "span", "Name" -> "span:50e434bd",
          "Meta" -> Association[
          "class" -> "relativetime", "title" -> "2018-10-22 14:24:46Z"], 
         "Children" -> {"4 hours ago"}]]]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{3.7492242858971243`*^9},
 CellLabel->"In[298]:=",ExpressionUUID->"e5d95d2e-82b7-4d87-9cc3-af3dbab90af0"]
},
WindowSize->{808, 755},
WindowMargins->{{58, Automatic}, {Automatic, 10}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]

