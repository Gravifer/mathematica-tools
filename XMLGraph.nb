Notebook[{

Cell[CellGroupData[{
Cell["XMLGraph", \
"CodeSection",ExpressionUUID->"73e32bf8-1e9f-449c-a7e0-f54ac6b0a77c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<XMLGraph`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"a1777e36-e630-4a6e-8278-\
f2ccd73466d1"],

Cell["\<\
\[LeftCeiling]
\tXMLGraph is an object that is stored as XMLGraph[data] where data is an \
Association or other object that supports key access mechanisms that stores \
the core XMLGraph data.
\tKeys *must* include \[OpenCurlyDoubleQuote]Graph\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Data\[CloseCurlyDoubleQuote],  \
\[OpenCurlyDoubleQuote]Version\[CloseCurlyDoubleQuote].
\t\tData      -- data for each node
\t\tGraph   -- structural representation of the XML
\t\tVersion -- version of the object API
\tEach node in Graph will have an entry in Data. Structural lookups happen on \
the Graph. Data lookups happen on the data.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"a9b98545-fc09-4b30-84f0-f50c93dc639e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraph", "::", "usage"}], "=", "\n", "\t", 
   "\"\<A Graph-based representation of XML data\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"0192aaeb-1bef-4c10-b6f6-aa8cdb061efa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<`Package`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"6786ddd7-0c8a-42ed-95a6-\
ba653df63cd8"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Node Stuff\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"aa74b1b3-82c2-4ead-b4e5-0d67f43f3727"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$NodeDefaults", "::", "usage"}], "=", 
   "\"\<Defaults for created nodes\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Node", "::", "usage"}], "=", "\"\<Head for a node\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"8cb563b2-388a-4a0f-9739-d9f958f8c189"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CreateNode", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Creates a node/set of nodes\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InsertNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Adds nodes to the graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DeleteNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Deletes nodes from the graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ModifyNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Modifies a node or set of nodes on the graph\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"60099292-7c37-4c52-83b9-c8780502f48b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RootNode", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Gets the XML root element\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeList", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Lists the nodes on the Graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeData", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Gets a set of nodes off the graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Selects nodes by some criterion\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"def51c9b-9d1e-4e59-8c45-9a70e2e5c0f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NodeChildren", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeParents", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"0084a622-e63d-4063-b6f8-06fd8f5eaba3"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Object Stuff\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"8484398c-6bcf-4295-a201-1bfb21409ca0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConstructXMLGraph", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphQ", "::", "usage"}], "=", 
   "\"\<Tests whether an XMLGraph structure is a valid XML graph\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MutableXMLGraph", "::", "usage"}], "=", 
   "\"\<Creates a mutable XMLGraph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MutableXMLGraphQ", "::", "usage"}], "=", 
   "\"\<Tests whether a graph is mutable or not\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"134307b6-3d63-40b3-8d10-b415e5e06e1e"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Conversions\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"5c11f8d6-63e7-4141-b002-377728f6bb38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLAssociation", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ToXMLAssociation", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"3971490d-0cf9-4440-908d-3641d132e286"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLObject", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ToXMLObject", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"63efabda-faa5-4263-baa4-c5c72ab540f0"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Graph Operations\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"62a98411-59e8-439b-af3d-2c179fac0440"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XMLSubgraph", "::", "usage"}], "=", 
   "\"\<Extracts a subgraph starting from a head node\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FormattedXMLGraph", "::", "usage"}], "=", 
   "\"\<Returns the Graph with nice formatting\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphSort", "::", "usage"}], "=", 
   "\"\<Sorts the XMLGraph by distance from the \\\"Root\\\" node\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"839bc02a-30e2-4271-977a-b4b4395fb040"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphBFS", "::", "usage"}], "=", 
   "\"\<Applies BreadthFirstScan to the Graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphDFS", "::", "usage"}], "=", 
   "\"\<Applies DepthFirstScan to the Graph\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"e67422c8-e708-431c-a9a0-80ea63abbc78"]\

}, Closed]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"6141fdb9-45b9-4996-99b6-\
b5e9d136ff13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<`CSSSelectors`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"1b9d2c4e-2447-42e8-897c-\
62d59bfa0797"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ParseCSSSelector", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CSSSelector", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CSSCombinator", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CompileCSSSelector", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"a9c0c13d-1f09-4161-b560-fa0533905a98"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CSSSelect", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"95d121c4-010d-45c7-a2cc-8794a73d0b76"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"6693714f-67b4-48fb-b2b8-\
f996c7ea0c7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"25af30df-69d9-4995-b7b5-\
e734bbed5230"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Object API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"a6f45103-1173-486e-88b9-29aff0108c94"],

Cell[BoxData[
 RowBox[{"XMLGraph", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"3de88a08-4f9f-4ea4-a0f7-62a2e9a4d863"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraphQ\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"26db5503-0268-4a39-b403-857b88550ac6"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraphQ\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b1af96ba-f171-42c4-8f9b-ab358d8fb367"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphQ", "[", 
    RowBox[{"a", ":", 
     RowBox[{"Except", "[", "_XMLGraph", "]"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"TrueQ", "@", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"a", ",", " ", "\"\<Version\>\""}], "]"}]}], "]"}], "&&", "\n",
     "\t\t", 
    RowBox[{"AllTrue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Graph\>\"", ",", " ", "\"\<Data\>\""}], "}"}], ",", " ", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"a", ",", " ", "#"}], "]"}], "&"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"HoldPattern", "[", 
   RowBox[{"XMLGraphQ", "[", 
    RowBox[{
     RowBox[{"XMLGraph", "[", "a_", "]"}], "?", 
     RowBox[{"(", "System`Private`HoldNotValidQ", ")"}]}], "]"}], "]"}], ":=",
   "\n", "\t", 
  RowBox[{"XMLGraphQ", "@", "a"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphQ", "[", 
    RowBox[{"_XMLGraph", "?", 
     RowBox[{"(", "System`Private`HoldValidQ", ")"}]}], "]"}], ":=", "\n", 
   "\t", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"XMLGraphQ", "[", "___", "]"}], ":=", 
  "False"}]}], \
"CodeInput",ExpressionUUID->"c7134c5d-3e71-4446-a806-6760d0b5a3ba"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MutableXMLGraphQ\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"edc8752f-f68a-4a94-add1-9093aa342846"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"MutableXMLGraphQ", "[", 
     RowBox[{"XMLGraph", "[", "a_", "]"}], "]"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"MutableXMLGraphQ", "@", "a"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MutableXMLGraphQ", "[", 
   RowBox[{"a", ":", 
    RowBox[{"Except", "[", "_XMLGraph", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"TrueQ", "@", 
   RowBox[{
   "a", "[", "\"\<Mutable\>\"", 
    "]"}]}]}]}], \
"CodeInput",ExpressionUUID->"db9a0b58-b196-4946-9fde-7b0e36ecabd8"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Constructor\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7a7cef16-5be7-4982-b29f-c9c50cf35578"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c3413d31-fa60-4fd3-9ecd-71080a30ed83"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{
     RowBox[{"XMLGraph", "[", "a_", "]"}], "?", 
     RowBox[{"(", "System`Private`HoldNotValidQ", ")"}]}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", "=", 
       RowBox[{"ConstructXMLGraph", "[", "a", "]"}]}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"res", "/;", 
      RowBox[{"XMLGraphQ", "[", "res", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"b518068d-4101-401e-ae02-5ee87a07102d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ConstructXMLGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"154f91c7-0eaf-436b-9233-ada9fd66ff96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$XMLGraphDefaults", "=", "\n", "\t", 
   RowBox[{"<|", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<Version\>\"", "\[Rule]", "1"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Graph\>\"", "\[Rule]", 
      RowBox[{"VertexAdd", "[", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{"{", "}"}], "]"}], ",", " ", "\"\<Root\>\""}], "]"}]}], ",", 
     "\n", "\t\t", 
     RowBox[{"\"\<Data\>\"", "\[Rule]", 
      RowBox[{"<|", "|>"}]}]}], "\n", "\t\t", "|>"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"c6f0c984-ceda-451a-a0cc-b0eda408050b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConstructXMLGraph", "//", "Clear"}], 
  ";"}]], "CodeInput",ExpressionUUID->"63ca1b5a-2ddb-43f4-bddc-5515b6e7e1d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"validateGraphData", "[", "a_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g", "=", 
        RowBox[{"a", "[", "\"\<Graph\>\"", "]"}]}], ",", " ", 
       RowBox[{"d", "=", 
        RowBox[{"a", "[", "\"\<Data\>\"", "]"}]}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"EdgeList", "[", 
         RowBox[{"g", ",", " ", 
          RowBox[{"\"\<Root\>\"", "\[DirectedEdge]", "_"}]}], "]"}], ",", 
        "\n", "\t", "\t\t\t", 
        RowBox[{
         RowBox[{"el", ":", 
          RowBox[{"{", 
           RowBox[{"\"\<Root\>\"", "\[DirectedEdge]", "n_"}], "}"}]}], ":>", 
         "\n", "\t\t\t\t\t", 
         RowBox[{"Set", "[", 
          RowBox[{
           RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], ",", " ", "\n", "\t", 
           "\t\t\t\t\t", 
           RowBox[{"EdgeAdd", "[", 
            RowBox[{
             RowBox[{"EdgeDelete", "[", 
              RowBox[{"g", ",", " ", "el"}], "]"}], ",", " ", 
             RowBox[{"\"\<Root\>\"", "\[UndirectedEdge]", "n"}]}], "]"}]}], 
          "\n", "\t\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t", "]"}], ";", "\n",
       "\t\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "d"}], ">", "0"}], "&&", 
         RowBox[{"!", 
          RowBox[{"AssociationQ", "[", 
           RowBox[{"d", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "\"\<Meta\>\""}], "]"}], "]"}], "]"}]}]}],
         ",", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"a", "[", "\"\<Data\>\"", "]"}], "=", "\n", "\t\t\t\t\t", 
          RowBox[{"MapAt", "[", 
           RowBox[{"Association", ",", " ", "d", ",", " ", 
            RowBox[{"{", 
             RowBox[{"All", ",", " ", "\"\<Meta\>\""}], "}"}]}], "]"}]}], 
         ";"}]}], "\n", "\t\t\t\t", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"validateGraphData", "~", "SetAttributes", "~", 
  "HoldFirst"}]}], \
"CodeInput",ExpressionUUID->"b9893592-67bf-419a-8a8a-4209073b5fdc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConstructXMLGraph", "[", "a_Association", "]"}], ":=", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "a"}], ">", "0"}], "&&", 
      RowBox[{"AssociationQ", "@", 
       RowBox[{"a", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&&", "\n", "\t\t", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Type\>\"", ",", " ", "\"\<Meta\>\"", ",", " ", 
          "\"\<Children\>\""}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{"KeyExistsQ", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", "#"}], "]"}], "&"}]}], 
       "]"}]}], ",", "\n", "\t\t", 
     RowBox[{"FromXMLAssociation", "@", "a"}], ",", "\n", "\t\t", 
     RowBox[{"Module", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"assoc", "=", "\n", "\t", "\t\t\t\t", 
         RowBox[{"Join", "[", "\n", "\t", "\t\t\t\t\t", 
          RowBox[{"$XMLGraphDefaults", ",", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{"KeyTake", "[", 
            RowBox[{"a", ",", " ", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Version\>\"", ",", " ", "\"\<Graph\>\"", ",", " ", 
               "\"\<Data\>\""}], "}"}]}], "]"}]}], "\n", "\t", "\t\t\t\t\t", 
          "]"}]}], "\n", "\t", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"validateGraphData", "[", "assoc", "]"}], ";", "\n", "\t\t\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"d", "=", "assoc"}], "}"}], ",", "\n", "\t", "\t\t\t", 
          RowBox[{"System`Private`HoldSetValid", "@", 
           RowBox[{"XMLGraph", "[", "d", "]"}]}]}], "\n", "\t\t\t\t", 
         "]"}]}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstructXMLGraph", "[", 
    RowBox[{"xml", ":", 
     RowBox[{"_XMLElement", "|", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XMLObject", "[", "_", "]"}], "[", 
        RowBox[{"_", ",", " ", "_", ",", " ", "_"}], "]"}], ")"}], "|", 
      "_String"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"FromXMLObject", "[", "xml", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ConstructXMLGraph", "[", "e_", "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Association", "@", "e"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"AssociationQ", "@", "a"}], ",", "\n", "\t\t\t", 
      RowBox[{"XMLGraph", "@", "a"}], ",", "\n", "\t\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Quiet", "@", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"BooleanQ", "@", 
            RowBox[{"KeyExistsQ", "[", 
             RowBox[{"e", ",", " ", "\"\<Version\>\""}], "]"}]}], ",", " ", 
           "False"}], "]"}]}], ",", " ", "\n", "\t", "\t", "\t\t", 
        RowBox[{
         RowBox[{"KeyValueMap", "[", "\n", "\t", "\t", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"KeyExistsQ", "[", 
                RowBox[{"e", ",", " ", "#"}], "]"}]}], ",", "\n", "\t", "\t", 
              "\t\t\t\t", 
              RowBox[{
               RowBox[{"e", "[", "#", "]"}], "=", "#2"}]}], "\n", "\t", "\t", 
             "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t", "\t", "\t\t\t", 
           "$XMLGraphDefaults"}], "\n", "\t", "\t", "\t\t\t", "]"}], ";", 
         "\n", "\t", "\t", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"XMLGraphQ", "[", "e", "]"}]}], ",", " ", "\n", 
           "\t\t\t\t\t", "$Failed", ",", " ", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"validateGraphData", "[", "e", "]"}], ";", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"System`Private`HoldSetValid", "@", 
             RowBox[{"XMLGraph", "[", "e", "]"}]}]}]}], "\n", "\t", "\t", 
          "\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t", "$Failed"}], "\n", 
       "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"d18087e9-7684-4591-9c01-86a825e0b179"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MutableXMLGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"272ead4e-c389-420e-8fe6-160fcc8b65e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MutableXMLGraph", "[", 
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MutableXMLGraphQ", "[", "x", "]"}], ",", " ", "\n", "\t\t", "x", 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Quiet", "@", "\n", "\t\t\t", 
      RowBox[{"Check", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"Get", "[", "\"\<HashTableInterface`\>\"", "]"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{
        "Get", "[", 
         "\"\<https://github.com/b3m2a1/mathematica-tools/raw/master/\
HashTableInterface.m\>\"", "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"b", "=", 
         RowBox[{"HashTableInterface`HashTable", "[", 
          RowBox[{"x", "[", "\"\<Backend\>\"", "]"}], "]"}]}], "}"}], ",", 
       "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"b", "[", "\"\<Mutable\>\"", "]"}], "=", "True"}], ";", "\n",
         "\t\t\t", 
        RowBox[{"XMLGraph", "[", "b", "]"}]}]}], "\n", "\t\t\t", "]"}]}]}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"18e45e9d-0cdf-4c2e-bdab-5da26ec50aef"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Accessor API\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7c7aa613-3dbf-460f-96cc-134893ae0af1"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Backend\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"192658f1-ad38-4795-876b-8cf3cd2e5c85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "@", 
   RowBox[{
    RowBox[{"XMLGraph", "[", "a_", "]"}], "[", "\"\<Backend\>\"", "]"}]}], ":=",
   "\n", "\t", 
  "a"}]], "CodeInput",ExpressionUUID->"159e2367-9198-461e-9582-249bd8a73991"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Graph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ffa2e8e9-69c5-463a-a9cc-f179bb9100ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "@", 
   RowBox[{
    RowBox[{"XMLGraph", "[", "a_", "]"}], "[", "\"\<Graph\>\"", "]"}]}], ":=",
   "\n", "\t", 
  RowBox[{
  "a", "[", "\"\<Graph\>\"", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"3e11fb21-a683-455a-8d85-58613a460f26"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Data\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4e6dc1c9-f170-4e95-b155-72f312fb1717"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "@", 
   RowBox[{
    RowBox[{"XMLGraph", "[", "a_", "]"}], "[", "\"\<Data\>\"", "]"}]}], ":=", 
  "\n", "\t", 
  RowBox[{
  "a", "[", "\"\<Data\>\"", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"63bac57b-2eb7-4228-bab7-8046d785d109"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Format\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"a34651ea-2a45-4e5e-9aec-e44744f2bf5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"RawBoxes", "@", "\n", "\t\t", 
   RowBox[{"With", "[", "\n", "\t", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"g", "=", 
        RowBox[{
         RowBox[{"VertexCount", "@", 
          RowBox[{"x", "[", "\"\<Graph\>\"", "]"}]}], "-", "1"}]}], ",", "\n",
        "\t\t\t\t", 
       RowBox[{"r", "=", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"RootNode", "[", "x", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"s", ":", 
            RowBox[{"Except", "[", "None", "]"}]}], ":>", 
           RowBox[{
            RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
            RowBox[{"s", ",", " ", "\"\<Type\>\""}], "]"}]}]}], "]"}]}]}], 
      "\n", "\t\t\t\t", "}"}], ",", "\n", "\t\t\t", 
     RowBox[{"BoxForm`ArrangeSummaryBox", "[", "\n", "\t\t\t\t", 
      RowBox[{
      "XMLGraph", ",", "\n", "\t\t\t\t", "x", ",", "\n", "\t\t\t\t", "None", 
       ",", "\n", "\t\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"BoxForm`MakeSummaryItem", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Root: \>\"", ",", " ", "r"}], "}"}], ",", " ", 
           "StandardForm"}], "]"}], ",", "\n", "\t\t\t\t\t", 
         RowBox[{"BoxForm`MakeSummaryItem", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Nodes: \>\"", ",", " ", "g"}], "}"}], ",", " ", 
           "StandardForm"}], "]"}]}], "\n", "\t\t\t\t\t", "}"}], ",", "\n", 
       "\t\t\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t\t\t", "StandardForm"}], "\n", 
      "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"4602c545-5722-4356-8003-7be1368633ac"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Methods/Attributes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"45ad7919-762f-44d1-8396-11ae8be72d04"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Bind\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"411e6571-18ec-4328-b0e5-5e75e163379c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$$objData", "=", 
   RowBox[{"<|", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<Methods\>\"", "\[Rule]", 
      RowBox[{"<|", "|>"}]}], ",", "\n", "\t", 
     RowBox[{"\"\<Attributes\>\"", "\[Rule]", 
      RowBox[{"<|", "|>"}]}]}], "\n", "\t", "|>"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"773220be-4fdc-4daa-a519-5c23b98acf67"],

Cell[BoxData[
 RowBox[{"bindMethod", "/:", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"bindMethod", "[", 
     RowBox[{"graph_", ",", " ", 
      RowBox[{"name_", "[", "pat___", "]"}]}], "]"}], ":=", "def_"}], ")"}], ":=",
   "\n", "\t", 
  RowBox[{"(", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"$$objData", "[", 
      RowBox[{"\"\<Methods\>\"", ",", " ", "name"}], "]"}], "=", "True"}], 
    ";", "\n", "\t\t", 
    RowBox[{"XMLGraph", "/:", 
     RowBox[{
      RowBox[{"graph", "?", "XMLGraphQ"}], "[", 
      RowBox[{"name", "[", "pat", "]"}], "]"}], ":=", "def"}], ";", "\n", 
    "\t\t", 
    RowBox[{"XMLGraph", "/:", 
     RowBox[{
      RowBox[{
       RowBox[{"graph", "?", "XMLGraphQ"}], "[", "name", "]"}], "[", "pat", 
      "]"}], ":=", "def"}], ";"}], "\n", "\t\t", 
   ")"}]}]], \
"CodeInput",ExpressionUUID->"df3cd303-2974-4815-92d3-6be24c8c4185"],

Cell[BoxData[
 RowBox[{"bindAttribute", "/:", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"bindAttribute", "[", 
     RowBox[{"graph_", ",", " ", "name_"}], "]"}], ":=", "def_"}], ")"}], ":=",
   "\n", "\t", 
  RowBox[{"(", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"$$objData", "[", 
      RowBox[{"\"\<Attributes\>\"", ",", " ", "name"}], "]"}], "=", "True"}], 
    ";", "\n", "\t\t", 
    RowBox[{"XMLGraph", "/:", 
     RowBox[{
      RowBox[{"graph", "?", "XMLGraphQ"}], "[", "name", "]"}], ":=", "def"}], 
    ";"}], "\n", "\t\t", 
   ")"}]}]], \
"CodeInput",ExpressionUUID->"96a82a56-229d-4ce4-9634-46cdba86087e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Insert\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"2c5055ba-33a9-4572-b9f4-0edd8e7d05ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Insert\>\"", "[", "n_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"InsertNodes", "[", 
   RowBox[{"x", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"300cf772-407d-4bd8-bc9e-fbe1244e36c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Delete\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"41bf58c3-1b44-4736-b5bb-9b6b3a1c4df1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Delete\>\"", "[", "n_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"DeleteNodes", "[", 
   RowBox[{"x", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"921e7f02-9783-4fad-9a0b-d6636f7abe35"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Modify\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4c357d2e-1390-40eb-be58-185e959bef92"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<ModifyNodes\>\"", "[", "n_", "]"}]}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"ModifyNodes", "[", 
   RowBox[{"x", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"9bfed3be-8147-487b-bb3f-de8ee0203f34"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FormattedGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"42170ecf-2b40-4db6-ad63-40fa89873bb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bindMethod", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"\"\<FormattedGraph\>\"", "[", "o___", "]"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"FormattedXMLGraph", "[", 
    RowBox[{"x", ",", " ", "o"}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"9cd480e9-3006-48c3-9971-d179ef17ad59"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Nodes\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9b0196b6-c7fc-4d01-a2d4-558bb3b71e5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindAttribute", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\"\<Nodes\>\""}], "]"}], ":=", "\n", "\t", 
  RowBox[{
  "NodeList", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"74788f25-e303-4bf0-b974-892f2aaa0256"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Root\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"6bc5781f-733e-42ae-b66b-0edba9cff480"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindAttribute", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\"\<Root\>\""}], "]"}], ":=", "\n", "\t", 
  
  RowBox[{
  "RootNode", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"1dc6b077-6491-41bc-ac71-86432bff55f7"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Select\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"80f065e7-56d5-457c-b3d4-e33e2ebcaa5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Select\>\"", "[", 
     RowBox[{"fn_", ",", " ", "n___"}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"SelectNodes", "[", 
   RowBox[{"x", ",", " ", "fn", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8b005a5d-bc98-49a2-872f-21a6a194d06e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Locate\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"99fe85ae-20bc-41c2-9298-ed695db86ab8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Locate\>\"", "[", "id_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"SelectNodes", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"\"\<id\>\"", "\[Rule]", "id"}], ",", " ", "1"}], "]"}], ",", 
     " ", "None"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4b15c118-0663-449d-b10c-0c3976e9da3f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]BFS\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"fa95fd20-7b43-4e0e-a963-4957cc695bc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<BFS\>\"", "[", "arg__", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLGraphBFS", "[", 
   RowBox[{"x", ",", " ", "arg"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8d47f2e2-86dd-4b86-992a-88fb534df773"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]DFS\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"34214e42-204c-42ad-b791-c850bbac7d0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<DFS\>\"", "[", "arg__", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLGraphDFS", "[", 
   RowBox[{"x", ",", " ", "arg"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"712f237d-ec33-4559-965f-c4a9afcc90e4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Data\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e4b1a840-5fac-4db4-b2dd-1f0dbad3ed38"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bindMethod", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"\"\<Data\>\"", "[", 
      RowBox[{
       RowBox[{"n_:", "All"}], ",", " ", 
       RowBox[{"p_:", "All"}]}], "]"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"NodeData", "[", 
    RowBox[{"x", ",", " ", "n", ",", " ", "p"}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"ed0acc01-3e84-408e-9cb4-b33c2e3df3c7"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Type\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e8d4894b-992e-463c-aed4-62ecea1473c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Type\>\"", "[", 
     RowBox[{"n_:", "All"}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeData", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "\"\<Type\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"e69e4d68-342a-476b-b2ff-01d93760fe39"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Meta\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"2c44d77b-2df9-46b6-b011-366f8e204c3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Meta\>\"", "[", 
     RowBox[{"n_:", "All"}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeData", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "\"\<Meta\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"759cddee-a57f-402a-805f-4f60e42d230f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Attribute\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"299cb282-86e6-45b6-8eca-f15657b8b12e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Attribute\>\"", "[", 
     RowBox[{
      RowBox[{"n_:", "All"}], ",", " ", "attr_"}], "]"}]}], "]"}], ":=", "\n",
   "\t", 
  RowBox[{"NodeData", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "\"\<Meta\>\"", ",", " ", "attr"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"ac8abb8e-a9eb-4af8-b626-5bc1dde56a18"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Parent\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f7dce4b0-a19c-4344-be98-aed9e677c602"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Parent\>\"", "[", 
     RowBox[{
      RowBox[{"n_:", "All"}], ",", " ", 
      RowBox[{"depth_:", "1"}]}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeParents", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "depth"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"f42de4a7-a319-4469-9dc2-b223226caf5b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FullParents\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"20689d21-5a21-40f2-a944-1630302c8e03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<FullParents\>\"", "[", 
     RowBox[{
      RowBox[{"n_:", "All"}], ",", " ", 
      RowBox[{"depth_:", "1"}]}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeParents", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "depth", ",", " ", "True"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"232dacb7-814c-47d7-bc95-b566f3b34fc5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Children\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9c5e8e31-c3fd-464b-af12-55a11f09cbda"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Children\>\"", "[", 
     RowBox[{
      RowBox[{"n_:", "All"}], ",", " ", 
      RowBox[{"depth_:", "1"}]}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeChildren", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "depth"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5505037c-2f39-4eda-b2c6-b1e9add9de77"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FullChildren\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c374105b-d126-4e1a-88ef-d333fd28d0b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<FullChildren\>\"", "[", 
     RowBox[{
      RowBox[{"n_:", "All"}], ",", " ", 
      RowBox[{"depth_:", "1"}]}], "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeChildren", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "depth", ",", " ", "True"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"bcad22a2-3be5-43fb-a93d-eecabcc5813e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Sort\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1a85426e-0bfc-435e-9124-209c1b841c2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Sort\>\"", "[", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{
  "XMLGraphSort", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"478805cb-381c-44bc-996e-bdd9dd673d25"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Subgraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"00ee8d9b-ba1a-46a1-8db4-26f5907a7750"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"\"\<Subgraph\>\"", "[", "k_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLSubgraph", "[", 
   RowBox[{"x", ",", " ", "k"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5b73a8cc-6417-4c51-be69-06477b88c20a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XML\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"0e0ac211-a0b4-4ed9-9d80-49be316c5577"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\"\<XML\>\""}], "]"}], ":=", "\n", "\t", 
  RowBox[{
  "ToXMLObject", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"865f3400-6c25-4793-9fc2-d267a0465f4d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Association\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"884cde8e-3409-4602-aa97-c1e84cf315b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindMethod", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\"\<Association\>\""}], "]"}], ":=", "\n",
   "\t", 
  RowBox[{
  "ToXMLAssociation", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"cc37eab0-3407-4350-aea3-05751574fc19"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Node API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"13740c6e-dc23-4dae-a16e-b0ebd284485c"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$NodeDefaults\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"48e93e77-4858-4d66-aabb-2512ea3b71ac"],

Cell[BoxData[
 RowBox[{"$NodeDefaults", "=", "\n", "\t", 
  RowBox[{"<|", "\n", "\t\t", 
   RowBox[{
    RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<p\>\""}], ",", "\n", "\t\t", 
    RowBox[{"\"\<Meta\>\"", "\[Rule]", 
     RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t", 
    RowBox[{"\"\<Children\>\"", "\[Rule]", 
     RowBox[{"{", "}"}]}]}], "\n", "\t\t", 
   "|>"}]}]], \
"CodeInput",ExpressionUUID->"dc6c636f-ea92-4613-88db-749023bd2c76"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ValidateNode\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"b366e9af-e4a6-410f-9be5-e809b35a407a"],

Cell["\[LeftCeiling]...I should probably write this...\[RightFloor]", "Text",
 Evaluatable->True,ExpressionUUID->"264368c7-bfea-4335-948e-4fe13448830d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Node\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"b6cba970-307f-4b1d-b74c-acb09067bd5f"],

Cell[BoxData[
 RowBox[{"With", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"baseBoxes", "=", "\n", "\t\t", 
     RowBox[{
      RowBox[{"RawBoxes", "@", "\n", "\t\t\t", 
       RowBox[{"BoxForm`ArrangeSummaryBox", "[", "\n", "\t\t\t\t", 
        RowBox[{"Node", ",", "\n", "\t", "\t\t\t", 
         RowBox[{"Node", "[", "$$name", "]"}], ",", "\n", "\t", "\t\t\t", 
         "None", ",", "\n", "\t", "\t\t\t", 
         RowBox[{"{", "$$name", "}"}], ",", "\n", "\t", "\t\t\t", 
         RowBox[{"{", "}"}], ",", "\n", "\t", "\t\t\t", "StandardForm"}], 
        "\n", "\t", "\t\t\t", "]"}]}], "/.", 
      RowBox[{
       RowBox[{"DynamicModuleBox", "[", 
        RowBox[{"_", ",", " ", "b_", ",", " ", "___"}], "]"}], 
       "\[RuleDelayed]", "\n", "\t", "\t\t\t\t\t\t", 
       RowBox[{"RuleCondition", "[", 
        RowBox[{
         RowBox[{"b", "/.", 
          RowBox[{
           RowBox[{"PaneSelectorBox", "[", 
            RowBox[{"s_", ",", " ", "___"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"Lookup", "[", 
            RowBox[{"s", ",", " ", "False"}], "]"}]}]}], ",", " ", "True"}], 
        "]"}]}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t", 
   RowBox[{
    RowBox[{"Format", "[", 
     RowBox[{"Node", "[", "name_String", "]"}], "]"}], ":=", "\n", "\t\t", 
    RowBox[{"baseBoxes", "/.", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"$$name", "\[Rule]", "name"}], ",", "\n", "\t", "\t\t", 
       RowBox[{
        RowBox[{"TagBox", "[", 
         RowBox[{"\"\<$$name\>\"", ",", " ", "\"\<SummaryItem\>\""}], "]"}], 
        "\[RuleDelayed]", "\n", "\t", "\t\t", 
        RowBox[{"RuleCondition", "[", 
         RowBox[{
          RowBox[{"TagBox", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"name", ",", " ", "InputForm"}], "]"}], ",", " ", 
            "\"\<SummaryItem\>\""}], "]"}], ",", " ", "True"}], "]"}]}]}], 
      "\n", "\t", "\t\t", "}"}]}]}]}], "\n", "\t", 
  "]"}]], "CodeInput",ExpressionUUID->"6571a719-65e7-42ec-b8bf-1f547f71d322"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CreateNode\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"559b017c-db6a-4cfb-922e-3007e688b03d"],

Cell["\<\
\[LeftCeiling]
\tCreateNode takes a parent node and a list of child-specs and creates an \
Association for the children out of it.
\tReturns {{childData}, {nodeSpecs...}} where each nodeSpec is an Association \
and the childData is data about the children of the parent node.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"45e7eeba-8158-400b-a8aa-888eb6fa9cda"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CreateNode\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"372d1bdf-16a1-475f-9a43-3c9437d9bd19"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CreateNode", "[", "d_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Reap", "[", 
    RowBox[{"createNode", "[", "d", "]"}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"1aac1c05-d69c-4277-82ad-18358c62b0bc"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]createNode\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"3716d145-65e8-4137-ba67-2f935f90ff52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"createNode", "[", 
    RowBox[{"parent_", "\[Rule]", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"d_", ",", " ", "c_", ",", " ", "b_"}], "]"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"createNode", "[", "\n", "\t\t", 
    RowBox[{"parent", "->", "\n", "\t\t\t", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Type\>\"", "\[Rule]", "d"}], ",", " ", 
       RowBox[{"\"\<Meta\>\"", "\[Rule]", "c"}], ",", " ", 
       RowBox[{"\"\<Children\>\"", "\[Rule]", "b"}]}], "|>"}]}], "\n", "\t\t",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"createNode", "[", 
   RowBox[{"parent_", "\[Rule]", "kid_Association"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"<|", 
        RowBox[{"\"\<Parent\>\"", "\[Rule]", "parent"}], "|>"}]}], ",", "\n", 
      "\t\t\t", "children"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"data", "[", "\"\<Type\>\"", "]"}], "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"kid", ",", " ", "\"\<Type\>\"", ",", " ", 
        RowBox[{"$NodeDefaults", "[", "\"\<Type\>\"", "]"}]}], "]"}]}], ";", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{"data", "[", "\"\<Name\>\"", "]"}], "=", 
      RowBox[{
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{"CreateUUID", "[", 
          RowBox[{
           RowBox[{"data", "[", "\"\<Type\>\"", "]"}], "<>", "\"\<:\>\""}], 
          "]"}], ",", " ", "\"\<-\>\"", ",", " ", "2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"data", "[", "\"\<Meta\>\"", "]"}], "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"kid", ",", " ", "\"\<Meta\>\"", ",", " ", 
        RowBox[{"$NodeDefaults", "[", "\"\<Meta\>\"", "]"}]}], "]"}]}], ";", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{"data", "[", "\"\<Children\>\"", "]"}], "=", "\n", "\t\t\t", 
      RowBox[{"createNode", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"data", "[", "\"\<Name\>\"", "]"}], "->", "\n", "\t\t\t\t\t", 
        
        RowBox[{"Flatten", "@", 
         RowBox[{"List", "@", 
          RowBox[{"Lookup", "[", 
           RowBox[{"kid", ",", " ", "\"\<Children\>\"", ",", " ", 
            RowBox[{"$NodeDefaults", "[", "\"\<Children\>\"", "]"}]}], 
           "]"}]}]}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"Sow", "[", "data", "]"}], ";", "\n", "\t\t", 
     RowBox[{"Node", "[", 
      RowBox[{"data", "[", "\"\<Name\>\"", "]"}], "]"}]}]}], "\n", "\t\t", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"createNode", "[", 
    RowBox[{"parent_", "\[Rule]", 
     RowBox[{"kids", ":", "l_List"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"createNode", "/@", 
    RowBox[{"Thread", "[", 
     RowBox[{"parent", "\[Rule]", "kids"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"createNode", "[", 
   RowBox[{"parent_", "\[Rule]", "kid_"}], "]"}], ":=", "\n", "\t", 
  "kid"}]}], \
"CodeInput",ExpressionUUID->"a961653d-f309-41e3-b8e3-95dd4969b431"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]InsertNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"524d28e7-b71d-4df1-b6b9-fbbc5dc23ed7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InsertNodes", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], ",", " ", "\n", "\t", 
    RowBox[{"nodes", ":", 
     RowBox[{"{", "__Rule", "}"}]}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"XMLGraph", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", 
      "\t\t\t", "data", ",", "\n", "\t\t\t", 
      RowBox[{"parents", "=", 
       RowBox[{"Keys", "@", "nodes"}]}], ",", "\n", "\t\t\t", "pos", ",", 
      "\n", "\t\t\t", 
      RowBox[{"nodez", "=", 
       RowBox[{"Values", "@", "nodes"}]}], ",", "\n", "\t\t\t", "children", 
      ",", "\n", "\t\t\t", "others", ",", "\n", "\t\t\t", "edges", ",", "\n", 
      "\t\t\t", "new"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"(*", " ", 
     RowBox[{
     "If", " ", "no", " ", "position", " ", "is", " ", "specifed", " ", 
      "insert", " ", "at", " ", "the", " ", "end"}], " ", "*)"}], "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"parents", "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"ListQ", "@", "#"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"#", ",", " ", 
            RowBox[{"-", "1"}]}], "}"}], ",", " ", "#"}], "]"}], "&"}], "/@", 
       "parents"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"parents", ",", " ", "pos"}], "}"}], "=", 
      RowBox[{"Transpose", "@", "parents"}]}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Create", " ", "new", " ", "nodes", " ", "from", " ", "rules"}],
       " ", "*)"}], "\n", "\t\t", 
     RowBox[{"nodez", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", "#", "}"}], ",", " ", "1"}], "]"}], "&"}], "/@", 
       "nodez"}]}], ";", "\n", "\t\t", 
     RowBox[{"nodez", "=", 
      RowBox[{"CreateNode", "/@", 
       RowBox[{"Thread", "[", 
        RowBox[{"parents", "\[Rule]", "nodez"}], "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"new", "=", 
      RowBox[{"Join", "@@", 
       RowBox[{"nodez", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}]}], ";", "\n", "\t\t", 
     
     RowBox[{"(*", " ", 
      RowBox[{
      "Add", " ", "constructed", " ", "edges", " ", "to", " ", "the", " ", 
       "Graph"}], " ", "*)"}], "\n", "\t\t", 
     RowBox[{"edges", "=", "\n", "\t\t\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "\"\<Parent\>\"", "]"}], "\[Rule]", 
          RowBox[{"#", "[", "\"\<Name\>\"", "]"}]}], "&"}], ",", " ", "new"}],
        "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], "=", "\n", "\t\t\t", 
      RowBox[{"EdgeAdd", "[", 
       RowBox[{
        RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"UndirectedEdge", "@@@", "edges"}]}], "\n", "\t\t\t\t", 
       "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Add", " ", "data", " ", "to", " ", "Data", " ", "association"}], " ", 
      "*)"}], "\n", "\t\t", 
     RowBox[{"data", "=", 
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"MapThread", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Function", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"#", ",", " ", "\"\<Children\>\""}], "]"}], "=", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"FlattenAt", "[", "\n", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Insert", "[", 
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"#", ",", " ", "\"\<Children\>\""}], "]"}], ",", " ", 
              "#3", ",", " ", "#2"}], "]"}], ",", "\n", "\t\t\t\t\t\t", 
            "#2"}], "\n", "\t\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"data", "[", 
          RowBox[{"#", ",", " ", "\"\<Children\>\""}], "]"}]}], "\n", 
        "\t\t\t\t", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
        "parents", ",", "\n", "\t\t\t\t", "pos", ",", "\n", "\t\t\t\t", 
         RowBox[{"nodez", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "\n", "\t\t\t\t", 
        "}"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"#", "[", "\"\<Name\>\"", "]"}], "]"}], "=", "#"}], "]"}], 
       ",", " ", "new"}], "]"}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Return", " ", "new", " ", "XMLGraph", " ", "and", " ", "added", " ", 
       "nodes"}], " ", "*)"}], "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MutableXMLGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
         RowBox[{"XMLGraph", "@", "a"}]}], "]"}], ",", " ", 
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "}"}]}]}], "\n", 
   "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"073fce56-39b1-4a27-b998-ba2872901103"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]DeleteNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"15cc4fdb-0d1c-43cb-a5ad-174c3353ffab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteNodes", "[", "\n", "\t", 
   RowBox[{"x_XMLGraph", ",", "\n", "\t", 
    RowBox[{"n", ":", 
     RowBox[{"{", "__String", "}"}]}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", "\t\t\t", "g",
       ",", "\n", "\t\t\t", "d", ",", "\n", "\t\t\t", "vs"}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"g", "=", 
      RowBox[{"VertexDelete", "[", 
       RowBox[{"g", ",", " ", "n"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], "=", "g"}], ";", "\n", "\t\t", 
     RowBox[{"d", "=", 
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"vs", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"d", ",", " ", "n"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}], "=", 
      RowBox[{"KeyDrop", "[", 
       RowBox[{"d", ",", " ", "n"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MutableXMLGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
         RowBox[{"XMLGraph", "@", "a"}]}], "]"}], ",", " ", "vs"}], "}"}]}]}],
    "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"403e5fbc-74c1-462e-8fdd-52e088a68f8b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ModifyNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"9e726068-4497-41be-a08b-f7d31b69526f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModifyNodes", "[", "\n", "\t", 
   RowBox[{"x_XMLGraph", ",", "\n", "\t", 
    RowBox[{"n", ":", 
     RowBox[{"{", "__Rule", "}"}]}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", "\t\t\t", "g",
       ",", "\n", "\t\t\t", "d", ",", "\n", "\t\t\t", 
      RowBox[{"vs", "=", 
       RowBox[{"Keys", "@", "n"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"ms", "=", 
       RowBox[{"Association", "/@", 
        RowBox[{"Values", "[", "n", "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"MapThread", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Function", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"#", ",", " ", "\"\<Type\>\""}], "]"}], "=", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"Lookup", "[", 
           RowBox[{"#2", ",", " ", "\"\<Type\>\"", ",", " ", 
            RowBox[{"d", "[", 
             RowBox[{"#", ",", " ", "\"\<Type\>\""}], "]"}]}], "]"}]}], ";", 
         "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"#", ",", " ", "\"\<Meta\>\""}], "]"}], "=", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"Merge", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"#", ",", " ", "\"\<Meta\>\""}], "]"}], ",", " ", 
              RowBox[{"KeyDrop", "[", 
               RowBox[{"#2", ",", " ", "\"\<Type\>\""}], "]"}]}], "}"}], ",", 
            " ", "Last"}], "]"}]}], ";"}], "\n", "\t\t\t\t", "]"}], ",", "\n",
        "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"vs", ",", "\n", "\t\t\t\t", "ms"}], "\n", "\t\t\t\t", 
        "}"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}], "=", "d"}], ";", "\n", "\t\t", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MutableXMLGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
       RowBox[{"XMLGraph", "@", "a"}]}], "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"665815f0-1570-48be-8706-a063f912d22a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]RootNode\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"00c3f9bf-e716-4370-885f-8a722983348e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RootNode", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "#"}], ">", "0"}], ",", " ", "\n", "\t\t", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], ",", "\n", "\t\t", 
      "None"}], "\n", "\t\t", "]"}], "&"}], "@", 
   RowBox[{"IncidenceList", "[", 
    RowBox[{
     RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", " ", "\"\<Root\>\""}], 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"a2a83f45-d5c6-44c6-98a9-06cce1502780"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NodeList\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"1ab82e5f-b5fa-411d-a358-6cacfad52edd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NodeList", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Keys", "@", 
   RowBox[{
   "x", "[", "\"\<Data\>\"", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"f0ffaf5a-c13e-492f-9e77-f625c836d6c1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SelectNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7caf900b-1a15-488a-8e0b-9eab2e0b4fa4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SelectNodes", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "test_String"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"CSSSelect", "[", 
   RowBox[{"x", ",", " ", "test"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"f91e0ce0-a3ac-45c6-90ba-c4f6ceeb2481"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"prop_String", "->", "test_"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "\"\<Meta\>\"", ",", " ", "prop"}], "]"}], 
       "]"}], ",", " ", 
      RowBox[{
       RowBox[{"#", "\[Equal]", "test"}], "&"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"test", ":", 
      RowBox[{"Except", "[", 
       RowBox[{
        RowBox[{"_String", "|", "_String"}], "\[Rule]", "_"}], "]"}]}]}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"x", "[", "\"\<Data\>\"", "]"}], ",", " ", "test"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", "test_String", ",", " ", "n_"}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "\"\<Type\>\""}], "]"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"#", "\[Equal]", "test"}], "&"}], ",", " ", "n"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"test", ":", 
      RowBox[{"Except", "[", "_String", "]"}]}], ",", " ", "n_"}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"x", "[", "\"\<Data\>\"", "]"}], ",", " ", "test", ",", " ", 
      "n"}], "]"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"a3fc19cc-cf86-482e-80f3-763b4b1814a6"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NodeData\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"e42d1f2e-4e7c-464e-aca9-492a25b94d51"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NodeData", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"n", ":", 
      RowBox[{"_String", "|", 
       RowBox[{"{", "__String", "}"}], "|", "All"}]}], ",", " ", 
     RowBox[{"part", ":", 
      RowBox[{"(", 
       RowBox[{"_String", "|", 
        RowBox[{"{", "__String", "}"}], "|", "All"}], ")"}], ":", "All"}]}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", " ", "part"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeData", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"i", ":", 
      RowBox[{"_Integer", "|", 
       RowBox[{"{", "__Integer", "}"}], "|", "_Span"}]}], ",", " ", 
     RowBox[{"parts", ":", 
      RowBox[{"_String", "|", 
       RowBox[{"{", "__String", "}"}], "|", "All"}], ":", "All"}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"NodeData", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{
      RowBox[{"VertexList", "[", 
       RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"NodeData", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"part", ":", 
     RowBox[{"(", 
      RowBox[{"_String", "|", 
       RowBox[{"{", "__String", "}"}], "|", "All"}], ")"}], ":", "All"}]}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{
  "{", "}"}]}]}], \
"CodeInput",ExpressionUUID->"dcc00aa4-7cf1-4e2a-93ab-69a6f99d7145"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NodeChildren\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"8082ad54-f7b5-406c-92c0-c346b0db675a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NodeChildren", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "n_", ",", " ", 
    RowBox[{"depth_:", "1"}], ",", " ", 
    RowBox[{"full", ":", 
     RowBox[{"True", "|", "False"}], ":", "False"}]}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"full", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Rest", "[", "NestList", "]"}], "[", "##", "]"}], "&"}], ",", 
     " ", "Nest"}], "]"}], "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"NodeData", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{
          RowBox[{"Node", "[", "s_", "]"}], "\[RuleDelayed]", "s"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "1"}], "}"}]}], "]"}], ",", " ", 
       "\"\<Children\>\""}], "]"}], "&"}], ",", "\n", "\t\t", 
    RowBox[{"Thread", "[", 
     RowBox[{"Node", "[", "n", "]"}], "]"}], ",", "\n", "\t\t", "depth"}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"996b10eb-8f90-4163-b718-86ae7cdaadc1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NodeParents\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"5aea2bc6-4353-4edc-a97e-0d17963e2499"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NodeParents", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "n_", ",", " ", 
    RowBox[{"depth_:", "1"}], ",", " ", 
    RowBox[{"full", ":", 
     RowBox[{"True", "|", "False"}], ":", "False"}]}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"full", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Rest", "[", "NestList", "]"}], "[", "##", "]"}], "&"}], ",", 
     " ", "Nest"}], "]"}], "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"NodeData", "[", 
      RowBox[{"x", ",", " ", "#", ",", " ", "\"\<Parent\>\""}], "]"}], "&"}], 
    ",", " ", "\n", "\t\t", "n", ",", " ", "\n", "\t\t", "depth"}], "\n", 
   "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"69425795-0d19-41e1-aae3-73166518ee51"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CSS Selectors\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"c7770b33-dbd3-464b-a231-0da4bda8e679"],

Cell["\<\
\[LeftCeiling]
\tI may want a DFS selection procedure over the Graph representation? This \
would make things like ~ more intuitive and linear time, but might also be a \
bit more of a pain.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"186bae2a-c934-451e-8482-92c8e2399a8f"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Parse\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"81091bdc-eadd-4314-a4f5-54b02b4182bd"],

Cell[BoxData[
 RowBox[{"cssSelectorPatterns", "=", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"\"\<\\*\>\"", "\[Rule]", 
     RowBox[{"CSSSelector", "[", "All", "]"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<.\>\"", "~~", 
      RowBox[{"cls", ":", 
       RowBox[{
        RowBox[{"Except", "[", "WhitespaceCharacter", "]"}], ".."}]}]}], ":>",
      "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"CSSSelector", "[", "\"\<Class\>\"", "]"}], "[", "cls", "]"}]}],
     ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<#\>\"", "~~", 
      RowBox[{"id", ":", 
       RowBox[{
        RowBox[{"Except", "[", "WhitespaceCharacter", "]"}], ".."}]}]}], ":>",
      "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"CSSSelector", "[", "\"\<ID\>\"", "]"}], "[", "id", "]"}]}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", "\"\<,\>\"", "~~", 
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}]}], "\[Rule]", 
     RowBox[{"CSSCombinator", "[", "\"\<Or\>\"", "]"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", "\"\<+\>\"", "~~", 
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}]}], "\[Rule]", 
     RowBox[{"CSSCombinator", "[", "\"\<Next\>\"", "]"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", "\"\<~\>\"", "~~", 
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}]}], "\[Rule]", 
     RowBox[{"CSSCombinator", "[", "\"\<Follows\>\"", "]"}]}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", "\"\<>\>\"", "~~", 
      RowBox[{"(", 
       RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}]}], "\[Rule]", 
     RowBox[{"CSSCombinator", "[", "\"\<Child\>\"", "]"}]}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"el", ":", 
        RowBox[{"(", 
         RowBox[{"LetterCharacter", "~~", 
          RowBox[{
           RowBox[{"Except", "[", 
            RowBox[{
            "WhitespaceCharacter", "|", "\"\<,\>\"", "|", "\"\<+\>\"", "|", 
             "\"\<~\>\"", "|", "\"\<>\>\""}], "]"}], "..."}]}], ")"}]}], 
       ")"}], "~~", "\n", "\t\t\t", 
      RowBox[{"(", 
       RowBox[{"\"\<[\>\"", "~~", 
        RowBox[{"attr", ":", 
         RowBox[{
          RowBox[{"Except", "[", 
           RowBox[{"WhitespaceCharacter", "|", "\"\<]\>\""}], "]"}], ".."}]}],
         "~~", "\"\<]\>\""}], ")"}]}], ":>", "\n", "\t\t\t\t", 
     RowBox[{
      RowBox[{"CSSCombinator", "[", "\"\<And\>\"", "]"}], "[", "\n", 
      "\t\t\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"CSSSelector", "[", "\"\<Element\>\"", "]"}], "[", "el", 
        "]"}], ",", "\n", "\t\t\t\t\t", 
       RowBox[{"cssAttributeSelector", "[", "attr", "]"}]}], "\n", 
      "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<[\>\"", "~~", 
      RowBox[{"attr", ":", 
       RowBox[{
        RowBox[{"Except", "[", 
         RowBox[{"WhitespaceCharacter", "|", "\"\<]\>\""}], "]"}], ".."}]}], 
      "~~", "\"\<]\>\""}], ":>", "\n", "\t\t\t", 
     RowBox[{"cssAttributeSelector", "[", "attr", "]"}]}], ",", "\n", "\t\t", 
    
    RowBox[{
     RowBox[{"el", ":", 
      RowBox[{"(", 
       RowBox[{"LetterCharacter", "~~", 
        RowBox[{
         RowBox[{"Except", "[", 
          RowBox[{
          "WhitespaceCharacter", "|", "\"\<,\>\"", "|", "\"\<+\>\"", "|", 
           "\"\<~\>\"", "|", "\"\<>\>\""}], "]"}], "..."}]}], ")"}]}], 
     "\[RuleDelayed]", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"CSSSelector", "[", "\"\<Element\>\"", "]"}], "[", "el", 
      "]"}]}]}], "\n", "\t\t", 
   "}"}]}]], \
"CodeInput",ExpressionUUID->"71deaa4e-dcbf-49e2-b25c-1e9fa7101415"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssAttributeSelector", "[", "s_String", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "split", ",", "\n", "\t\t\t", "attr", ",", "\n", "\t\t\t", "token", ",", 
      "\n", "\t\t\t", "val"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"split", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"StringTrim", "[", "s", "]"}], ",", " ", "\"\<=\>\"", ",", 
        " ", "2"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "split"}], "\[Equal]", "2"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"attr", ",", " ", "val"}], "}"}], "=", "split"}], ";", "\n",
         "\t\t\t", 
        RowBox[{"token", "=", 
         RowBox[{"StringTake", "[", 
          RowBox[{"s", ",", " ", 
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}]}], "]"}]}], ";", "\n", "\t", "\t\t", 
        RowBox[{"attr", "=", 
         RowBox[{"StringDrop", "[", 
          RowBox[{"s", ",", " ", 
           RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "\t", "\t\t", 
        RowBox[{
         RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", 
         RowBox[{"token", ",", " ", "attr", ",", " ", "val"}], "]"}]}], ",", 
       "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", 
        RowBox[{"split", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\n", "\t\t\t", "]"}]}]}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"1c7d5b14-ca6e-47cb-b1d5-6e05227db679"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorPostProcess", "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"\"\< \>\"", "\[Rule]", 
     RowBox[{"CSSCombinator", "[", "\"\<Descendant\>\"", "]"}]}], "\n", 
    "\t\t", "}"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"48bac8f4-ad66-4b3a-ab0c-9fe61eb88cfc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalizeWhiteSpace", "[", "s_String", "]"}], ":=", "\n", "\t", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"s", ",", " ", 
    RowBox[{"Whitespace", "\[Rule]", "\"\< \>\""}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4f56898c-79c5-4754-9da8-6dd19f474aa8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParseCSSSelector", "[", "s_String", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"split", ",", "\n", "\t\t\t", "map", ",", "\n", "\t\t\t", 
      RowBox[{"i", "=", "1"}], ",", "\n", "\t\t\t", "tag"}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"split", "=", 
      RowBox[{"List", "@@", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"normalizeWhiteSpace", "@", "s"}], ",", " ", 
         "cssSelectorPatterns"}], "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"map", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\n", "\t\t", 
     RowBox[{"split", "=", "\n", "\t\t\t", 
      RowBox[{"Flatten", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"StringReplace", "[", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"StringQ", "@", "#"}]}], ",", " ", 
                RowBox[{
                 RowBox[{"tag", "=", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"i", "++"}], "]"}]}], ";", 
                 RowBox[{
                  RowBox[{"map", "[", "tag", "]"}], "=", "#"}], ";", "tag"}], 
                ",", " ", "#"}], "]"}], "&"}], "/@", "split"}], ",", "\n", 
            "\t", "\t\t\t\t\t", "cssSelectorPostProcess"}], "\n", "\t", 
           "\t\t\t\t\t", "]"}], ",", "\n", "\t", "\t\t\t\t", "map", ",", "\n",
           "\t\t\t\t\t", "1"}], "\n", "\t\t\t\t\t", "]"}], ",", "\n", 
        "\t\t\t\t", "1", ",", "\n", "\t\t\t\t", "StringExpression"}], "\n", 
       "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "sel_", "}"}], "\[RuleDelayed]", "sel"}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"_", "\[Rule]", "$Failed"}]}], "\n", "\t\t\t", "}"}], "]"}], 
      "@", "\n", "\t\t", 
      RowBox[{"Fold", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"FixedPoint", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Replace", "[", "\n", "\t", "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"start___", ",", " ", "a_", ",", " ", 
               RowBox[{"j", ":", 
                RowBox[{"CSSCombinator", "[", "#2", "]"}]}], ",", " ", "b_", 
               ",", " ", "end___"}], "}"}], ":>", "\n", "\t", "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"start", ",", " ", 
               RowBox[{"j", "[", 
                RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", "end"}], 
              "}"}]}], "\n", "\t", "\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
           "#"}], "\n", "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t\t\t", 
        "split", ",", "\n", "\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{
         "\"\<Or\>\"", ",", "\n", "\t\t\t\t", "\"\<Descendant\>\"", ",", "\n",
           "\t\t\t\t", "_"}], "\n", "\t\t\t\t", "}"}]}], "\n", "\t\t\t", 
       "]"}]}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"1a4a9cae-5695-4321-a32f-4c54c6423144"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Compile\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"a0c473c7-bb31-4c05-9b84-2b9857b39ea4"],

Cell["\<\
\[LeftCeiling]
\tThis should map to BFS rules and then those may be compiled down to a \
single Select if possible
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"56a0e4f0-8b47-4d3b-a0b1-43ba8518c8c8"],

Cell[BoxData[
 RowBox[{"cssSelectorCompile", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"391ceb0e-b1d0-4ba1-83ec-697e98680e53"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Or\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9fbf43ce-9c95-420c-b8f3-e14264269fb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cssSelectorCompile", "[", 
    RowBox[{
     RowBox[{"CSSCombinator", "[", "\"\<Or\>\"", "]"}], "[", 
     RowBox[{"a_", ",", " ", "b_"}], "]"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"c1", "=", 
        RowBox[{"cssSelectorCompile", "[", "a", "]"}]}], ",", "\n", "\t\t\t", 
       
       RowBox[{"c2", "=", 
        RowBox[{"cssSelectorCompile", "[", "b", "]"}]}]}], "\n", "\t\t\t", 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Or", "[", 
       RowBox[{
        RowBox[{"c1", "[", 
         RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
        RowBox[{"c2", "[", 
         RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}]}], "]"}], 
      "&"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"618ba419-8d8f-42ab-92e0-f011a33bf7b2"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Child\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"5c12ad18-5568-456c-b3c6-c00bbf08fc9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSCombinator", "[", "\"\<Child\>\"", "]"}], "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"c1", "=", 
       RowBox[{"cssSelectorCompile", "[", "b", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"cssSelectorCompile", "[", "a", "]"}], "[", 
        RowBox[{"#2", ",", " ", 
         RowBox[{
          RowBox[{"$ancestors", "[", "#2", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", " ", 
         RowBox[{"#3", "-", "1"}]}], "]"}]}]}], "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
       "c2"}], "]"}], "&"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4734d568-53b7-4bd9-a331-492d7dbc5346"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Descendant\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1957f502-366a-4c1e-bc0e-8abdcf92db93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSCombinator", "[", "\"\<Descendant\>\"", "]"}], "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"c1", "=", 
       RowBox[{"cssSelectorCompile", "[", "b", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"cssSelectorCompile", "[", "a", "]"}], "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{
          RowBox[{"$ancestors", "[", "#", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", " ", "None"}], "]"}]}]}], 
     "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
       RowBox[{"AnyTrue", "[", 
        RowBox[{
         RowBox[{"$ancestors", "[", "#", "]"}], ",", " ", 
         RowBox[{"c2", "&"}]}], "]"}]}], "]"}], "&"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"23f95221-f0fe-477a-8b1a-4ec673249d99"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Next\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"15ce3465-526c-4251-a41a-96057547545f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cssSelectorCompile", "[", 
    RowBox[{
     RowBox[{"CSSCombinator", "[", "\"\<Next\>\"", "]"}], "[", 
     RowBox[{"a_", ",", " ", "b_"}], "]"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"c1", "=", 
        RowBox[{"cssSelectorCompile", "[", "b", "]"}]}], ",", "\n", "\t\t\t", 
       
       RowBox[{"c2", "=", 
        RowBox[{
         RowBox[{"cssSelectorCompile", "[", "a", "]"}], "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{
           RowBox[{"$ancestors", "[", "#", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], ",", " ", "None"}], "]"}]}]}], 
      "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"And", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"c1", "[", 
         RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", "\n",
         "\t\t\t", 
        RowBox[{"AnyTrue", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"$priors", "[", "#", "]"}], ",", " ", 
            RowBox[{"UpTo", "[", "1", "]"}]}], "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"c2", "&"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
       "]"}], "&"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"b884e8ee-f6cf-4dc2-8f0d-ef02cf8bbf68"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Follows\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"d53f9d82-537b-48bd-8753-cc19c9fe0ed4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSCombinator", "[", "\"\<Follows\>\"", "]"}], "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"c1", "=", 
       RowBox[{"cssSelectorCompile", "[", "b", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"cssSelectorCompile", "[", "a", "]"}], "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{
          RowBox[{"$ancestors", "[", "#", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", " ", "None"}], "]"}]}]}], 
     "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Or", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", "\n", 
       "\t\t\t", 
       RowBox[{"AnyTrue", "[", 
        RowBox[{
         RowBox[{"$priors", "[", "#", "]"}], ",", " ", 
         RowBox[{"c2", "&"}]}], "]"}]}], "\n", "\t\t\t", "]"}], "&"}]}], "\n",
    "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"9096e681-7b72-4fea-8bc5-cb636439d1a4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ID\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"aa958915-0fca-45c4-bd40-91c9d0cbbe82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<ID\>\"", "]"}], "[", "a_", "]"}], "]"}], 
  ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"$data", "[", 
     RowBox[{"#", ",", " ", "\"\<Meta\>\"", ",", " ", "\"\<id\>\""}], "]"}], 
    "\[Equal]", "a"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"d7bf16fd-5cf0-4da9-90aa-43670551bdba"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Class\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"885480d4-0a16-4def-8035-3df44c1c1cc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Class\>\"", "]"}], "[", "a_", "]"}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"StringContainsQ", "[", 
    RowBox[{
     RowBox[{"$data", "[", 
      RowBox[{"#", ",", " ", "\"\<Meta\>\"", ",", " ", "\"\<class\>\""}], 
      "]"}], ",", " ", 
     RowBox[{"a", "~~", 
      RowBox[{"(", 
       RowBox[{"\"\< \>\"", "|", "EndOfString"}], ")"}]}]}], "]"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"2ee24d4b-fb33-4b03-861b-8de9f506028a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Element\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f57ee52a-7165-4499-9a8b-6e0239b55949"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Element\>\"", "]"}], "[", "a_", "]"}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"$data", "[", 
     RowBox[{"#", ",", " ", "\"\<Type\>\""}], "]"}], "\[Equal]", "a"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"bdcccfcf-10a1-41b0-9a22-06765a653333"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Attribute\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c387a6ce-fb14-4b93-8f51-acd0a7e28ea9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", "attr_", 
    "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"KeyExistsQ", "[", 
    RowBox[{
     RowBox[{"$data", "[", 
      RowBox[{"#", ",", " ", "\"\<Meta\>\""}], "]"}], ",", " ", "attr"}], 
    "]"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"9c0ce94d-d56d-4d0c-8f84-775fb4a70b6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{"\"\<~\>\"", "|", "\"\<*\>\""}], ",", " ", "attr_", ",", " ", 
     "val_"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"StringContainsQ", "[", 
    RowBox[{
     RowBox[{"$data", "[", 
      RowBox[{"#", ",", " ", "\"\<Meta\>\"", ",", " ", "attr"}], "]"}], ",", 
     " ", "val"}], "]"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"2657bae2-e430-4a81-acfd-826526027fa9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{"\"\<|\>\"", "|", "\"\<^\>\""}], ",", " ", "attr_", ",", " ", 
     "val_"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"StringStartsQ", "[", 
    RowBox[{
     RowBox[{"$data", "[", 
      RowBox[{"#", ",", " ", "\"\<Meta\>\"", ",", " ", "attr"}], "]"}], ",", 
     " ", "val"}], "]"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"acd136f7-cc31-43d9-9054-646ecb73890e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssSelectorCompile", "[", 
   RowBox[{
    RowBox[{"CSSSelector", "[", "\"\<Attribute\>\"", "]"}], "[", 
    RowBox[{"oops_", ",", " ", "attr_", ",", " ", "val_"}], "]"}], "]"}], ":=",
   "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"$data", "[", 
     RowBox[{"#", ",", " ", "\"\<Meta\>\"", ",", " ", 
      RowBox[{"attr", "<>", "oops"}]}], "]"}], "==", "val"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"c90a61d3-c541-4a16-9c44-3fdb2b2ee9b7"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]condenseNodeFuncs\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e8bba73c-f198-4115-a5ce-e3d36bea15f6"],

Cell["\<\
\[LeftCeiling]Originally this was gonna be more complex, but we\
\[CloseCurlyQuote]ll leave it as is\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"fb6a10bf-48c9-4784-9590-c93b7f481a96"],

Cell[BoxData[
 RowBox[{"condenseNodeFuncs", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"30d0dbb7-7da3-4768-b074-512e087402ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"condenseNodeFuncs", "[", "\n", "\t", 
   RowBox[{"f", ":", 
    RowBox[{"Function", "[", "b_", "]"}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"node", ",", "parent", ",", "depth"}], "}"}], ",", " ", 
    RowBox[{"Evaluate", "@", 
     RowBox[{"f", "[", 
      RowBox[{"node", ",", "parent", ",", "depth"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"\t"}]}], \
"CodeInput",ExpressionUUID->"25a79e8c-6216-4bc6-91e2-58421641c8f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]downconvertNodeFunc\[RightFloor]", "CodeSubsubsubsection",
 
 Evaluatable->True,ExpressionUUID->"04d46bf9-833f-4a21-8480-e5c43e1f0195"],

Cell[BoxData[
 RowBox[{
  RowBox[{"downconvertNodeFunc", "[", "sel_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "node", ",", " ", "parent", ",", " ", "depth", ",", "\n", "\t\t\t", 
      "$ancestors", ",", " ", "$priors", ",", "\n", "\t\t\t", "$akids", ",", 
      " ", "$data", ",", "\n", "\t\t\t", "Part", ",", " ", "And", ",", " ", 
      "Or", ",", "\n", "\t\t\t", "Equal", ",", " ", "Take", ",", " ", 
      "AnyTrue", ",", "\n", "\t\t\t", "StringContainsQ", ",", " ", 
      "StringStartsQ", ",", "\n", "\t\t\t", "StringEndsQ"}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "node", "}"}], ",", " ", "\n", "\t\t\t", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"sel", "[", 
         RowBox[{"node", ",", " ", 
          RowBox[{"node", "[", "\"\<Parent\>\"", "]"}], ",", " ", "None"}], 
         "]"}], "/.", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"$data", "[", 
           RowBox[{"node", ",", " ", "x__"}], "]"}], ":>", 
          RowBox[{"node", "[", "x", "]"}]}], "\n", "\t\t\t\t\t", "}"}]}], 
       "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4965b4d2-d3a9-4122-8e69-a30104be1707"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CompileCSSSelector\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"6c1bcd85-6fb4-4140-ba01-73b613a7030c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CompileCSSSelector", "[", "selector_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "node", ",", " ", "parent", ",", " ", "depth", ",", "\n", "\t\t\t", 
      "$ancestors", ",", " ", "$priors", ",", "\n", "\t\t\t", "$akids", ",", 
      " ", "$data", ",", "\n", "\t\t\t", "Part", ",", " ", "And", ",", " ", 
      "Or", ",", "\n", "\t\t\t", "Equal", ",", " ", "Take", ",", " ", 
      "AnyTrue", ",", "\n", "\t\t\t", "StringContainsQ", ",", " ", 
      "StringStartsQ", ",", "\n", "\t\t\t", "StringEndsQ"}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{"condenseNodeFuncs", "@", "\n", "\t\t\t", 
     RowBox[{"cssSelectorCompile", "[", "selector", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"892e495d-6f0b-421a-8b5b-468cc76657d6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]DFSelect\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"db855833-e373-4d63-8c40-c643c17f2e97"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"prepVertex", "[", 
    RowBox[{"u_", ",", " ", "v_", ",", " ", "d_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"prevActive", "=", 
       RowBox[{"Lookup", "[", 
        RowBox[{"$akids", ",", " ", "v", ",", " ", "Nothing"}], "]"}]}], 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"$ancestors", "[", "u", "]"}], "=", "\n", "\t\t\t", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{"$ancestors", ",", " ", "v", ",", " ", 
           RowBox[{"{", "None", "}"}]}], "]"}], ",", " ", "v"}], "]"}]}], ";",
       "\n", "\t\t", 
      RowBox[{
       RowBox[{"$priors", "[", "u", "]"}], "=", "\n", "\t\t\t", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{"$priors", ",", " ", "prevActive", ",", " ", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "prevActive"}], "]"}]}], 
      ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"$akids", "[", "v", "]"}], "=", "u"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringStartsQ", "[", 
         RowBox[{"u", ",", " ", "\"\<table:\>\""}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", " ", "v", ",", " ", "d"}], "}"}], ",", " ", 
          RowBox[{"$ancestors", "[", "u", "]"}], ",", " ", 
          RowBox[{"$priors", "[", "u", "]"}]}], "}"}]}], "]"}]}]}], "\n", 
    "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"a7e808db-7cbb-457b-b8bf-434398d79710"],

Cell[BoxData[
 RowBox[{
  RowBox[{"discoverVertexFunc", "[", "nf_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Function", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"prepVertex", "[", "##", "]"}], ";", "\n", "\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"nf", "[", "##", "]"}], ",", " ", 
      RowBox[{"Sow", "[", "#", "]"}]}], "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"b71bb1ec-33d3-4b74-88f4-a9540f395842"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CSSDFSelect", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "vertexFunc_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"$ancestors", "=", 
       RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"$akids", "=", 
       RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"$priors", "=", 
       RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"$data", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}]}], "\n", "\t\t\t", "}"}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Reap", "[", "\n", "\t\t\t", 
       RowBox[{"DepthFirstScan", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"RootNode", "[", "x", "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"\"\<DiscoverVertex\>\"", "\[Rule]", 
          RowBox[{"discoverVertexFunc", "[", "vertexFunc", "]"}]}]}], "\n", 
        "\t\t\t\t", "]"}], "\n", "\t\t\t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "~", "Flatten", "~", "1"}]}], "\n", 
   "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"4e77d2b5-5acf-4793-9c7f-2e27214bde75"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CSSSelect\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"9871e5eb-3bd2-4f9a-8d49-1083a1d945e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CSSSelect", "[", 
    RowBox[{"x_", ",", " ", "selector_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sel", "=", 
       RowBox[{"CompileCSSSelector", "@", 
        RowBox[{"ParseCSSSelector", "[", "selector", "]"}]}]}], "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FreeQ", "[", 
        RowBox[{"sel", ",", " ", 
         RowBox[{"$ancestors", "|", "$priors"}]}], "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"$data", "=", 
           RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], "}"}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"Keys", "@", 
          RowBox[{"Select", "[", 
           RowBox[{"$data", ",", " ", 
            RowBox[{"downconvertNodeFunc", "@", "sel"}]}], "]"}]}]}], "\n", 
        "\t\t\t\t", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"CSSDFSelect", "[", 
        RowBox[{"x", ",", " ", "sel"}], "]"}]}], "\n", "\t\t\t", "]"}]}], 
    "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"6f7aa287-392e-402a-98b5-d39d59b3263b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Graph API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"b75586c8-101e-4958-9b41-8b71d228ecb8"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLSubgraph\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"71b38dca-777e-4cc0-9657-d4201e1578ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xmlNodeTree", "[", 
    RowBox[{"d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"n", ",", "\n", "\t\t", 
     RowBox[{"Cases", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"n", ",", " ", "\"\<Children\>\""}], "]"}], ",", " ", "\n", 
       "\t", "\t\t", 
       RowBox[{
        RowBox[{"Node", "[", "s_", "]"}], "\[RuleDelayed]", 
        RowBox[{"xmlNodeFullChildren", "[", 
         RowBox[{"d", ",", " ", "s"}], "]"}]}]}], "\n", "\t\t\t", "]"}]}], 
    "\n", "\t\t", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xmlNodeTree", "~", "SetAttributes", "~", "HoldFirst"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"a9e21c7b-0d0f-4500-a919-146994420d28"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xmlSubtree", "[", 
    RowBox[{"g_", ",", " ", "d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"SelectFirst", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"ConnectedComponents", "[", 
      RowBox[{"VertexDelete", "[", 
       RowBox[{"g", ",", " ", 
        RowBox[{"d", "[", 
         RowBox[{"n", ",", " ", "\"\<Parent\>\""}], "]"}]}], "]"}], "]"}], 
     ",", "\n", "\t\t", 
     RowBox[{"MemberQ", "[", "n", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"93e64696-ba75-463c-b5ad-7411d20cb71b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLSubgraph", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "node_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "verts", ",", "\n", "\t\t\t", "sa", ",", "\n", "\t\t\t", "sg", ",", "\n",
       "\t\t\t", 
      RowBox[{"g", "=", 
       RowBox[{"x", "[", "\"\<Graph\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"d", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}]}], "\n", "\t\t\t", "}"}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"verts", "=", 
      RowBox[{"xmlSubtree", "[", 
       RowBox[{"g", ",", " ", "d", ",", " ", "node"}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"XMLGraph", "@", "\n", "\t\t\t", 
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Data\>\"", "\[Rule]", 
         RowBox[{"AssociationThread", "[", 
          RowBox[{"verts", ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"d", ",", " ", "verts"}], "]"}]}], "]"}]}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"\"\<Graph\>\"", "\[Rule]", 
         RowBox[{"EdgeAdd", "[", 
          RowBox[{
           RowBox[{"Subgraph", "[", 
            RowBox[{"g", ",", " ", "verts"}], "]"}], ",", " ", 
           RowBox[{"\"\<Root\>\"", "\[UndirectedEdge]", "node"}]}], "]"}]}]}],
        "\n", "\t\t\t\t", "|>"}]}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"ecd87349-4c05-4694-83dc-a6f533b52daa"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FormattedXMLGraph\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"47e93879-7691-4d2e-b9a8-36f9b578ab76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "FormattedXMLGraph", "]"}], "=", "\n", "\t", 
    RowBox[{"Join", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Options", "[", "Graph", "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{"ColorRules", "->", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"\"\<Root\>\"", "\[Rule]", "Black"}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"\"\<body\>\"", "\[Rule]", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}]}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<head\>\"", "->", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<div\>\"", "->", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "3", "]"}]}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<p\>\"", "->", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "4", "]"}]}]}], "\n", 
         "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", 
     "]"}]}], ";"}], "\t"}], "\n", 
 RowBox[{
  RowBox[{"FormattedXMLGraph", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"VertexDelete", "[", 
           RowBox[{"#", ",", " ", "\"\<Root\>\""}], "]"}], "&"}], "@"}], 
        "*)"}], 
       RowBox[{"x", "[", "\"\<Graph\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"r", "=", 
       RowBox[{"RootNode", "[", "x", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"cr", "=", 
       RowBox[{"OptionValue", "[", "ColorRules", "]"}]}], ",", "\n", "\t\t\t",
       "vs"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"cr", "=", "\n", "\t\t\t", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"cr", "/.", 
           RowBox[{"\"\<Root\>\"", "\[Rule]", "r"}]}], ",", " ", 
          RowBox[{"_", "\[Rule]", "None"}]}], "}"}]}]}]}], ";", "\n", "\t\t", 
     
     RowBox[{"vs", "=", "\n", "\t\t\t", 
      RowBox[{"Normal", "@", 
       RowBox[{
        RowBox[{"DeleteCases", "[", "None", "]"}], "@", "\n", "\t\t\t\t", 
        RowBox[{"AssociationMap", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{
             RowBox[{"#", "[", "\"\<Type\>\"", "]"}], ",", " ", "cr"}], "]"}],
            "&"}], ",", " ", "\n", "\t\t\t\t\t", 
          RowBox[{"VertexList", "@", "g"}]}], "\n", "\t\t\t\t\t", "]"}]}]}]}],
      ";", "\n", "\t\t", 
     RowBox[{"Graph", "[", "\n", "\t\t\t", 
      RowBox[{"g", ",", "\n", "\t\t\t", 
       RowBox[{"VertexStyle", "\[Rule]", "vs"}], ",", "\n", "\t\t\t", 
       RowBox[{"GraphLayout", "->", "\n", "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"\"\<LayeredDigraphEmbedding\>\"", ",", " ", 
          RowBox[{"\"\<RootVertex\>\"", "\[Rule]", "r"}]}], "}"}]}], ",", 
       "\n", "\t\t\t", "ops"}], "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"6b2a27f5-0109-4457-9e6b-a11224bce883"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraphSort\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"bb2064c8-d518-47d1-9e9e-b03b0131b34b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLGraphSort", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      "graph", ",", "\n", "\t\t\t", "vl", ",", "\n", "\t\t\t", "vo"}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"graph", "=", 
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"vl", "=", 
      RowBox[{"VertexList", "@", "graph"}]}], ";", "\n", "\t\t", 
     RowBox[{"vo", "=", 
      RowBox[{"Ordering", "@", 
       RowBox[{"GraphDistance", "[", 
        RowBox[{"graph", ",", " ", "\"\<Root\>\""}], "]"}]}]}], ";", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], "=", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"VertexList", "[", "a", "]"}], "[", 
         RowBox[{"[", "vo", "]"}], "]"}], ",", " ", 
        RowBox[{"EdgeList", "[", "a", "]"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MutableGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
       RowBox[{"XMLGraph", "[", "a", "]"}]}], "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"b86f5306-a58d-4813-a36b-055fced6b260"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Scans\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"08469ad7-99b5-4b1a-80b9-759b393bcd3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLGraphBFS", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\n", "\t", 
    RowBox[{"rootNode", ":", 
     RowBox[{"_String", "|", 
      RowBox[{"Automatic", ":", "Automatic"}]}]}], ",", " ", "\n", "\t", 
    RowBox[{"events_", "?", "OptionQ"}], ",", " ", "e___"}], "\n", "\t", 
   "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"VertexDelete", "[", 
        RowBox[{
         RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", " ", "\"\<Root\>\""}],
         "]"}]}], ",", " ", 
      RowBox[{"r", "=", 
       RowBox[{"x", "[", "\"\<Root\>\"", "]"}]}]}], "}"}], ",", "\n", "\t\t", 
    
    RowBox[{"BreadthFirstScan", "[", 
     RowBox[{"g", ",", " ", "r", ",", " ", "events", ",", " ", "e"}], "]"}]}],
    "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"60f391cc-7419-48ef-972e-f0a22fc36d40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLGraphDFS", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "\n", "\t", 
    RowBox[{"rootNode", ":", 
     RowBox[{"_String", "|", 
      RowBox[{"Automatic", ":", "Automatic"}]}]}], ",", " ", "\n", "\t", 
    RowBox[{"events_", "?", "OptionQ"}], ",", " ", "e___"}], "\n", "\t", 
   "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"VertexDelete", "[", 
        RowBox[{
         RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", " ", "\"\<Root\>\""}],
         "]"}]}], ",", " ", 
      RowBox[{"r", "=", 
       RowBox[{"x", "[", "\"\<Root\>\"", "]"}]}]}], "}"}], ",", "\n", "\t\t", 
    
    RowBox[{"DepthFirstScan", "[", 
     RowBox[{"g", ",", " ", "r", ",", " ", "events", ",", " ", "e"}], "]"}]}],
    "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"755181fe-08c0-4a1a-95ec-0f8fe8996265"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Conversion API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"d347c7c0-7c3d-4a29-8fdc-7d6e78f59c28"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FromXMLAssociation\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"237a452f-9354-434f-bd7e-0158aedfe6e0"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]fromAssoc\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"cb2f683f-436f-43a0-8833-4179ecbc1bf0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fromAssoc", "[", 
   RowBox[{"p_", ",", " ", "a_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"name", "=", "\n", "\t\t\t\t", 
      RowBox[{"Lookup", "[", 
       RowBox[{"a", ",", " ", "\"\<Name\>\"", ",", " ", 
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"CreateUUID", "[", 
            RowBox[{
             RowBox[{"a", "[", "\"\<Type\>\"", "]"}], "<>", "\"\<:\>\""}], 
            "]"}], ",", " ", "\"\<-\>\"", ",", " ", "2"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "\n", "\t\t\t", "}"}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Sow", "@", "\n", "\t\t\t", 
      RowBox[{"Join", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"<|", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"\"\<Parent\>\"", "\[Rule]", "p"}], ",", "\n", "\t", 
          "\t\t\t\t", 
          RowBox[{"\"\<Name\>\"", "\[Rule]", "name"}]}], "\n", "\t\t\t\t\t", 
         "|>"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"MapAt", "[", 
         RowBox[{"a", ",", "\n", "\t", "\t", "\t", "\t\t", 
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{"#", ",", " ", "\n", "\t", "\t", "\t\t\t\t", 
             RowBox[{
              RowBox[{"b_Association", "?", "AssociationQ"}], ":>", "\n", 
              "\t", "\t", "\t\t\t\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"ba", "=", 
                  RowBox[{"fromAssoc", "[", 
                   RowBox[{"name", ",", " ", "b"}], "]"}]}], "}"}], ",", "\n",
                 "\t", "\t", "\t\t\t\t\t\t", 
                RowBox[{"Node", "[", 
                 RowBox[{"ba", "[", "\"\<Name\>\"", "]"}], "]"}]}], "\n", 
               "\t", "\t", "\t\t\t\t\t\t", "]"}]}]}], "\n", "\t", "\t", 
            "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t", "\t", "\t\t\t", 
          "\"\<Children\>\""}], "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t",
        "]"}]}], ";"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8c083653-08a7-4bb9-9624-9692ddbb4b9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FromXMLAssociation\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"40b833b5-9a66-4e9e-85ae-2e59624fadaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FromXMLAssociation", "[", "a_Association", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"data", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Reap", "[", 
          RowBox[{"fromAssoc", "[", 
           RowBox[{"\"\<Root\>\"", ",", " ", "a"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"ConstructXMLGraph", "@", "\n", "\t\t\t", 
     RowBox[{"<|", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"\"\<Data\>\"", "\[Rule]", 
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"data", ",", " ", "\"\<Name\>\""}], "]"}], ",", " ", 
          "data"}], "]"}]}], ",", "\n", "\t\t\t\t", 
       RowBox[{"\"\<Graph\>\"", "\[Rule]", 
        RowBox[{"Thread", "[", 
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{
           RowBox[{"Lookup", "[", 
            RowBox[{"data", ",", " ", "\"\<Parent\>\""}], "]"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"data", ",", " ", "\"\<Name\>\""}], "]"}]}], "]"}], 
         "]"}]}]}], "\n", "\t\t\t\t", "|>"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"72369a88-2107-49a5-86cc-4f43c25676a8"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ToXMLAssociation\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"f4e90f05-9d37-46f0-bb8f-ec958bd5b34e"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]BFS\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"93390014-2133-4b33-b537-47d1ceca9659"],

Cell["\<\
\[LeftCeiling]
\tI think a recursive algorithm will actually perform better
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"df4dd0b2-d897-4e66-b2b5-3d1530b79403"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"insertAssociationVertex", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"d_", ",", " ", "a_", ",", " ", "p_"}], "]"}], "]"}], "[", 
    RowBox[{"node_", ",", " ", "parent_", ",", " ", "depth_"}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"(", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "node", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "[", "parent", "]"}], ",", " ", "parent"}], "}"}]}], ";",
      "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "[", "node", "]"}], ",", " ", "node"}], "}"}]}]}], 
       "]"}], "=", 
      RowBox[{"d", "[", "a", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{"p", "[", "node", "]"}], "}"}]}]}], "]"}], "="}]}], "\n", 
    "\t\t", ")"}]}], 
  "*)"}]], "CodeInput",ExpressionUUID->"672d3279-9eeb-4550-b298-9e17e4f6ff7c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ToXMLAssociation", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"p", "=", 
        RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"d", "=", 
        RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"r", "=", 
        RowBox[{"RootNode", "[", "x", "]"}]}]}], "\n", "\t\t\t", "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", "r", "]"}], "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t\t", 
      RowBox[{"BreadthFirstScan", "[", 
       RowBox[{
        RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", "\n", "\t\t\t", "r", 
        ",", "\n", "\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{"\"\<DiscoverVertex\>\"", "->", "\n", "\t\t\t\t\t", 
          RowBox[{"insertAssociationVertex", "[", 
           RowBox[{"Hold", "[", 
            RowBox[{"d", ",", " ", "a", ",", " ", "p"}], "]"}], "]"}]}], "\n",
          "\t\t\t\t", "}"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
      "a"}]}], "\n", "\t\t", "]"}]}], 
  "*)"}]], "CodeInput",ExpressionUUID->"91a348ee-c9c0-49a6-adfe-73e1bd1c0235"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Recursive\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1062c08d-401c-44db-8815-4570823b6847"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toXMLAssociationRec", "[", 
    RowBox[{"d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"MapAt", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{
         RowBox[{"Node", "[", "s_", "]"}], ":>", 
         RowBox[{"toXMLAssociationRec", "[", 
          RowBox[{"d", ",", " ", "s"}], "]"}]}], ",", " ", "1"}], "]"}], 
      "&"}], ",", "\n", "\t\t", 
     RowBox[{"d", "[", "n", "]"}], ",", "\n", "\t\t", "\"\<Children\>\""}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"toXMLAssociationRec", "~", "SetAttributes", "~", 
  "HoldFirst"}]}], \
"CodeInput",ExpressionUUID->"c8fbdef5-fea3-4ad8-917f-2700317584f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToXMLAssociation", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"r", "=", 
       RowBox[{"RootNode", "[", "x", "]"}]}]}], "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{"toXMLAssociationRec", "[", 
     RowBox[{"d", ",", " ", "r"}], "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4108d398-8fee-4eb9-b210-3ee753f66d1b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FromXMLObject\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"da145b86-7024-4067-8f0c-5ada82a3fc2f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLObject", "[", "s_String", "]"}], ":=", "\n", "\t", 
   RowBox[{"FromXMLObject", "@", "\n", "\t\t", 
    RowBox[{"Quiet", "@", 
     RowBox[{"Check", "[", 
      RowBox[{
       RowBox[{"ImportString", "[", 
        RowBox[{"s", ",", " ", "\"\<XML\>\""}], "]"}], ",", " ", 
       RowBox[{"ImportString", "[", 
        RowBox[{"s", ",", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<HTML\>\"", ",", " ", "\"\<XMLObject\>\""}], "}"}]}], 
        "]"}]}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLObject", "[", 
    RowBox[{
     RowBox[{"XMLObject", "[", "_", "]"}], "[", 
     RowBox[{"_", ",", " ", "d_", ",", " ", "_"}], "]"}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"FromXMLObject", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"FromXMLObject", "[", "x_XMLElement", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"nodes", "=", 
       RowBox[{"CreateNode", "[", 
        RowBox[{"\"\<Root\>\"", "\[Rule]", "x"}], "]"}]}], ",", "\n", 
      "\t\t\t", "edges", ",", "\n", "\t\t\t", "graph", ",", "\n", "\t\t\t", 
      "data"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"nodes", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"nodes", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"data", "=", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"Lookup", "[", 
         RowBox[{"nodes", ",", " ", "\"\<Name\>\""}], "]"}], ",", " ", 
        "nodes"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"edges", "=", "\n", "\t\t\t", 
      RowBox[{"Thread", "@", "\n", "\t\t\t\t", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{"nodes", ",", " ", "\"\<Parent\>\""}], "]"}], ",", " ", 
         RowBox[{"Lookup", "[", 
          RowBox[{"nodes", ",", " ", "\"\<Name\>\""}], "]"}]}], "]"}]}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"graph", "=", 
      RowBox[{"TreeGraph", "[", "edges", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"ConstructXMLGraph", "@", "\n", "\t\t\t", 
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Graph\>\"", "\[Rule]", "graph"}], ",", "\n", "\t\t\t\t", 
        
        RowBox[{"\"\<Data\>\"", "\[Rule]", "data"}]}], "\n", "\t\t\t\t", 
       "|>"}]}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"692f5bff-182e-4f1d-9cb7-13eebaf16c90"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ToXMLObject\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"30ba4923-d27c-4e15-93d2-d9ff7ee0a16b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toXMLElementRec", "[", 
    RowBox[{"d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", "=", 
       RowBox[{"d", "[", "n", "]"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"XMLElement", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"a", "[", "\"\<Type\>\"", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"a", "[", "\"\<Meta\>\"", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"a", "[", "\"\<Children\>\"", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Node", "[", "s_", "]"}], ":>", 
          RowBox[{"toXMLElementRec", "[", 
           RowBox[{"d", ",", " ", "s"}], "]"}]}], ",", " ", "1"}], "]"}]}], 
      "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"toXMLElementRec", "~", "SetAttributes", "~", 
  "HoldFirst"}]}], \
"CodeInput",ExpressionUUID->"08bc9c6e-ab6e-4187-a164-74924160792d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToXMLObject", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"r", "=", 
       RowBox[{"RootNode", "[", "x", "]"}]}]}], "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{"toXMLElementRec", "[", 
     RowBox[{"d", ",", " ", "r"}], "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5c0c5bae-4ba8-44d0-bc9a-47ae2d0c7998"]
}, Closed]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"62a819e5-936f-4d32-9156-\
8a7af6518a86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], 
  ";"}]], \
"InputSection",ExpressionUUID->"acc9d489-f0b1-47cd-a8c0-e469063eb3cc"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"4beedad2-ba75-4bf0-b3ff-\
dc6eca6b6029"],

Cell[BoxData[
 RowBox[{"Remove", "[", "\"\<XMLGraph`*`*\>\"", "]"}]], "Input",
 CellLabel->
  "In[153]:=",ExpressionUUID->"302a191d-18fe-4ca1-915f-878970676795"],

Cell[BoxData[
 RowBox[{"<<", "XMLGraph`"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"89d01cc7-3ca8-4123-b89e-9f5ee60ce202"],

Cell[BoxData[
 RowBox[{"\"\<https://developer.github.com/apps/building-oauth-apps/\
understanding-scopes-for-oauth-apps/#available-scopes\>\"", "//", 
  "SystemOpen"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"128e462c-c7d0-4b4a-9338-c19b575a0255"],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://developer.github.com/apps/building-oauth-apps/understanding-\
scopes-for-oauth-apps/#available-scopes\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<HTML\>\"", ",", " ", "\"\<XMLObject\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"566da8a8-9290-4d6d-81a0-496855eac5e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"XMLGraph", "@", "test"}]}]], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"57effd4a-3753-421b-962f-6c8e9e7338f6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["XMLGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Root: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"html\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Nodes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["381", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Root: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"html\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Nodes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["381", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  XMLGraph`XMLGraph[
   Association[
   "Version" -> 1, "Graph" -> 
    Graph[{"html:80da223b", "head:ee1d9544", "label:3007f935", 
       "input:30160c7d", "form:f1e1a1e7", "div:d56b571c", "ul:d591f48a", 
       "body:f47f7457", "h2:e705080f", "a:f3f42e31", "div:c23e7236", 
       "li:b73edc35", "a:e4c8a715", "ul:ebec5264", "li:f8806e90", 
       "a:b5fcfcb2", "li:096ae289", "a:6682ddff", "div:ac46b763", 
       "select:b378d16a", "option:5b5d8cfa", "optgroup:22a4f9aa", 
       "option:5d2076f8", "optgroup:db77e68a", "option:2f1466a3", 
       "optgroup:ca682084", "option:9a26e14e", "optgroup:bcd31ecf", 
       "option:49d7e34c", "optgroup:f4a34065", "option:4b0f9b31", 
       "optgroup:f81a423f", "option:a9ea57b8", "option:4de29f7f", 
       "option:43305945", "option:db6409ef", "option:7c096a78", 
       "option:7cb81077", "option:4c4e678b", "option:5f401676", 
       "optgroup:31dc47f7", "option:8c71cad6", "option:5c36e7d5", 
       "option:f3d45886", "option:e44ef44a", "option:f2c9707b", 
       "option:5a692542", "optgroup:20d81043", "option:e7b5fdb7", 
       "option:208ff86f", "option:f214f2b1", "option:77d9dbbd", 
       "option:187f7125", "optgroup:d7025718", "option:9ae4887e", 
       "option:a78c1080", "option:f39d1536", "option:40c1ed24", 
       "option:27a4b95c", "option:3aa1508a", "div:7324a562", 
       "section:364f6cb1", "a:11805c0c", "span:fbc3a60c", "h1:86f75d4a", 
       "div:ceda39f3", "p:7e2ec7e1", "em:0ef79f66", "div:2cc95eb5", 
       "li:05db0129", "a:8dd2227a", "ul:e283d998", "li:ed9b2f29", 
       "a:7e2323cc", "li:dfbdc7d3", "a:026526e2", "p:e10302f5", "p:e8ddfd06", 
       "pre:9b1c4c34", "span:428e63c0", "li:66d942eb", "code:db725e2f", 
       "ul:b9dd26b5", "li:69c90bb1", "code:ea8b678b", "a:ef35ff8d", 
       "span:6d984cbe", "h2:4800e38a", "tr:0e4646b5", "th:0bfbb739", 
       "th:b3519447", "thead:b615f6b3", "table:3396a8ee", "strong:1dd69c5a", 
       "code:6ba68d10", "td:69b78581", "tr:095800e8", "td:285a904e", 
       "tbody:c1a4436a", "strong:540f417f", "code:5475e1f5", "td:5795f3e6", 
       "tr:974b790b", "td:418208f9", "td:f51b942f", "code:3efe94e8", 
       "tr:f1c637b2", "td:4fb99c55", "em:919d0e00", "td:cf2af89f", 
       "code:f9b6a90d", "tr:b0bcb265", "td:90a1a989", "a:3fb1c5f7", 
       "em:77591606", "td:fc994044", "code:74740881", "tr:7363fc5a", 
       "td:7d9deb13", "td:1b48ca75", "code:e166e8d3", "tr:a9b083bb", 
       "td:471d9d6f", "em:546807e9", "strong:ec0c4b58", "code:17a4a57d", 
       "td:408a12e4", "tr:5083bcdf", "td:a5d092ac", "td:4ad02bef", 
       "code:0ef85607", "tr:7f21041b", "td:8717f60b", "td:f74ce8de", 
       "code:4557a219", "tr:bcef20e1", "td:9ec9a2eb", "strong:11a5ed26", 
       "code:c6e58a5a", "td:7ffe6690", "tr:5c7e3f9c", "td:5c223c9c", 
       "td:17f38bb1", "code:46320a1e", "tr:4f12e2da", "td:f233d87f", 
       "td:779d8f72", "code:35328166", "tr:63a07cd2", "td:92e26210", 
       "strong:e40f6d17", "code:8f73d280", "td:df6fbe81", "tr:f41cf485", 
       "td:9248140e", "td:280eb0d7", "code:872df66a", "tr:a7b61ceb", 
       "td:1f764f96", "td:c13376fc", "code:ccc4fbd2", "tr:edc7d005", 
       "td:cdde13b0", "strong:69f8f87c", "code:1179de47", "td:a154b4c9", 
       "tr:7c97bcf2", "td:9a94f79c", "strong:f16907d6", "strong:7acc385c", 
       "code:9aeaf9ed", "td:fe8b9bb3", "tr:e7420477", "td:178e7c8d", 
       "strong:6ca0cfa8", "code:c9c8fc38", "td:869a5da2", "tr:e91a853a", 
       "td:c9d7707d", "code:412766d0", "strong:83214a30", "code:d9e56ff5", 
       "td:c0c313ac", "tr:f86eaf5c", "td:d78691fd", "code:902fda05", 
       "code:fa5fd6de", "td:95383cd6", "code:0e85f7ba", "tr:1cabb944", 
       "td:ee5ccf12", "td:7f3f07a2", "code:1e257ca2", "tr:f6b0adac", 
       "td:42314228", "td:6940d93a", "code:946e60dc", "tr:139cd2eb", 
       "td:e72d812b", "strong:b40542e5", "code:cd837d14", "td:7e6c4e11", 
       "tr:003ce769", "td:3740aebb", "strong:3d6886e7", "code:0b0121a3", 
       "td:3b92dbb6", "tr:04d64fcd", "td:18a27413", "td:0088e241", 
       "code:e789fd80", "tr:7d5feb3d", "td:9450d23f", "strong:bf88c620", 
       "code:d1c71e64", "td:c7f3773c", "tr:03a2441d", "td:44a48403", 
       "td:4b578331", "code:0a9cf6c0", "tr:beaa6117", "td:2491851a", 
       "td:e922adf9", "code:5db9fe97", "tr:d9dccb4f", "td:86fc3274", 
       "p:2c5bd71b", "strong:aa42a5bf", "div:da3ff450", "pre:0c28b369", 
       "code:286bc6a9", "a:1abc6082", "span:bb79d128", "h2:2165cfad", 
       "p:d5a93a26", "code:bcb8e2b8", "p:24928c2b", "p:a235130e", 
       "p:dadd9710", "a:8a49d5e0", "a:1d75ead3", "span:6e084816", 
       "h2:644b79d7", "p:6bb4ab20", "code:a6822f34", "code:767e8dcb", 
       "code:20928d62", "code:80eb04ac", "code:32671877", "select:5cabc8a7", 
       "option:951fdcce", "optgroup:f53b867b", "option:1671d31e", 
       "optgroup:190b7fbd", "option:4b3fd04d", "optgroup:8190037d", 
       "option:7605da39", "optgroup:4c15e262", "option:e634aea9", 
       "optgroup:bd8dfaf1", "option:a8a27bf5", "optgroup:04347579", 
       "option:b9308718", "option:ce8d73db", "option:9f013e96", 
       "option:6cecb163", "option:d190fda6", "option:e4f6b270", 
       "option:51ba452f", "option:3e3d50c3", "optgroup:34860533", 
       "option:c01ab125", "option:d2c76d92", "option:afd32b03", 
       "option:f6f0594f", "option:2f91504d", "option:fc2ba317", 
       "optgroup:2c2ec8bc", "option:d83e6c7e", "option:af38efc1", 
       "option:12728e38", "option:a57c4638", "option:cc0d1f81", 
       "optgroup:86cb7506", "option:68076915", "option:7fc44f4b", 
       "option:f22787a2", "option:fedc1c21", "option:5d4e64d4", 
       "option:d3603f28", "div:5382af29", "h3:dd809b9f", "a:25549c8b", 
       "li:f42eb386", "ul:b1ccd1ec", "h3:41a67f11", "a:94082db7", 
       "li:b143e8e3", "h3:bc34909f", "a:852da122", "li:88f92ac7", 
       "h3:4797f923", "a:89b9e7a2", "li:4f07e409", "h3:ec86df17", 
       "a:2767c733", "a:72eb082b", "li:32456736", "li:31c722d5", "a:64a14ad2",
        "ul:d5df8ce6", "li:eb081765", "a:0a78f767", "li:91f3ccdb", 
       "a:cfdac299", "li:96089853", "a:12dab58c", "li:a17a0b6d", "a:c7435288",
        "li:b6db4cfa", "a:3e320e6e", "li:21c02478", "a:d1f4d25c", 
       "li:2a34f94a", "h3:37406f27", "a:dff06263", "a:eb9e20ae", 
       "li:d232ccd9", "li:dd07dc22", "a:723fdb23", "ul:07a2befe", 
       "li:674b91fb", "a:9cf2dc6f", "li:a51ba028", "a:02eaa68f", 
       "li:514f6863", "a:c76b63d6", "li:9949e40c", "a:fadff153", 
       "h3:3b5b657b", "a:22d37286", "a:6292e467", "li:822a71af", 
       "li:51bb8aeb", "a:53268970", "ul:26559516", "li:4f46d44f", 
       "a:e67d7de4", "li:a33f2764", "a:3ddc7efc", "li:228f944a", "a:97452980",
        "h3:45cd7cc0", "a:fdba1cad", "a:fba9be52", "li:25085ec5", 
       "li:d7f5c769", "a:162aec06", "ul:940dac63", "li:aaa46b3c", 
       "a:d48a2d82", "li:a53ab3d3", "a:b3ef8aa8", "li:d8ff9a59", "a:28e9514d",
        "li:94538c08", "a:a2b07aa5", "div:7e2b8b9d", "div:d331a83b", 
       "div:750c63c9", "a:6eb469a6", "footer:c803d768", "div:597a5859", 
       "span:d0e23327", "span:49239377", "nav:d448d4ed", "a:431a8c6a", 
       "a:399d6b90", "a:7cd3695e", "a:2dc2b8b0", "script:9396a2af", "Root"}, {
      Null, CompressedData["
1:eJwtlnVU1mcARj9MbBG7sT67FRv9LBQTsVBEMTAQRMXC2KabHevQpd06Zy91
qZuup+uwXRhz0+k2n2e7f9xz78P7/n4fh8M5EJWSEZ+eIxAIzAkLBGzpP+cU
uURu2s6D84pwOp/ILwrQBUUhUZguIoqy3RGiGDuC59yRdHFRQpQUpdju0qIM
211WlGO7y4sKbHdFUYntriyicBVcFVfD1XENHMQ1eY+7lqiN6+C6uB6ujxvw
nLuhaIQb4ya4KW7GfXdzEY1b4Ja4FW6N2/Ccuy0dSdvtRIxoLzrQIbqj6CQ6
0yG6i+gqYuluojvbHSd6sON4Lhb3xL1Eb9GH7e4r4kU/OkH0Zydwzz1ADBSD
6BA9WCTiIWIonUQPE8liOD2CtlPESHqUGC3G0Km0PZZ77nFivJhAp4mJ7DTu
udNFhphEZ4rJeApfz+S+e6rIEtNoezrn7hlipphFZ4vZ7GzuueeIuWIefQ9t
38s9931ivlhA2/dz7n5ALBSLaHsx5+4lYqlYRi+n7RXcc68Uq8SDtP0Q5+6H
xSPiUdp+jHP34+IJ8ST9FG2v5p57jXhaPEPbz3Lufk48L16g7bWcu9eJ9WID
vZHeJDazN3HfvUVsFdvo7bS9g3vunWKX2E2/SO8RL7H3cN+9V+wT++kD9EFx
CB/m6wd5zv2yeEW8Stuvce5+XbwhjtD2Uc7db4q3xNu0/Q7n7nfFe+IYfZy2
3+ee+wNxQpykP6Ttj7jn/lh8Ij6l7c84d38uvhCn6NO0/SX33F+Jr8U3tP0t
5+7vxPfiB9r+kXN3Eh2ifxJnxFn6nDjPPsc99wVxUVyiQ/Rl8TP7Mv4F/yp+
E1fY7qvimrhOh+jfxQ38B/4T38S3uO+OpP8St8Ud8Tfb/Y/4l+32H/awsP+3
O4fIyXbnErnZ7jwiLw7H+XB+XAAXxIVwYd7jLiKK4ghcDEfi4rgEz7lLilK4
NC6Dy+Jy3HeXFxVwRVwJV8ZRuArPuavS/nm6q4nqogYdpGuKWqI2HaTriLqi
Hh2k64sGoiEdpBuJxriJaEo3E81FNN1CtGS7W4nWbHcb0Zbtbidi2O72ogPb
HRId2SHcic+P5vtzdxZdcFcRS3cT3UUc3UP0ZLt7id5sdx/Rl+2OF/3Y8bw3
js91J4j+eIAYSA8Sg0UiPUQMZbuTxDC2O1kMZyfznkQ+xz1CpOCRYhQ9WowR
qfRYMY7tHi8msN1pYiLbnS4y2Om8N5XPdU+iM+nJYgrb7d8/dzi/i/ZU7Swx
DU/HM/BMPAtn49m8Jwv7f/sw3jmXvgtvhDTJ
       "]}], "Data" -> 
    Association[
     "head:ee1d9544" -> 
      Association[
       "Parent" -> "html:80da223b", "Type" -> "head", "Name" -> 
        "head:ee1d9544", "Meta" -> Association[], "Children" -> {}], 
      "input:30160c7d" -> 
      Association[
       "Parent" -> "label:3007f935", "Type" -> "input", "Name" -> 
        "input:30160c7d", "Meta" -> 
        Association[
         "type" -> "text", "class" -> "form-control", "id" -> "searchfield", 
          "placeholder" -> "Search\[Ellipsis]", "autocomplete" -> "off", 
          "autocorrect" -> "off", "autocapitalize" -> "off", "spellcheck" -> 
          "false"], "Children" -> {}], "label:3007f935" -> 
      Association[
       "Parent" -> "form:f1e1a1e7", "Type" -> "label", "Name" -> 
        "label:3007f935", "Meta" -> 
        Association["class" -> "mb-0", "id" -> "search-container"], 
        "Children" -> {"\n          ", 
          XMLGraph`Package`Node["input:30160c7d"], "\n          "}], 
      "div:d56b571c" -> 
      Association[
       "Parent" -> "form:f1e1a1e7", "Type" -> "div", "Name" -> "div:d56b571c",
         "Meta" -> Association["class" -> "cancel-search"], "Children" -> {}],
       "ul:d591f48a" -> 
      Association[
       "Parent" -> "form:f1e1a1e7", "Type" -> "ul", "Name" -> "ul:d591f48a", 
        "Meta" -> Association["id" -> "search-results"], "Children" -> {}], 
      "form:f1e1a1e7" -> 
      Association[
       "Parent" -> "body:f47f7457", "Type" -> "form", "Name" -> 
        "form:f1e1a1e7", "Meta" -> 
        Association[
         "enctype" -> "application/x-www-form-urlencoded", "method" -> "get"],
         "Children" -> {
          XMLGraph`Package`Node["label:3007f935"], 
          XMLGraph`Package`Node["div:d56b571c"], "\n          ", 
          XMLGraph`Package`Node["ul:d591f48a"], "\n        \n      "}], 
      "a:f3f42e31" -> 
      Association[
       "Parent" -> "h2:e705080f", "Type" -> "a", "Name" -> "a:f3f42e31", 
        "Meta" -> Association["shape" -> "rect", "href" -> "/apps/"], 
        "Children" -> {"Apps"}], "h2:e705080f" -> 
      Association[
       "Parent" -> "div:c23e7236", "Type" -> "h2", "Name" -> "h2:e705080f", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:f3f42e31"]}], "a:e4c8a715" -> 
      Association[
       "Parent" -> "li:b73edc35", "Type" -> "a", "Name" -> "a:e4c8a715", 
        "Meta" -> 
        Association[
         "shape" -> "rect", "class" -> "active", "href" -> "/apps"], 
        "Children" -> {"Building Apps"}], "li:b73edc35" -> 
      Association[
       "Parent" -> "ul:ebec5264", "Type" -> "li", "Name" -> "li:b73edc35", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:e4c8a715"]}], "a:b5fcfcb2" -> 
      Association[
       "Parent" -> "li:f8806e90", "Type" -> "a", "Name" -> "a:b5fcfcb2", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> "/apps/marketplace/"], 
        "Children" -> {"GitHub Marketplace"}], "li:f8806e90" -> 
      Association[
       "Parent" -> "ul:ebec5264", "Type" -> "li", "Name" -> "li:f8806e90", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:b5fcfcb2"]}], "a:6682ddff" -> 
      Association[
       "Parent" -> "li:096ae289", "Type" -> "a", "Name" -> "a:6682ddff", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> "/apps/works-with-github/"], 
        "Children" -> {"Works with GitHub"}], "li:096ae289" -> 
      Association[
       "Parent" -> "ul:ebec5264", "Type" -> "li", "Name" -> "li:096ae289", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:6682ddff"]}], "ul:ebec5264" -> 
      Association[
       "Parent" -> "div:c23e7236", "Type" -> "ul", "Name" -> "ul:ebec5264", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["li:b73edc35"], 
          XMLGraph`Package`Node["li:f8806e90"], 
          XMLGraph`Package`Node["li:096ae289"]}], "div:c23e7236" -> 
      Association[
       "Parent" -> "div:ac46b763", "Type" -> "div", "Name" -> "div:c23e7236", 
        "Meta" -> Association["class" -> "sub-nav mt-5 mb-3"], 
        "Children" -> {"\n      ", 
          XMLGraph`Package`Node["h2:e705080f"], "\n      ", 
          XMLGraph`Package`Node["ul:ebec5264"], "\n\n    "}], 
      "option:5b5d8cfa" -> 
      Association[
       "Parent" -> "select:b378d16a", "Type" -> "option", "Name" -> 
        "option:5b5d8cfa", "Meta" -> Association["value" -> ""], 
        "Children" -> {"Navigate the docs\[Ellipsis]"}], "option:5d2076f8" -> 
      Association[
       "Parent" -> "optgroup:22a4f9aa", "Type" -> "option", "Name" -> 
        "option:5d2076f8", "Meta" -> Association["value" -> "/apps/"], 
        "Children" -> {"Apps"}], "optgroup:22a4f9aa" -> 
      Association[
       "Parent" -> "select:b378d16a", "Type" -> "optgroup", "Name" -> 
        "optgroup:22a4f9aa", "Meta" -> Association["label" -> "Apps"], 
        "Children" -> {
          XMLGraph`Package`Node["option:5d2076f8"]}], "option:2f1466a3" -> 
      Association[
       "Parent" -> "optgroup:db77e68a", "Type" -> "option", "Name" -> 
        "option:2f1466a3", "Meta" -> 
        Association["value" -> "/apps/about-apps/"], 
        "Children" -> {"About apps"}], "optgroup:db77e68a" -> 
      Association[
       "Parent" -> "select:b378d16a", "Type" -> "optgroup", "Name" -> 
        "optgroup:db77e68a", "Meta" -> Association["label" -> "About apps"], 
        "Children" -> {
          XMLGraph`Package`Node["option:2f1466a3"]}], "option:9a26e14e" -> 
      Association[
       "Parent" -> "optgroup:ca682084", "Type" -> "option", "Name" -> 
        "option:9a26e14e", "Meta" -> 
        Association["value" -> "/apps/differences-between-apps/"], 
        "Children" -> {"Differences between GitHub Apps and OAuth Apps"}], 
      "optgroup:ca682084" -> 
      Association[
       "Parent" -> "select:b378d16a", "Type" -> "optgroup", "Name" -> 
        "optgroup:ca682084", "Meta" -> 
        Association[
         "label" -> "Differences between GitHub Apps and OAuth Apps"], 
        "Children" -> {
          XMLGraph`Package`Node["option:9a26e14e"]}], "option:49d7e34c" -> 
      Association[
       "Parent" -> "optgroup:bcd31ecf", "Type" -> "option", "Name" -> 
        "option:49d7e34c", "Meta" -> 
        Association["value" -> "/apps/migrating-oauth-apps-to-github-apps/"], 
        "Children" -> {"Migrating OAuth Apps to GitHub Apps"}], 
      "optgroup:bcd31ecf" -> 
      Association[
       "Parent" -> "select:b378d16a", "Type" -> "optgroup", "Name" -> 
        "optgroup:bcd31ecf", "Meta" -> 
        Association["label" -> "Migrating OAuth Apps to GitHub Apps"], 
        "Children" -> {
          XMLGraph`Package`Node["option:49d7e34c"]}], "option:4b0f9b31" -> 
      Association[
       "Parent" -> "optgroup:f4a34065", "Type" -> "option", "Name" -> 
        "option:4b0f9b31", "Meta" -> 
        Association["value" -> "/apps/building-your-first-github-app/"], 
        "Children" -> {"Quickstart: Building Your First GitHub App"}], 
      "optgroup:f4a34065" -> 
      Association[
       "Parent" -> "select:b378d16a", "Type" -> "optgroup", "Name" -> 
        "optgroup:f4a34065", "Meta" -> 
        Association["label" -> "Quickstart: Building Your First GitHub App"], 
        "Children" -> {
          XMLGraph`Package`Node["option:4b0f9b31"]}], "option:a9ea57b8" -> 
      Association[
       "Parent" -> "optgroup:f81a423f", "Type" -> "option", "Name" -> 
        "option:a9ea57b8", "Meta" -> 
        Association["value" -> "/apps/building-github-apps/"], 
        "Children" -> {"Overview"}], "option:4de29f7f" -> 
      Association[
       "Parent" -> "optgroup:f81a423f", "Type" -> "option", "Name" -> 
        "option:4de29f7f", "Meta" -> 
        Association[
         "value" -> "/apps/building-github-apps/creating-a-github-app/"], 
        "Children" -> {"Creating a GitHub App"}], "option:43305945" -> 
      Association[
       "Parent" -> "optgroup:f81a423f", "Type" -> "option", "Name" -> 
        "option:43305945", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/creating-github-apps-from-a-manifest/"],
         "Children" -> {"Creating GitHub Apps from a manifest"}], 
      "option:db6409ef" -> 
      Association[
       "Parent" -> "optgroup:f81a423f", "Type" -> "option", "Name" -> 
        "option:db6409ef", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/creating-custom-badges-for-github-apps/\
"], "Children" -> {"Creating custom badges for GitHub Apps"}], 
      "option:7c096a78" -> 
      Association[
       "Parent" -> "optgroup:f81a423f", "Type" -> "option", "Name" -> 
        "option:7c096a78", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/setting-permissions-for-github-apps/"], 
        "Children" -> {"Setting Permissions for GitHub Apps"}], 
      "option:7cb81077" -> 
      Association[
       "Parent" -> "optgroup:f81a423f", "Type" -> "option", "Name" -> 
        "option:7cb81077", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/authenticating-with-github-apps/"], 
        "Children" -> {"Authenticating with GitHub Apps"}], "option:4c4e678b" -> 
      Association[
       "Parent" -> "optgroup:f81a423f", "Type" -> "option", "Name" -> 
        "option:4c4e678b", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/identifying-and-authorizing-users-for-\
github-apps/"], 
        "Children" -> {"Identifying and authorizing users for GitHub Apps"}], 
      "option:5f401676" -> 
      Association[
       "Parent" -> "optgroup:f81a423f", "Type" -> "option", "Name" -> 
        "option:5f401676", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/understanding-rate-limits-for-github-\
apps/"], "Children" -> {"Understanding rate limits for GitHub Apps"}], 
      "optgroup:f81a423f" -> 
      Association[
       "Parent" -> "select:b378d16a", "Type" -> "optgroup", "Name" -> 
        "optgroup:f81a423f", "Meta" -> 
        Association["label" -> "Building GitHub Apps"], "Children" -> {
          XMLGraph`Package`Node["option:a9ea57b8"], 
          XMLGraph`Package`Node["option:4de29f7f"], 
          XMLGraph`Package`Node["option:43305945"], 
          XMLGraph`Package`Node["option:db6409ef"], 
          XMLGraph`Package`Node["option:7c096a78"], 
          XMLGraph`Package`Node["option:7cb81077"], 
          XMLGraph`Package`Node["option:4c4e678b"], 
          XMLGraph`Package`Node["option:5f401676"]}], "option:8c71cad6" -> 
      Association[
       "Parent" -> "optgroup:31dc47f7", "Type" -> "option", "Name" -> 
        "option:8c71cad6", "Meta" -> 
        Association["value" -> "/apps/managing-github-apps/"], 
        "Children" -> {"Overview"}], "option:5c36e7d5" -> 
      Association[
       "Parent" -> "optgroup:31dc47f7", "Type" -> "option", "Name" -> 
        "option:5c36e7d5", "Meta" -> 
        Association[
         "value" -> "/apps/managing-github-apps/modifying-a-github-app/"], 
        "Children" -> {"Modifying a GitHub App"}], "option:f3d45886" -> 
      Association[
       "Parent" -> "optgroup:31dc47f7", "Type" -> "option", "Name" -> 
        "option:f3d45886", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-github-apps/editing-a-github-app-s-permissions/"], 
        "Children" -> {"Editing a GitHub App's permissions"}], 
      "option:e44ef44a" -> 
      Association[
       "Parent" -> "optgroup:31dc47f7", "Type" -> "option", "Name" -> 
        "option:e44ef44a", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-github-apps/making-a-github-app-public-or-private/"]\
, "Children" -> {"Making a GitHub App public or private"}], "option:f2c9707b" -> 
      Association[
       "Parent" -> "optgroup:31dc47f7", "Type" -> "option", "Name" -> 
        "option:f2c9707b", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-github-apps/transferring-ownership-of-a-github-app/\
"], "Children" -> {"Transferring ownership of a GitHub App"}], 
      "option:5a692542" -> 
      Association[
       "Parent" -> "optgroup:31dc47f7", "Type" -> "option", "Name" -> 
        "option:5a692542", "Meta" -> 
        Association[
         "value" -> "/apps/managing-github-apps/deleting-a-github-app/"], 
        "Children" -> {"Deleting a GitHub App"}], "optgroup:31dc47f7" -> 
      Association[
       "Parent" -> "select:b378d16a", "Type" -> "optgroup", "Name" -> 
        "optgroup:31dc47f7", "Meta" -> 
        Association["label" -> "Managing GitHub Apps"], "Children" -> {
          XMLGraph`Package`Node["option:8c71cad6"], 
          XMLGraph`Package`Node["option:5c36e7d5"], 
          XMLGraph`Package`Node["option:f3d45886"], 
          XMLGraph`Package`Node["option:e44ef44a"], 
          XMLGraph`Package`Node["option:f2c9707b"], 
          XMLGraph`Package`Node["option:5a692542"]}], "option:e7b5fdb7" -> 
      Association[
       "Parent" -> "optgroup:20d81043", "Type" -> "option", "Name" -> 
        "option:e7b5fdb7", "Meta" -> 
        Association["value" -> "/apps/building-oauth-apps/"], 
        "Children" -> {"Overview"}], "option:208ff86f" -> 
      Association[
       "Parent" -> "optgroup:20d81043", "Type" -> "option", "Name" -> 
        "option:208ff86f", "Meta" -> 
        Association[
         "value" -> "/apps/building-oauth-apps/creating-an-oauth-app/"], 
        "Children" -> {"Creating an OAuth App"}], "option:f214f2b1" -> 
      Association[
       "Parent" -> "optgroup:20d81043", "Type" -> "option", "Name" -> 
        "option:f214f2b1", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-oauth-apps/creating-custom-badges-for-oauth-apps/"],
         "Children" -> {"Creating custom badges for OAuth Apps"}], 
      "option:77d9dbbd" -> 
      Association[
       "Parent" -> "optgroup:20d81043", "Type" -> "option", "Name" -> 
        "option:77d9dbbd", "Meta" -> 
        Association[
         "value" -> "/apps/building-oauth-apps/authorizing-oauth-apps/"], 
        "Children" -> {"Authorizing OAuth Apps"}], "option:187f7125" -> 
      Association[
       "Parent" -> "optgroup:20d81043", "Type" -> "option", "Name" -> 
        "option:187f7125", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"], 
        "Children" -> {"Understanding scopes for OAuth Apps"}], 
      "optgroup:20d81043" -> 
      Association[
       "Parent" -> "select:b378d16a", "Type" -> "optgroup", "Name" -> 
        "optgroup:20d81043", "Meta" -> 
        Association["label" -> "Building OAuth Apps"], "Children" -> {
          XMLGraph`Package`Node["option:e7b5fdb7"], 
          XMLGraph`Package`Node["option:208ff86f"], 
          XMLGraph`Package`Node["option:f214f2b1"], 
          XMLGraph`Package`Node["option:77d9dbbd"], 
          XMLGraph`Package`Node["option:187f7125"]}], "option:9ae4887e" -> 
      Association[
       "Parent" -> "optgroup:d7025718", "Type" -> "option", "Name" -> 
        "option:9ae4887e", "Meta" -> 
        Association["value" -> "/apps/managing-oauth-apps/"], 
        "Children" -> {"Overview"}], "option:a78c1080" -> 
      Association[
       "Parent" -> "optgroup:d7025718", "Type" -> "option", "Name" -> 
        "option:a78c1080", "Meta" -> 
        Association[
         "value" -> "/apps/managing-oauth-apps/modifying-an-oauth-app/"], 
        "Children" -> {"Modifying an OAuth App"}], "option:f39d1536" -> 
      Association[
       "Parent" -> "optgroup:d7025718", "Type" -> "option", "Name" -> 
        "option:f39d1536", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-oauth-apps/transferring-ownership-of-an-oauth-app/"]\
, "Children" -> {"Transferring ownership of an OAuth App"}], 
      "option:40c1ed24" -> 
      Association[
       "Parent" -> "optgroup:d7025718", "Type" -> "option", "Name" -> 
        "option:40c1ed24", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-oauth-apps/troubleshooting-authorization-request-\
errors/"], "Children" -> {"Troubleshooting authorization request errors"}], 
      "option:27a4b95c" -> 
      Association[
       "Parent" -> "optgroup:d7025718", "Type" -> "option", "Name" -> 
        "option:27a4b95c", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-oauth-apps/troubleshooting-oauth-app-access-token-\
request-errors/"], 
        "Children" -> {
         "Troubleshooting OAuth App access token request errors"}], 
      "option:3aa1508a" -> 
      Association[
       "Parent" -> "optgroup:d7025718", "Type" -> "option", "Name" -> 
        "option:3aa1508a", "Meta" -> 
        Association[
         "value" -> "/apps/managing-oauth-apps/deleting-an-oauth-app/"], 
        "Children" -> {"Deleting an OAuth App"}], "optgroup:d7025718" -> 
      Association[
       "Parent" -> "select:b378d16a", "Type" -> "optgroup", "Name" -> 
        "optgroup:d7025718", "Meta" -> 
        Association["label" -> "Managing OAuth Apps"], "Children" -> {
          XMLGraph`Package`Node["option:9ae4887e"], 
          XMLGraph`Package`Node["option:a78c1080"], 
          XMLGraph`Package`Node["option:f39d1536"], 
          XMLGraph`Package`Node["option:40c1ed24"], 
          XMLGraph`Package`Node["option:27a4b95c"], 
          XMLGraph`Package`Node["option:3aa1508a"]}], "select:b378d16a" -> 
      Association[
       "Parent" -> "div:7324a562", "Type" -> "select", "Name" -> 
        "select:b378d16a", "Meta" -> 
        Association[
         "class" -> "form-select mt-4", "onchange" -> 
          "if (this.value) window.location.href=this.value"], "Children" -> {
          XMLGraph`Package`Node["option:5b5d8cfa"], 
          XMLGraph`Package`Node["optgroup:22a4f9aa"], 
          XMLGraph`Package`Node["optgroup:db77e68a"], 
          XMLGraph`Package`Node["optgroup:ca682084"], 
          XMLGraph`Package`Node["optgroup:bcd31ecf"], 
          XMLGraph`Package`Node["optgroup:f4a34065"], 
          XMLGraph`Package`Node["optgroup:f81a423f"], 
          XMLGraph`Package`Node["optgroup:31dc47f7"], 
          XMLGraph`Package`Node["optgroup:20d81043"], 
          XMLGraph`Package`Node["optgroup:d7025718"]}], "div:7324a562" -> 
      Association[
       "Parent" -> "div:ac46b763", "Type" -> "div", "Name" -> "div:7324a562", 
        "Meta" -> Association[
         "class" -> "nav-select nav-select-top hide-lg hide-xl"], 
        "Children" -> {"\n      ", 
          XMLGraph`Package`Node["select:b378d16a"], "\n\n    "}], 
      "section:364f6cb1" -> 
      Association[
       "Parent" -> "div:ac46b763", "Type" -> "section", "Name" -> 
        "section:364f6cb1", "Meta" -> 
        Association["class" -> "main pt-5 clearfix gut-3", "role" -> "main"], 
        "Children" -> {}], "span:fbc3a60c" -> 
      Association[
       "Parent" -> "a:11805c0c", "Type" -> "span", "Name" -> "span:fbc3a60c", 
        "Meta" -> Association[
         "class" -> "octicon octicon-link", "aria-hidden" -> "true"], 
        "Children" -> {}], "a:11805c0c" -> 
      Association[
       "Parent" -> "h1:86f75d4a", "Type" -> "a", "Name" -> "a:11805c0c", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "anchor", "id" -> 
          "understanding-scopes-for-oauth-apps", "href" -> 
          "#understanding-scopes-for-oauth-apps", "aria-hidden" -> "true"], 
        "Children" -> {
          XMLGraph`Package`Node["span:fbc3a60c"]}], "h1:86f75d4a" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "h1", "Name" -> "h1:86f75d4a", 
        "Meta" -> Association[], "Children" -> {"\n", 
          XMLGraph`Package`Node["a:11805c0c"], 
          "Understanding scopes for OAuth Apps"}], "em:0ef79f66" -> 
      Association[
       "Parent" -> "p:7e2ec7e1", "Type" -> "em", "Name" -> "em:0ef79f66", 
        "Meta" -> Association[], "Children" -> {"limit"}], "p:7e2ec7e1" -> 
      Association[
       "Parent" -> "div:2cc95eb5", "Type" -> "p", "Name" -> "p:7e2ec7e1", 
        "Meta" -> Association[], 
        "Children" -> {
         "Scopes let you specify exactly what type of access you need. Scopes \
", 
          XMLGraph`Package`Node["em:0ef79f66"], 
          " access for OAuth tokens. They do not grant any additional \
permission beyond that which the user already has."}], "div:2cc95eb5" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "div", "Name" -> "div:2cc95eb5", 
        "Meta" -> Association["class" -> "intro"], "Children" -> {"\n\n", 
          XMLGraph`Package`Node["p:7e2ec7e1"], "\n\n"}], "a:8dd2227a" -> 
      Association[
       "Parent" -> "li:05db0129", "Type" -> "a", "Name" -> "a:8dd2227a", 
        "Meta" -> Association[
         "shape" -> "rect", "id" -> "markdown-toc-available-scopes", "href" -> 
          "#available-scopes"], "Children" -> {"Available scopes"}], 
      "li:05db0129" -> 
      Association[
       "Parent" -> "ul:e283d998", "Type" -> "li", "Name" -> "li:05db0129", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:8dd2227a"]}], "a:7e2323cc" -> 
      Association[
       "Parent" -> "li:ed9b2f29", "Type" -> "a", "Name" -> "a:7e2323cc", 
        "Meta" -> Association[
         "shape" -> "rect", "id" -> 
          "markdown-toc-requested-scopes-and-granted-scopes", "href" -> 
          "#requested-scopes-and-granted-scopes"], 
        "Children" -> {"Requested scopes and granted scopes"}], "li:ed9b2f29" -> 
      Association[
       "Parent" -> "ul:e283d998", "Type" -> "li", "Name" -> "li:ed9b2f29", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:7e2323cc"]}], "a:026526e2" -> 
      Association[
       "Parent" -> "li:dfbdc7d3", "Type" -> "a", "Name" -> "a:026526e2", 
        "Meta" -> Association[
         "shape" -> "rect", "id" -> "markdown-toc-normalized-scopes", "href" -> 
          "#normalized-scopes"], "Children" -> {"Normalized scopes"}], 
      "li:dfbdc7d3" -> 
      Association[
       "Parent" -> "ul:e283d998", "Type" -> "li", "Name" -> "li:dfbdc7d3", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:026526e2"]}], "ul:e283d998" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "ul", "Name" -> "ul:e283d998", 
        "Meta" -> Association["id" -> "markdown-toc"], "Children" -> {
          XMLGraph`Package`Node["li:05db0129"], 
          XMLGraph`Package`Node["li:ed9b2f29"], 
          XMLGraph`Package`Node["li:dfbdc7d3"]}], "p:e10302f5" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "p", "Name" -> "p:e10302f5", 
        "Meta" -> Association[], 
        "Children" -> {
         "When setting up an OAuth App on GitHub, requested scopes are \
displayed to the user on the authorization form."}], "p:e8ddfd06" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "p", "Name" -> "p:e8ddfd06", 
        "Meta" -> Association[], 
        "Children" -> {
         "Check headers to see what OAuth scopes you have, and what the API \
action accepts:"}], "span:428e63c0" -> 
      Association[
       "Parent" -> "pre:9b1c4c34", "Type" -> "span", "Name" -> 
        "span:428e63c0", "Meta" -> Association["class" -> "command"], 
        "Children" -> {
         "curl -H \"Authorization: token OAUTH-TOKEN\" \
https://api.github.com/users/technoweenie -I"}], "pre:9b1c4c34" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "pre", "Name" -> "pre:9b1c4c34", 
        "Meta" -> Association["class" -> "command-line"], "Children" -> {"\n", 
          XMLGraph`Package`Node["span:428e63c0"], 
          "\nHTTP/1.1 200 OK\nX-OAuth-Scopes: repo, user\n\
X-Accepted-OAuth-Scopes: user\n"}], "code:db725e2f" -> 
      Association[
       "Parent" -> "li:66d942eb", "Type" -> "code", "Name" -> "code:db725e2f",
         "Meta" -> Association[], "Children" -> {"X-OAuth-Scopes"}], 
      "li:66d942eb" -> 
      Association[
       "Parent" -> "ul:b9dd26b5", "Type" -> "li", "Name" -> "li:66d942eb", 
        "Meta" -> Association[], "Children" -> {"\n", 
          XMLGraph`Package`Node["code:db725e2f"], 
          " lists the scopes your token has authorized."}], "code:ea8b678b" -> 
      Association[
       "Parent" -> "li:69c90bb1", "Type" -> "code", "Name" -> "code:ea8b678b",
         "Meta" -> Association[], "Children" -> {"X-Accepted-OAuth-Scopes"}], 
      "li:69c90bb1" -> 
      Association[
       "Parent" -> "ul:b9dd26b5", "Type" -> "li", "Name" -> "li:69c90bb1", 
        "Meta" -> Association[], "Children" -> {"\n", 
          XMLGraph`Package`Node["code:ea8b678b"], 
          " lists the scopes that the action checks for."}], "ul:b9dd26b5" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "ul", "Name" -> "ul:b9dd26b5", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["li:66d942eb"], 
          XMLGraph`Package`Node["li:69c90bb1"]}], "span:6d984cbe" -> 
      Association[
       "Parent" -> "a:ef35ff8d", "Type" -> "span", "Name" -> "span:6d984cbe", 
        "Meta" -> Association[
         "class" -> "octicon octicon-link", "aria-hidden" -> "true"], 
        "Children" -> {}], "a:ef35ff8d" -> 
      Association[
       "Parent" -> "h2:4800e38a", "Type" -> "a", "Name" -> "a:ef35ff8d", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "anchor", "id" -> "available-scopes", 
          "href" -> "#available-scopes", "aria-hidden" -> "true"], "Children" -> {
          XMLGraph`Package`Node["span:6d984cbe"]}], "h2:4800e38a" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "h2", "Name" -> "h2:4800e38a", 
        "Meta" -> Association[], "Children" -> {"\n", 
          XMLGraph`Package`Node["a:ef35ff8d"], "Available scopes"}], 
      "th:0bfbb739" -> 
      Association[
       "Parent" -> "tr:0e4646b5", "Type" -> "th", "Name" -> "th:0bfbb739", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Name"}], "th:b3519447" -> 
      Association[
       "Parent" -> "tr:0e4646b5", "Type" -> "th", "Name" -> "th:b3519447", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Description"}], "tr:0e4646b5" -> 
      Association[
       "Parent" -> "thead:b615f6b3", "Type" -> "tr", "Name" -> "tr:0e4646b5", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["th:0bfbb739"], 
          XMLGraph`Package`Node["th:b3519447"]}], "thead:b615f6b3" -> 
      Association[
       "Parent" -> "table:3396a8ee", "Type" -> "thead", "Name" -> 
        "thead:b615f6b3", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["tr:0e4646b5"]}], "code:6ba68d10" -> 
      Association[
       "Parent" -> "strong:1dd69c5a", "Type" -> "code", "Name" -> 
        "code:6ba68d10", "Meta" -> Association[], 
        "Children" -> {"(no scope)"}], "strong:1dd69c5a" -> 
      Association[
       "Parent" -> "td:69b78581", "Type" -> "strong", "Name" -> 
        "strong:1dd69c5a", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:6ba68d10"]}], "td:69b78581" -> 
      Association[
       "Parent" -> "tr:095800e8", "Type" -> "td", "Name" -> "td:69b78581", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:1dd69c5a"]}], "td:285a904e" -> 
      Association[
       "Parent" -> "tr:095800e8", "Type" -> "td", "Name" -> "td:285a904e", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {
         "Grants read-only access to public information (includes public user \
profile info, public repository info, and gists)"}], "tr:095800e8" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:095800e8", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:69b78581"], 
          XMLGraph`Package`Node["td:285a904e"]}], "code:5475e1f5" -> 
      Association[
       "Parent" -> "strong:540f417f", "Type" -> "code", "Name" -> 
        "code:5475e1f5", "Meta" -> Association[], "Children" -> {"repo"}], 
      "strong:540f417f" -> 
      Association[
       "Parent" -> "td:5795f3e6", "Type" -> "strong", "Name" -> 
        "strong:540f417f", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:5475e1f5"]}], "td:5795f3e6" -> 
      Association[
       "Parent" -> "tr:974b790b", "Type" -> "td", "Name" -> "td:5795f3e6", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:540f417f"]}], "td:418208f9" -> 
      Association[
       "Parent" -> "tr:974b790b", "Type" -> "td", "Name" -> "td:418208f9", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {
         "Grants read/write access to code, commit statuses, invitations, \
collaborators, adding team memberships, and deployment statuses for public \
and private repositories and organizations."}], "tr:974b790b" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:974b790b", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:5795f3e6"], 
          XMLGraph`Package`Node["td:418208f9"]}], "code:3efe94e8" -> 
      Association[
       "Parent" -> "td:f51b942f", "Type" -> "code", "Name" -> "code:3efe94e8",
         "Meta" -> Association[], "Children" -> {"repo:status"}], 
      "td:f51b942f" -> 
      Association[
       "Parent" -> "tr:f1c637b2", "Type" -> "td", "Name" -> "td:f51b942f", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:3efe94e8"], "\n"}], "em:919d0e00" -> 
      Association[
       "Parent" -> "td:4fb99c55", "Type" -> "em", "Name" -> "em:919d0e00", 
        "Meta" -> Association[], "Children" -> {"without"}], "td:4fb99c55" -> 
      Association[
       "Parent" -> "tr:f1c637b2", "Type" -> "td", "Name" -> "td:4fb99c55", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {
         "Grants read/write access to public and private repository commit \
statuses. This scope is only necessary to grant other users or services \
access to private repository commit statuses ", 
          XMLGraph`Package`Node["em:919d0e00"], 
          " granting access to the code."}], "tr:f1c637b2" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:f1c637b2", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:f51b942f"], 
          XMLGraph`Package`Node["td:4fb99c55"]}], "code:f9b6a90d" -> 
      Association[
       "Parent" -> "td:cf2af89f", "Type" -> "code", "Name" -> "code:f9b6a90d",
         "Meta" -> Association[], "Children" -> {"repo_deployment"}], 
      "td:cf2af89f" -> 
      Association[
       "Parent" -> "tr:b0bcb265", "Type" -> "td", "Name" -> "td:cf2af89f", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:f9b6a90d"], "\n"}], "a:3fb1c5f7" -> 
      Association[
       "Parent" -> "td:90a1a989", "Type" -> "a", "Name" -> "a:3fb1c5f7", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> "/v3/repos/deployments"], 
        "Children" -> {"deployment statuses"}], "em:77591606" -> 
      Association[
       "Parent" -> "td:90a1a989", "Type" -> "em", "Name" -> "em:77591606", 
        "Meta" -> Association[], "Children" -> {"without"}], "td:90a1a989" -> 
      Association[
       "Parent" -> "tr:b0bcb265", "Type" -> "td", "Name" -> "td:90a1a989", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Grants access to ", 
          XMLGraph`Package`Node["a:3fb1c5f7"], 
          " for public and private repositories. This scope is only necessary \
to grant other users or services access to deployment statuses, ", 
          XMLGraph`Package`Node["em:77591606"], 
          " granting access to the code."}], "tr:b0bcb265" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:b0bcb265", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:cf2af89f"], 
          XMLGraph`Package`Node["td:90a1a989"]}], "code:74740881" -> 
      Association[
       "Parent" -> "td:fc994044", "Type" -> "code", "Name" -> "code:74740881",
         "Meta" -> Association[], "Children" -> {"public_repo"}], 
      "td:fc994044" -> 
      Association[
       "Parent" -> "tr:7363fc5a", "Type" -> "td", "Name" -> "td:fc994044", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:74740881"], "\n"}], "td:7d9deb13" -> 
      Association[
       "Parent" -> "tr:7363fc5a", "Type" -> "td", "Name" -> "td:7d9deb13", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {
         "Grants read/write access to code, commit statuses, collaborators, \
and deployment statuses for public repositories and organizations. Also \
required for starring public repositories."}], "tr:7363fc5a" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:7363fc5a", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:fc994044"], 
          XMLGraph`Package`Node["td:7d9deb13"]}], "code:e166e8d3" -> 
      Association[
       "Parent" -> "td:1b48ca75", "Type" -> "code", "Name" -> "code:e166e8d3",
         "Meta" -> Association[], "Children" -> {"repo:invite"}], 
      "td:1b48ca75" -> 
      Association[
       "Parent" -> "tr:a9b083bb", "Type" -> "td", "Name" -> "td:1b48ca75", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:e166e8d3"], "\n"}], "em:546807e9" -> 
      Association[
       "Parent" -> "td:471d9d6f", "Type" -> "em", "Name" -> "em:546807e9", 
        "Meta" -> Association[], "Children" -> {"without"}], "td:471d9d6f" -> 
      Association[
       "Parent" -> "tr:a9b083bb", "Type" -> "td", "Name" -> "td:471d9d6f", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {
         "Grants accept/decline abilities for invitations to collaborate on a \
repository. This scope is only necessary to grant other users or services \
access to invites ", 
          XMLGraph`Package`Node["em:546807e9"], 
          " granting access to the code."}], "tr:a9b083bb" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:a9b083bb", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:1b48ca75"], 
          XMLGraph`Package`Node["td:471d9d6f"]}], "code:17a4a57d" -> 
      Association[
       "Parent" -> "strong:ec0c4b58", "Type" -> "code", "Name" -> 
        "code:17a4a57d", "Meta" -> Association[], 
        "Children" -> {"admin:org"}], "strong:ec0c4b58" -> 
      Association[
       "Parent" -> "td:408a12e4", "Type" -> "strong", "Name" -> 
        "strong:ec0c4b58", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:17a4a57d"]}], "td:408a12e4" -> 
      Association[
       "Parent" -> "tr:5083bcdf", "Type" -> "td", "Name" -> "td:408a12e4", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:ec0c4b58"]}], "td:a5d092ac" -> 
      Association[
       "Parent" -> "tr:5083bcdf", "Type" -> "td", "Name" -> "td:a5d092ac", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Fully manage organization, teams, and memberships."}],
       "tr:5083bcdf" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:5083bcdf", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:408a12e4"], 
          XMLGraph`Package`Node["td:a5d092ac"]}], "code:0ef85607" -> 
      Association[
       "Parent" -> "td:4ad02bef", "Type" -> "code", "Name" -> "code:0ef85607",
         "Meta" -> Association[], "Children" -> {"write:org"}], "td:4ad02bef" -> 
      Association[
       "Parent" -> "tr:7f21041b", "Type" -> "td", "Name" -> "td:4ad02bef", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:0ef85607"], "\n"}], "td:8717f60b" -> 
      Association[
       "Parent" -> "tr:7f21041b", "Type" -> "td", "Name" -> "td:8717f60b", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Publicize and unpublicize organization membership."}],
       "tr:7f21041b" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:7f21041b", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:4ad02bef"], 
          XMLGraph`Package`Node["td:8717f60b"]}], "code:4557a219" -> 
      Association[
       "Parent" -> "td:f74ce8de", "Type" -> "code", "Name" -> "code:4557a219",
         "Meta" -> Association[], "Children" -> {"read:org"}], "td:f74ce8de" -> 
      Association[
       "Parent" -> "tr:bcef20e1", "Type" -> "td", "Name" -> "td:f74ce8de", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:4557a219"], "\n"}], "td:9ec9a2eb" -> 
      Association[
       "Parent" -> "tr:bcef20e1", "Type" -> "td", "Name" -> "td:9ec9a2eb", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {
         "Read-only access to organization, teams, and membership."}], 
      "tr:bcef20e1" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:bcef20e1", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:f74ce8de"], 
          XMLGraph`Package`Node["td:9ec9a2eb"]}], "code:c6e58a5a" -> 
      Association[
       "Parent" -> "strong:11a5ed26", "Type" -> "code", "Name" -> 
        "code:c6e58a5a", "Meta" -> Association[], 
        "Children" -> {"admin:public_key"}], "strong:11a5ed26" -> 
      Association[
       "Parent" -> "td:7ffe6690", "Type" -> "strong", "Name" -> 
        "strong:11a5ed26", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:c6e58a5a"]}], "td:7ffe6690" -> 
      Association[
       "Parent" -> "tr:5c7e3f9c", "Type" -> "td", "Name" -> "td:7ffe6690", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:11a5ed26"]}], "td:5c223c9c" -> 
      Association[
       "Parent" -> "tr:5c7e3f9c", "Type" -> "td", "Name" -> "td:5c223c9c", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Fully manage public keys."}], "tr:5c7e3f9c" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:5c7e3f9c", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:7ffe6690"], 
          XMLGraph`Package`Node["td:5c223c9c"]}], "code:46320a1e" -> 
      Association[
       "Parent" -> "td:17f38bb1", "Type" -> "code", "Name" -> "code:46320a1e",
         "Meta" -> Association[], "Children" -> {"write:public_key"}], 
      "td:17f38bb1" -> 
      Association[
       "Parent" -> "tr:4f12e2da", "Type" -> "td", "Name" -> "td:17f38bb1", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:46320a1e"], "\n"}], "td:f233d87f" -> 
      Association[
       "Parent" -> "tr:4f12e2da", "Type" -> "td", "Name" -> "td:f233d87f", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Create, list, and view details for public keys."}], 
      "tr:4f12e2da" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:4f12e2da", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:17f38bb1"], 
          XMLGraph`Package`Node["td:f233d87f"]}], "code:35328166" -> 
      Association[
       "Parent" -> "td:779d8f72", "Type" -> "code", "Name" -> "code:35328166",
         "Meta" -> Association[], "Children" -> {"read:public_key"}], 
      "td:779d8f72" -> 
      Association[
       "Parent" -> "tr:63a07cd2", "Type" -> "td", "Name" -> "td:779d8f72", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:35328166"], "\n"}], "td:92e26210" -> 
      Association[
       "Parent" -> "tr:63a07cd2", "Type" -> "td", "Name" -> "td:92e26210", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"List and view details for public keys."}], 
      "tr:63a07cd2" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:63a07cd2", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:779d8f72"], 
          XMLGraph`Package`Node["td:92e26210"]}], "code:8f73d280" -> 
      Association[
       "Parent" -> "strong:e40f6d17", "Type" -> "code", "Name" -> 
        "code:8f73d280", "Meta" -> Association[], 
        "Children" -> {"admin:repo_hook"}], "strong:e40f6d17" -> 
      Association[
       "Parent" -> "td:df6fbe81", "Type" -> "strong", "Name" -> 
        "strong:e40f6d17", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:8f73d280"]}], "td:df6fbe81" -> 
      Association[
       "Parent" -> "tr:f41cf485", "Type" -> "td", "Name" -> "td:df6fbe81", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:e40f6d17"]}], "td:9248140e" -> 
      Association[
       "Parent" -> "tr:f41cf485", "Type" -> "td", "Name" -> "td:9248140e", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {
         "Grants read, write, ping, and delete access to hooks in public or \
private repositories."}], "tr:f41cf485" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:f41cf485", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:df6fbe81"], 
          XMLGraph`Package`Node["td:9248140e"]}], "code:872df66a" -> 
      Association[
       "Parent" -> "td:280eb0d7", "Type" -> "code", "Name" -> "code:872df66a",
         "Meta" -> Association[], "Children" -> {"write:repo_hook"}], 
      "td:280eb0d7" -> 
      Association[
       "Parent" -> "tr:a7b61ceb", "Type" -> "td", "Name" -> "td:280eb0d7", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:872df66a"], "\n"}], "td:1f764f96" -> 
      Association[
       "Parent" -> "tr:a7b61ceb", "Type" -> "td", "Name" -> "td:1f764f96", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {
         "Grants read, write, and ping access to hooks in public or private \
repositories."}], "tr:a7b61ceb" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:a7b61ceb", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:280eb0d7"], 
          XMLGraph`Package`Node["td:1f764f96"]}], "code:ccc4fbd2" -> 
      Association[
       "Parent" -> "td:c13376fc", "Type" -> "code", "Name" -> "code:ccc4fbd2",
         "Meta" -> Association[], "Children" -> {"read:repo_hook"}], 
      "td:c13376fc" -> 
      Association[
       "Parent" -> "tr:edc7d005", "Type" -> "td", "Name" -> "td:c13376fc", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:ccc4fbd2"], "\n"}], "td:cdde13b0" -> 
      Association[
       "Parent" -> "tr:edc7d005", "Type" -> "td", "Name" -> "td:cdde13b0", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {
         "Grants read and ping access to hooks in public or private \
repositories."}], "tr:edc7d005" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:edc7d005", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:c13376fc"], 
          XMLGraph`Package`Node["td:cdde13b0"]}], "code:1179de47" -> 
      Association[
       "Parent" -> "strong:69f8f87c", "Type" -> "code", "Name" -> 
        "code:1179de47", "Meta" -> Association[], 
        "Children" -> {"admin:org_hook"}], "strong:69f8f87c" -> 
      Association[
       "Parent" -> "td:a154b4c9", "Type" -> "strong", "Name" -> 
        "strong:69f8f87c", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:1179de47"]}], "td:a154b4c9" -> 
      Association[
       "Parent" -> "tr:7c97bcf2", "Type" -> "td", "Name" -> "td:a154b4c9", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:69f8f87c"]}], "strong:f16907d6" -> 
      Association[
       "Parent" -> "td:9a94f79c", "Type" -> "strong", "Name" -> 
        "strong:f16907d6", "Meta" -> Association[], "Children" -> {"Note:"}], 
      "td:9a94f79c" -> 
      Association[
       "Parent" -> "tr:7c97bcf2", "Type" -> "td", "Name" -> "td:9a94f79c", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {
         "Grants read, write, ping, and delete access to organization hooks. \
", 
          XMLGraph`Package`Node["strong:f16907d6"], 
          " OAuth tokens will only be able to perform these actions on \
organization hooks which were created by the OAuth App. Personal access \
tokens will only be able to perform these actions on organization hooks \
created by a user."}], "tr:7c97bcf2" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:7c97bcf2", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:a154b4c9"], 
          XMLGraph`Package`Node["td:9a94f79c"]}], "code:9aeaf9ed" -> 
      Association[
       "Parent" -> "strong:7acc385c", "Type" -> "code", "Name" -> 
        "code:9aeaf9ed", "Meta" -> Association[], "Children" -> {"gist"}], 
      "strong:7acc385c" -> 
      Association[
       "Parent" -> "td:fe8b9bb3", "Type" -> "strong", "Name" -> 
        "strong:7acc385c", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:9aeaf9ed"]}], "td:fe8b9bb3" -> 
      Association[
       "Parent" -> "tr:e7420477", "Type" -> "td", "Name" -> "td:fe8b9bb3", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:7acc385c"]}], "td:178e7c8d" -> 
      Association[
       "Parent" -> "tr:e7420477", "Type" -> "td", "Name" -> "td:178e7c8d", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Grants write access to gists."}], "tr:e7420477" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:e7420477", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:fe8b9bb3"], 
          XMLGraph`Package`Node["td:178e7c8d"]}], "code:c9c8fc38" -> 
      Association[
       "Parent" -> "strong:6ca0cfa8", "Type" -> "code", "Name" -> 
        "code:c9c8fc38", "Meta" -> Association[], 
        "Children" -> {"notifications"}], "strong:6ca0cfa8" -> 
      Association[
       "Parent" -> "td:869a5da2", "Type" -> "strong", "Name" -> 
        "strong:6ca0cfa8", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:c9c8fc38"]}], "td:869a5da2" -> 
      Association[
       "Parent" -> "tr:e91a853a", "Type" -> "td", "Name" -> "td:869a5da2", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:6ca0cfa8"]}], "code:412766d0" -> 
      Association[
       "Parent" -> "td:c9d7707d", "Type" -> "code", "Name" -> "code:412766d0",
         "Meta" -> Association[], "Children" -> {"repo"}], "td:c9d7707d" -> 
      Association[
       "Parent" -> "tr:e91a853a", "Type" -> "td", "Name" -> "td:c9d7707d", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Grants read access to a user's notifications. ", 
          XMLGraph`Package`Node["code:412766d0"], 
          " also provides this access."}], "tr:e91a853a" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:e91a853a", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:869a5da2"], 
          XMLGraph`Package`Node["td:c9d7707d"]}], "code:d9e56ff5" -> 
      Association[
       "Parent" -> "strong:83214a30", "Type" -> "code", "Name" -> 
        "code:d9e56ff5", "Meta" -> Association[], "Children" -> {"user"}], 
      "strong:83214a30" -> 
      Association[
       "Parent" -> "td:c0c313ac", "Type" -> "strong", "Name" -> 
        "strong:83214a30", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:d9e56ff5"]}], "td:c0c313ac" -> 
      Association[
       "Parent" -> "tr:f86eaf5c", "Type" -> "td", "Name" -> "td:c0c313ac", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:83214a30"]}], "code:902fda05" -> 
      Association[
       "Parent" -> "td:d78691fd", "Type" -> "code", "Name" -> "code:902fda05",
         "Meta" -> Association[], "Children" -> {"user:email"}], 
      "code:fa5fd6de" -> 
      Association[
       "Parent" -> "td:d78691fd", "Type" -> "code", "Name" -> "code:fa5fd6de",
         "Meta" -> Association[], "Children" -> {"user:follow"}], 
      "td:d78691fd" -> 
      Association[
       "Parent" -> "tr:f86eaf5c", "Type" -> "td", "Name" -> "td:d78691fd", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {
         "Grants read/write access to profile info only.  Note that this \
scope includes ", 
          XMLGraph`Package`Node["code:902fda05"], " and ", 
          XMLGraph`Package`Node["code:fa5fd6de"], "."}], "tr:f86eaf5c" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:f86eaf5c", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:c0c313ac"], 
          XMLGraph`Package`Node["td:d78691fd"]}], "code:0e85f7ba" -> 
      Association[
       "Parent" -> "td:95383cd6", "Type" -> "code", "Name" -> "code:0e85f7ba",
         "Meta" -> Association[], "Children" -> {"read:user"}], "td:95383cd6" -> 
      Association[
       "Parent" -> "tr:1cabb944", "Type" -> "td", "Name" -> "td:95383cd6", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:0e85f7ba"], "\n"}], "td:ee5ccf12" -> 
      Association[
       "Parent" -> "tr:1cabb944", "Type" -> "td", "Name" -> "td:ee5ccf12", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Grants access to read a user's profile data."}], 
      "tr:1cabb944" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:1cabb944", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:95383cd6"], 
          XMLGraph`Package`Node["td:ee5ccf12"]}], "code:1e257ca2" -> 
      Association[
       "Parent" -> "td:7f3f07a2", "Type" -> "code", "Name" -> "code:1e257ca2",
         "Meta" -> Association[], "Children" -> {"user:email"}], 
      "td:7f3f07a2" -> 
      Association[
       "Parent" -> "tr:f6b0adac", "Type" -> "td", "Name" -> "td:7f3f07a2", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:1e257ca2"], "\n"}], "td:42314228" -> 
      Association[
       "Parent" -> "tr:f6b0adac", "Type" -> "td", "Name" -> "td:42314228", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Grants read access to a user's email addresses."}], 
      "tr:f6b0adac" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:f6b0adac", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:7f3f07a2"], 
          XMLGraph`Package`Node["td:42314228"]}], "code:946e60dc" -> 
      Association[
       "Parent" -> "td:6940d93a", "Type" -> "code", "Name" -> "code:946e60dc",
         "Meta" -> Association[], "Children" -> {"user:follow"}], 
      "td:6940d93a" -> 
      Association[
       "Parent" -> "tr:139cd2eb", "Type" -> "td", "Name" -> "td:6940d93a", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:946e60dc"], "\n"}], "td:e72d812b" -> 
      Association[
       "Parent" -> "tr:139cd2eb", "Type" -> "td", "Name" -> "td:e72d812b", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Grants access to follow or unfollow other users."}], 
      "tr:139cd2eb" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:139cd2eb", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:6940d93a"], 
          XMLGraph`Package`Node["td:e72d812b"]}], "code:cd837d14" -> 
      Association[
       "Parent" -> "strong:b40542e5", "Type" -> "code", "Name" -> 
        "code:cd837d14", "Meta" -> Association[], 
        "Children" -> {"delete_repo"}], "strong:b40542e5" -> 
      Association[
       "Parent" -> "td:7e6c4e11", "Type" -> "strong", "Name" -> 
        "strong:b40542e5", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:cd837d14"]}], "td:7e6c4e11" -> 
      Association[
       "Parent" -> "tr:003ce769", "Type" -> "td", "Name" -> "td:7e6c4e11", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:b40542e5"]}], "td:3740aebb" -> 
      Association[
       "Parent" -> "tr:003ce769", "Type" -> "td", "Name" -> "td:3740aebb", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Grants access to delete adminable repositories."}], 
      "tr:003ce769" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:003ce769", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:7e6c4e11"], 
          XMLGraph`Package`Node["td:3740aebb"]}], "code:0b0121a3" -> 
      Association[
       "Parent" -> "strong:3d6886e7", "Type" -> "code", "Name" -> 
        "code:0b0121a3", "Meta" -> Association[], 
        "Children" -> {"write:discussion"}], "strong:3d6886e7" -> 
      Association[
       "Parent" -> "td:3b92dbb6", "Type" -> "strong", "Name" -> 
        "strong:3d6886e7", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:0b0121a3"]}], "td:3b92dbb6" -> 
      Association[
       "Parent" -> "tr:04d64fcd", "Type" -> "td", "Name" -> "td:3b92dbb6", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:3d6886e7"]}], "td:18a27413" -> 
      Association[
       "Parent" -> "tr:04d64fcd", "Type" -> "td", "Name" -> "td:18a27413", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Allows read and write access for team discussions."}],
       "tr:04d64fcd" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:04d64fcd", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:3b92dbb6"], 
          XMLGraph`Package`Node["td:18a27413"]}], "code:e789fd80" -> 
      Association[
       "Parent" -> "td:0088e241", "Type" -> "code", "Name" -> "code:e789fd80",
         "Meta" -> Association[], "Children" -> {"read:discussion"}], 
      "td:0088e241" -> 
      Association[
       "Parent" -> "tr:7d5feb3d", "Type" -> "td", "Name" -> "td:0088e241", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:e789fd80"], "\n"}], "td:9450d23f" -> 
      Association[
       "Parent" -> "tr:7d5feb3d", "Type" -> "td", "Name" -> "td:9450d23f", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Allows read access for team discussions."}], 
      "tr:7d5feb3d" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:7d5feb3d", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:0088e241"], 
          XMLGraph`Package`Node["td:9450d23f"]}], "code:d1c71e64" -> 
      Association[
       "Parent" -> "strong:bf88c620", "Type" -> "code", "Name" -> 
        "code:d1c71e64", "Meta" -> Association[], 
        "Children" -> {"admin:gpg_key"}], "strong:bf88c620" -> 
      Association[
       "Parent" -> "td:c7f3773c", "Type" -> "strong", "Name" -> 
        "strong:bf88c620", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:d1c71e64"]}], "td:c7f3773c" -> 
      Association[
       "Parent" -> "tr:03a2441d", "Type" -> "td", "Name" -> "td:c7f3773c", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], "Children" -> {
          XMLGraph`Package`Node["strong:bf88c620"]}], "td:44a48403" -> 
      Association[
       "Parent" -> "tr:03a2441d", "Type" -> "td", "Name" -> "td:44a48403", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Fully manage GPG keys."}], "tr:03a2441d" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:03a2441d", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:c7f3773c"], 
          XMLGraph`Package`Node["td:44a48403"]}], "code:0a9cf6c0" -> 
      Association[
       "Parent" -> "td:4b578331", "Type" -> "code", "Name" -> "code:0a9cf6c0",
         "Meta" -> Association[], "Children" -> {"write:gpg_key"}], 
      "td:4b578331" -> 
      Association[
       "Parent" -> "tr:beaa6117", "Type" -> "td", "Name" -> "td:4b578331", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:0a9cf6c0"], "\n"}], "td:2491851a" -> 
      Association[
       "Parent" -> "tr:beaa6117", "Type" -> "td", "Name" -> "td:2491851a", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"Create, list, and view details for GPG keys."}], 
      "tr:beaa6117" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:beaa6117", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:4b578331"], 
          XMLGraph`Package`Node["td:2491851a"]}], "code:5db9fe97" -> 
      Association[
       "Parent" -> "td:e922adf9", "Type" -> "code", "Name" -> "code:5db9fe97",
         "Meta" -> Association[], "Children" -> {"read:gpg_key"}], 
      "td:e922adf9" -> 
      Association[
       "Parent" -> "tr:d9dccb4f", "Type" -> "td", "Name" -> "td:e922adf9", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"\:2003", 
          XMLGraph`Package`Node["code:5db9fe97"], "\n"}], "td:86fc3274" -> 
      Association[
       "Parent" -> "tr:d9dccb4f", "Type" -> "td", "Name" -> "td:86fc3274", 
        "Meta" -> Association["colspan" -> "1", "rowspan" -> "1"], 
        "Children" -> {"List and view details for GPG keys."}], "tr:d9dccb4f" -> 
      Association[
       "Parent" -> "tbody:c1a4436a", "Type" -> "tr", "Name" -> "tr:d9dccb4f", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["td:e922adf9"], 
          XMLGraph`Package`Node["td:86fc3274"]}], "tbody:c1a4436a" -> 
      Association[
       "Parent" -> "table:3396a8ee", "Type" -> "tbody", "Name" -> 
        "tbody:c1a4436a", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["tr:095800e8"], 
          XMLGraph`Package`Node["tr:974b790b"], 
          XMLGraph`Package`Node["tr:f1c637b2"], 
          XMLGraph`Package`Node["tr:b0bcb265"], 
          XMLGraph`Package`Node["tr:7363fc5a"], 
          XMLGraph`Package`Node["tr:a9b083bb"], 
          XMLGraph`Package`Node["tr:5083bcdf"], 
          XMLGraph`Package`Node["tr:7f21041b"], 
          XMLGraph`Package`Node["tr:bcef20e1"], 
          XMLGraph`Package`Node["tr:5c7e3f9c"], 
          XMLGraph`Package`Node["tr:4f12e2da"], 
          XMLGraph`Package`Node["tr:63a07cd2"], 
          XMLGraph`Package`Node["tr:f41cf485"], 
          XMLGraph`Package`Node["tr:a7b61ceb"], 
          XMLGraph`Package`Node["tr:edc7d005"], 
          XMLGraph`Package`Node["tr:7c97bcf2"], 
          XMLGraph`Package`Node["tr:e7420477"], 
          XMLGraph`Package`Node["tr:e91a853a"], 
          XMLGraph`Package`Node["tr:f86eaf5c"], 
          XMLGraph`Package`Node["tr:1cabb944"], 
          XMLGraph`Package`Node["tr:f6b0adac"], 
          XMLGraph`Package`Node["tr:139cd2eb"], 
          XMLGraph`Package`Node["tr:003ce769"], 
          XMLGraph`Package`Node["tr:04d64fcd"], 
          XMLGraph`Package`Node["tr:7d5feb3d"], 
          XMLGraph`Package`Node["tr:03a2441d"], 
          XMLGraph`Package`Node["tr:beaa6117"], 
          XMLGraph`Package`Node["tr:d9dccb4f"]}], "table:3396a8ee" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "table", "Name" -> 
        "table:3396a8ee", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["thead:b615f6b3"], 
          XMLGraph`Package`Node["tbody:c1a4436a"]}], "strong:aa42a5bf" -> 
      Association[
       "Parent" -> "p:2c5bd71b", "Type" -> "strong", "Name" -> 
        "strong:aa42a5bf", "Meta" -> Association[], "Children" -> {"Note:"}], 
      "p:2c5bd71b" -> 
      Association[
       "Parent" -> "div:da3ff450", "Type" -> "p", "Name" -> "p:2c5bd71b", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["strong:aa42a5bf"], 
          " Your OAuth App can request the scopes in the initial redirection. \
You\ncan specify multiple scopes by separating them with a space:"}], 
      "code:286bc6a9" -> 
      Association[
       "Parent" -> "pre:0c28b369", "Type" -> "code", "Name" -> 
        "code:286bc6a9", "Meta" -> Association[], 
        "Children" -> {
         "https://github.com/login/oauth/authorize?\n  client_id=...&\n  \
scope=user%20public_repo\n"}], "pre:0c28b369" -> 
      Association[
       "Parent" -> "div:da3ff450", "Type" -> "pre", "Name" -> "pre:0c28b369", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["code:286bc6a9"]}], "div:da3ff450" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "div", "Name" -> "div:da3ff450", 
        "Meta" -> Association["class" -> "alert note"], "Children" -> {"\n\n", 
          XMLGraph`Package`Node["p:2c5bd71b"], "\n\n", 
          XMLGraph`Package`Node["pre:0c28b369"], "\n\n"}], "span:bb79d128" -> 
      Association[
       "Parent" -> "a:1abc6082", "Type" -> "span", "Name" -> "span:bb79d128", 
        "Meta" -> Association[
         "class" -> "octicon octicon-link", "aria-hidden" -> "true"], 
        "Children" -> {}], "a:1abc6082" -> 
      Association[
       "Parent" -> "h2:2165cfad", "Type" -> "a", "Name" -> "a:1abc6082", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "anchor", "id" -> 
          "requested-scopes-and-granted-scopes", "href" -> 
          "#requested-scopes-and-granted-scopes", "aria-hidden" -> "true"], 
        "Children" -> {
          XMLGraph`Package`Node["span:bb79d128"]}], "h2:2165cfad" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "h2", "Name" -> "h2:2165cfad", 
        "Meta" -> Association[], "Children" -> {"\n", 
          XMLGraph`Package`Node["a:1abc6082"], 
          "Requested scopes and granted scopes"}], "code:bcb8e2b8" -> 
      Association[
       "Parent" -> "p:d5a93a26", "Type" -> "code", "Name" -> "code:bcb8e2b8", 
        "Meta" -> Association[], "Children" -> {"scope"}], "p:d5a93a26" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "p", "Name" -> "p:d5a93a26", 
        "Meta" -> Association[], "Children" -> {"The ", 
          XMLGraph`Package`Node["code:bcb8e2b8"], 
          " attribute lists scopes attached to the token that were granted by\
\nthe user. Normally, these scopes will be identical to what you requested.\n\
However, users can edit their scopes, effectively\ngranting your application \
less access than you originally requested. Also, users\ncan edit token scopes \
after the OAuth flow is completed.\nYou should be aware of this possibility \
and adjust your application's behavior\naccordingly."}], "p:24928c2b" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "p", "Name" -> "p:24928c2b", 
        "Meta" -> Association[], 
        "Children" -> {
         "It's important to handle error cases where a user chooses to grant \
you\nless access than you originally requested. For example, applications can \
warn\nor otherwise communicate with their users that they will see reduced\n\
functionality or be unable to perform some actions."}], "p:a235130e" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "p", "Name" -> "p:a235130e", 
        "Meta" -> Association[], 
        "Children" -> {
         "Also, applications can always send users back through the flow \
again to get\nadditional permission, but don\[CloseCurlyQuote]t forget that \
users can always say no."}], "a:8a49d5e0" -> 
      Association[
       "Parent" -> "p:dadd9710", "Type" -> "a", "Name" -> "a:8a49d5e0", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> "/guides/basics-of-authentication/"], 
        "Children" -> {"Basics of Authentication guide"}], "p:dadd9710" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "p", "Name" -> "p:dadd9710", 
        "Meta" -> Association[], "Children" -> {"Check out the ", 
          XMLGraph`Package`Node["a:8a49d5e0"], 
          ", which\nprovides tips on handling modifiable token scopes."}], 
      "span:6e084816" -> 
      Association[
       "Parent" -> "a:1d75ead3", "Type" -> "span", "Name" -> "span:6e084816", 
        "Meta" -> Association[
         "class" -> "octicon octicon-link", "aria-hidden" -> "true"], 
        "Children" -> {}], "a:1d75ead3" -> 
      Association[
       "Parent" -> "h2:644b79d7", "Type" -> "a", "Name" -> "a:1d75ead3", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "anchor", "id" -> "normalized-scopes", 
          "href" -> "#normalized-scopes", "aria-hidden" -> "true"], 
        "Children" -> {
          XMLGraph`Package`Node["span:6e084816"]}], "h2:644b79d7" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "h2", "Name" -> "h2:644b79d7", 
        "Meta" -> Association[], "Children" -> {"\n", 
          XMLGraph`Package`Node["a:1d75ead3"], "Normalized scopes"}], 
      "code:a6822f34" -> 
      Association[
       "Parent" -> "p:6bb4ab20", "Type" -> "code", "Name" -> "code:a6822f34", 
        "Meta" -> Association[], "Children" -> {"user,gist,user:email"}], 
      "code:767e8dcb" -> 
      Association[
       "Parent" -> "p:6bb4ab20", "Type" -> "code", "Name" -> "code:767e8dcb", 
        "Meta" -> Association[], "Children" -> {"user"}], "code:20928d62" -> 
      Association[
       "Parent" -> "p:6bb4ab20", "Type" -> "code", "Name" -> "code:20928d62", 
        "Meta" -> Association[], "Children" -> {"gist"}], "code:80eb04ac" -> 
      Association[
       "Parent" -> "p:6bb4ab20", "Type" -> "code", "Name" -> "code:80eb04ac", 
        "Meta" -> Association[], "Children" -> {"user:email"}], 
      "code:32671877" -> 
      Association[
       "Parent" -> "p:6bb4ab20", "Type" -> "code", "Name" -> "code:32671877", 
        "Meta" -> Association[], "Children" -> {"user"}], "p:6bb4ab20" -> 
      Association[
       "Parent" -> "div:ceda39f3", "Type" -> "p", "Name" -> "p:6bb4ab20", 
        "Meta" -> Association[], 
        "Children" -> {
         "When requesting multiple scopes, the token is saved with a \
normalized list\nof scopes, discarding those that are implicitly included by \
another requested\nscope. For example, requesting ", 
          XMLGraph`Package`Node["code:a6822f34"], 
          " will result in a\ntoken with ", 
          XMLGraph`Package`Node["code:767e8dcb"], " and ", 
          XMLGraph`Package`Node["code:20928d62"], 
          " scopes only since the access granted with\n", 
          XMLGraph`Package`Node["code:80eb04ac"], 
          " scope is included in the ", 
          XMLGraph`Package`Node["code:32671877"], " scope."}], "div:ceda39f3" -> 
      Association[
       "Parent" -> "div:ac46b763", "Type" -> "div", "Name" -> "div:ceda39f3", 
        "Meta" -> Association["class" -> "content col-md-8"], 
        "Children" -> {"\n        ", 
          XMLGraph`Package`Node["h1:86f75d4a"], "\n\n", 
          XMLGraph`Package`Node["div:2cc95eb5"], "\n\n", 
          XMLGraph`Package`Node["ul:e283d998"], "\n\n", 
          XMLGraph`Package`Node["p:e10302f5"], "\n\n", 
          XMLGraph`Package`Node["p:e8ddfd06"], "\n\n", 
          XMLGraph`Package`Node["pre:9b1c4c34"], "\n\n", 
          XMLGraph`Package`Node["ul:b9dd26b5"], "\n\n", 
          XMLGraph`Package`Node["h2:4800e38a"], "\n\n", 
          XMLGraph`Package`Node["table:3396a8ee"], "\n\n", 
          XMLGraph`Package`Node["div:da3ff450"], "\n\n", 
          XMLGraph`Package`Node["h2:2165cfad"], "\n\n", 
          XMLGraph`Package`Node["p:d5a93a26"], "\n\n", 
          XMLGraph`Package`Node["p:24928c2b"], "\n\n", 
          XMLGraph`Package`Node["p:a235130e"], "\n\n", 
          XMLGraph`Package`Node["p:dadd9710"], "\n\n", 
          XMLGraph`Package`Node["h2:644b79d7"], "\n\n", 
          XMLGraph`Package`Node["p:6bb4ab20"], "\n      "}], 
      "option:951fdcce" -> 
      Association[
       "Parent" -> "select:5cabc8a7", "Type" -> "option", "Name" -> 
        "option:951fdcce", "Meta" -> Association["value" -> ""], 
        "Children" -> {"Navigate the docs\[Ellipsis]"}], "option:1671d31e" -> 
      Association[
       "Parent" -> "optgroup:f53b867b", "Type" -> "option", "Name" -> 
        "option:1671d31e", "Meta" -> Association["value" -> "/apps/"], 
        "Children" -> {"Apps"}], "optgroup:f53b867b" -> 
      Association[
       "Parent" -> "select:5cabc8a7", "Type" -> "optgroup", "Name" -> 
        "optgroup:f53b867b", "Meta" -> Association["label" -> "Apps"], 
        "Children" -> {
          XMLGraph`Package`Node["option:1671d31e"]}], "option:4b3fd04d" -> 
      Association[
       "Parent" -> "optgroup:190b7fbd", "Type" -> "option", "Name" -> 
        "option:4b3fd04d", "Meta" -> 
        Association["value" -> "/apps/about-apps/"], 
        "Children" -> {"About apps"}], "optgroup:190b7fbd" -> 
      Association[
       "Parent" -> "select:5cabc8a7", "Type" -> "optgroup", "Name" -> 
        "optgroup:190b7fbd", "Meta" -> Association["label" -> "About apps"], 
        "Children" -> {
          XMLGraph`Package`Node["option:4b3fd04d"]}], "option:7605da39" -> 
      Association[
       "Parent" -> "optgroup:8190037d", "Type" -> "option", "Name" -> 
        "option:7605da39", "Meta" -> 
        Association["value" -> "/apps/differences-between-apps/"], 
        "Children" -> {"Differences between GitHub Apps and OAuth Apps"}], 
      "optgroup:8190037d" -> 
      Association[
       "Parent" -> "select:5cabc8a7", "Type" -> "optgroup", "Name" -> 
        "optgroup:8190037d", "Meta" -> 
        Association[
         "label" -> "Differences between GitHub Apps and OAuth Apps"], 
        "Children" -> {
          XMLGraph`Package`Node["option:7605da39"]}], "option:e634aea9" -> 
      Association[
       "Parent" -> "optgroup:4c15e262", "Type" -> "option", "Name" -> 
        "option:e634aea9", "Meta" -> 
        Association["value" -> "/apps/migrating-oauth-apps-to-github-apps/"], 
        "Children" -> {"Migrating OAuth Apps to GitHub Apps"}], 
      "optgroup:4c15e262" -> 
      Association[
       "Parent" -> "select:5cabc8a7", "Type" -> "optgroup", "Name" -> 
        "optgroup:4c15e262", "Meta" -> 
        Association["label" -> "Migrating OAuth Apps to GitHub Apps"], 
        "Children" -> {
          XMLGraph`Package`Node["option:e634aea9"]}], "option:a8a27bf5" -> 
      Association[
       "Parent" -> "optgroup:bd8dfaf1", "Type" -> "option", "Name" -> 
        "option:a8a27bf5", "Meta" -> 
        Association["value" -> "/apps/building-your-first-github-app/"], 
        "Children" -> {"Quickstart: Building Your First GitHub App"}], 
      "optgroup:bd8dfaf1" -> 
      Association[
       "Parent" -> "select:5cabc8a7", "Type" -> "optgroup", "Name" -> 
        "optgroup:bd8dfaf1", "Meta" -> 
        Association["label" -> "Quickstart: Building Your First GitHub App"], 
        "Children" -> {
          XMLGraph`Package`Node["option:a8a27bf5"]}], "option:b9308718" -> 
      Association[
       "Parent" -> "optgroup:04347579", "Type" -> "option", "Name" -> 
        "option:b9308718", "Meta" -> 
        Association["value" -> "/apps/building-github-apps/"], 
        "Children" -> {"Overview"}], "option:ce8d73db" -> 
      Association[
       "Parent" -> "optgroup:04347579", "Type" -> "option", "Name" -> 
        "option:ce8d73db", "Meta" -> 
        Association[
         "value" -> "/apps/building-github-apps/creating-a-github-app/"], 
        "Children" -> {"Creating a GitHub App"}], "option:9f013e96" -> 
      Association[
       "Parent" -> "optgroup:04347579", "Type" -> "option", "Name" -> 
        "option:9f013e96", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/creating-github-apps-from-a-manifest/"],
         "Children" -> {"Creating GitHub Apps from a manifest"}], 
      "option:6cecb163" -> 
      Association[
       "Parent" -> "optgroup:04347579", "Type" -> "option", "Name" -> 
        "option:6cecb163", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/creating-custom-badges-for-github-apps/\
"], "Children" -> {"Creating custom badges for GitHub Apps"}], 
      "option:d190fda6" -> 
      Association[
       "Parent" -> "optgroup:04347579", "Type" -> "option", "Name" -> 
        "option:d190fda6", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/setting-permissions-for-github-apps/"], 
        "Children" -> {"Setting Permissions for GitHub Apps"}], 
      "option:e4f6b270" -> 
      Association[
       "Parent" -> "optgroup:04347579", "Type" -> "option", "Name" -> 
        "option:e4f6b270", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/authenticating-with-github-apps/"], 
        "Children" -> {"Authenticating with GitHub Apps"}], "option:51ba452f" -> 
      Association[
       "Parent" -> "optgroup:04347579", "Type" -> "option", "Name" -> 
        "option:51ba452f", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/identifying-and-authorizing-users-for-\
github-apps/"], 
        "Children" -> {"Identifying and authorizing users for GitHub Apps"}], 
      "option:3e3d50c3" -> 
      Association[
       "Parent" -> "optgroup:04347579", "Type" -> "option", "Name" -> 
        "option:3e3d50c3", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-github-apps/understanding-rate-limits-for-github-\
apps/"], "Children" -> {"Understanding rate limits for GitHub Apps"}], 
      "optgroup:04347579" -> 
      Association[
       "Parent" -> "select:5cabc8a7", "Type" -> "optgroup", "Name" -> 
        "optgroup:04347579", "Meta" -> 
        Association["label" -> "Building GitHub Apps"], "Children" -> {
          XMLGraph`Package`Node["option:b9308718"], 
          XMLGraph`Package`Node["option:ce8d73db"], 
          XMLGraph`Package`Node["option:9f013e96"], 
          XMLGraph`Package`Node["option:6cecb163"], 
          XMLGraph`Package`Node["option:d190fda6"], 
          XMLGraph`Package`Node["option:e4f6b270"], 
          XMLGraph`Package`Node["option:51ba452f"], 
          XMLGraph`Package`Node["option:3e3d50c3"]}], "option:c01ab125" -> 
      Association[
       "Parent" -> "optgroup:34860533", "Type" -> "option", "Name" -> 
        "option:c01ab125", "Meta" -> 
        Association["value" -> "/apps/managing-github-apps/"], 
        "Children" -> {"Overview"}], "option:d2c76d92" -> 
      Association[
       "Parent" -> "optgroup:34860533", "Type" -> "option", "Name" -> 
        "option:d2c76d92", "Meta" -> 
        Association[
         "value" -> "/apps/managing-github-apps/modifying-a-github-app/"], 
        "Children" -> {"Modifying a GitHub App"}], "option:afd32b03" -> 
      Association[
       "Parent" -> "optgroup:34860533", "Type" -> "option", "Name" -> 
        "option:afd32b03", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-github-apps/editing-a-github-app-s-permissions/"], 
        "Children" -> {"Editing a GitHub App's permissions"}], 
      "option:f6f0594f" -> 
      Association[
       "Parent" -> "optgroup:34860533", "Type" -> "option", "Name" -> 
        "option:f6f0594f", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-github-apps/making-a-github-app-public-or-private/"]\
, "Children" -> {"Making a GitHub App public or private"}], "option:2f91504d" -> 
      Association[
       "Parent" -> "optgroup:34860533", "Type" -> "option", "Name" -> 
        "option:2f91504d", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-github-apps/transferring-ownership-of-a-github-app/\
"], "Children" -> {"Transferring ownership of a GitHub App"}], 
      "option:fc2ba317" -> 
      Association[
       "Parent" -> "optgroup:34860533", "Type" -> "option", "Name" -> 
        "option:fc2ba317", "Meta" -> 
        Association[
         "value" -> "/apps/managing-github-apps/deleting-a-github-app/"], 
        "Children" -> {"Deleting a GitHub App"}], "optgroup:34860533" -> 
      Association[
       "Parent" -> "select:5cabc8a7", "Type" -> "optgroup", "Name" -> 
        "optgroup:34860533", "Meta" -> 
        Association["label" -> "Managing GitHub Apps"], "Children" -> {
          XMLGraph`Package`Node["option:c01ab125"], 
          XMLGraph`Package`Node["option:d2c76d92"], 
          XMLGraph`Package`Node["option:afd32b03"], 
          XMLGraph`Package`Node["option:f6f0594f"], 
          XMLGraph`Package`Node["option:2f91504d"], 
          XMLGraph`Package`Node["option:fc2ba317"]}], "option:d83e6c7e" -> 
      Association[
       "Parent" -> "optgroup:2c2ec8bc", "Type" -> "option", "Name" -> 
        "option:d83e6c7e", "Meta" -> 
        Association["value" -> "/apps/building-oauth-apps/"], 
        "Children" -> {"Overview"}], "option:af38efc1" -> 
      Association[
       "Parent" -> "optgroup:2c2ec8bc", "Type" -> "option", "Name" -> 
        "option:af38efc1", "Meta" -> 
        Association[
         "value" -> "/apps/building-oauth-apps/creating-an-oauth-app/"], 
        "Children" -> {"Creating an OAuth App"}], "option:12728e38" -> 
      Association[
       "Parent" -> "optgroup:2c2ec8bc", "Type" -> "option", "Name" -> 
        "option:12728e38", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-oauth-apps/creating-custom-badges-for-oauth-apps/"],
         "Children" -> {"Creating custom badges for OAuth Apps"}], 
      "option:a57c4638" -> 
      Association[
       "Parent" -> "optgroup:2c2ec8bc", "Type" -> "option", "Name" -> 
        "option:a57c4638", "Meta" -> 
        Association[
         "value" -> "/apps/building-oauth-apps/authorizing-oauth-apps/"], 
        "Children" -> {"Authorizing OAuth Apps"}], "option:cc0d1f81" -> 
      Association[
       "Parent" -> "optgroup:2c2ec8bc", "Type" -> "option", "Name" -> 
        "option:cc0d1f81", "Meta" -> 
        Association[
         "value" -> 
          "/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"], 
        "Children" -> {"Understanding scopes for OAuth Apps"}], 
      "optgroup:2c2ec8bc" -> 
      Association[
       "Parent" -> "select:5cabc8a7", "Type" -> "optgroup", "Name" -> 
        "optgroup:2c2ec8bc", "Meta" -> 
        Association["label" -> "Building OAuth Apps"], "Children" -> {
          XMLGraph`Package`Node["option:d83e6c7e"], 
          XMLGraph`Package`Node["option:af38efc1"], 
          XMLGraph`Package`Node["option:12728e38"], 
          XMLGraph`Package`Node["option:a57c4638"], 
          XMLGraph`Package`Node["option:cc0d1f81"]}], "option:68076915" -> 
      Association[
       "Parent" -> "optgroup:86cb7506", "Type" -> "option", "Name" -> 
        "option:68076915", "Meta" -> 
        Association["value" -> "/apps/managing-oauth-apps/"], 
        "Children" -> {"Overview"}], "option:7fc44f4b" -> 
      Association[
       "Parent" -> "optgroup:86cb7506", "Type" -> "option", "Name" -> 
        "option:7fc44f4b", "Meta" -> 
        Association[
         "value" -> "/apps/managing-oauth-apps/modifying-an-oauth-app/"], 
        "Children" -> {"Modifying an OAuth App"}], "option:f22787a2" -> 
      Association[
       "Parent" -> "optgroup:86cb7506", "Type" -> "option", "Name" -> 
        "option:f22787a2", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-oauth-apps/transferring-ownership-of-an-oauth-app/"]\
, "Children" -> {"Transferring ownership of an OAuth App"}], 
      "option:fedc1c21" -> 
      Association[
       "Parent" -> "optgroup:86cb7506", "Type" -> "option", "Name" -> 
        "option:fedc1c21", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-oauth-apps/troubleshooting-authorization-request-\
errors/"], "Children" -> {"Troubleshooting authorization request errors"}], 
      "option:5d4e64d4" -> 
      Association[
       "Parent" -> "optgroup:86cb7506", "Type" -> "option", "Name" -> 
        "option:5d4e64d4", "Meta" -> 
        Association[
         "value" -> 
          "/apps/managing-oauth-apps/troubleshooting-oauth-app-access-token-\
request-errors/"], 
        "Children" -> {
         "Troubleshooting OAuth App access token request errors"}], 
      "option:d3603f28" -> 
      Association[
       "Parent" -> "optgroup:86cb7506", "Type" -> "option", "Name" -> 
        "option:d3603f28", "Meta" -> 
        Association[
         "value" -> "/apps/managing-oauth-apps/deleting-an-oauth-app/"], 
        "Children" -> {"Deleting an OAuth App"}], "optgroup:86cb7506" -> 
      Association[
       "Parent" -> "select:5cabc8a7", "Type" -> "optgroup", "Name" -> 
        "optgroup:86cb7506", "Meta" -> 
        Association["label" -> "Managing OAuth Apps"], "Children" -> {
          XMLGraph`Package`Node["option:68076915"], 
          XMLGraph`Package`Node["option:7fc44f4b"], 
          XMLGraph`Package`Node["option:f22787a2"], 
          XMLGraph`Package`Node["option:fedc1c21"], 
          XMLGraph`Package`Node["option:5d4e64d4"], 
          XMLGraph`Package`Node["option:d3603f28"]}], "select:5cabc8a7" -> 
      Association[
       "Parent" -> "div:5382af29", "Type" -> "select", "Name" -> 
        "select:5cabc8a7", "Meta" -> 
        Association[
         "class" -> "form-select mt-4", "onchange" -> 
          "if (this.value) window.location.href=this.value"], "Children" -> {
          XMLGraph`Package`Node["option:951fdcce"], 
          XMLGraph`Package`Node["optgroup:f53b867b"], 
          XMLGraph`Package`Node["optgroup:190b7fbd"], 
          XMLGraph`Package`Node["optgroup:8190037d"], 
          XMLGraph`Package`Node["optgroup:4c15e262"], 
          XMLGraph`Package`Node["optgroup:bd8dfaf1"], 
          XMLGraph`Package`Node["optgroup:04347579"], 
          XMLGraph`Package`Node["optgroup:34860533"], 
          XMLGraph`Package`Node["optgroup:2c2ec8bc"], 
          XMLGraph`Package`Node["optgroup:86cb7506"]}], "div:5382af29" -> 
      Association[
       "Parent" -> "div:ac46b763", "Type" -> "div", "Name" -> "div:5382af29", 
        "Meta" -> Association[
         "class" -> "nav-select nav-select-bottom hide-lg hide-xl"], 
        "Children" -> {"\n        ", 
          XMLGraph`Package`Node["select:5cabc8a7"], "\n\n      "}], 
      "a:25549c8b" -> 
      Association[
       "Parent" -> "h3:dd809b9f", "Type" -> "a", "Name" -> "a:25549c8b", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> "/apps/about-apps/"], 
        "Children" -> {"About Apps"}], "h3:dd809b9f" -> 
      Association[
       "Parent" -> "li:f42eb386", "Type" -> "h3", "Name" -> "h3:dd809b9f", 
        "Meta" -> Association["class" -> "standalone"], "Children" -> {
          XMLGraph`Package`Node["a:25549c8b"]}], "li:f42eb386" -> 
      Association[
       "Parent" -> "ul:b1ccd1ec", "Type" -> "li", "Name" -> "li:f42eb386", 
        "Meta" -> Association["class" -> "js-topic"], "Children" -> {
          XMLGraph`Package`Node["h3:dd809b9f"]}], "a:94082db7" -> 
      Association[
       "Parent" -> "h3:41a67f11", "Type" -> "a", "Name" -> "a:94082db7", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> "/apps/differences-between-apps/"], 
        "Children" -> {"Differences between GitHub Apps and OAuth Apps"}], 
      "h3:41a67f11" -> 
      Association[
       "Parent" -> "li:b143e8e3", "Type" -> "h3", "Name" -> "h3:41a67f11", 
        "Meta" -> Association["class" -> "standalone"], "Children" -> {
          XMLGraph`Package`Node["a:94082db7"]}], "li:b143e8e3" -> 
      Association[
       "Parent" -> "ul:b1ccd1ec", "Type" -> "li", "Name" -> "li:b143e8e3", 
        "Meta" -> Association["class" -> "js-topic"], "Children" -> {
          XMLGraph`Package`Node["h3:41a67f11"]}], "a:852da122" -> 
      Association[
       "Parent" -> "h3:bc34909f", "Type" -> "a", "Name" -> "a:852da122", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/migrating-oauth-apps-to-github-apps/"], 
        "Children" -> {"Migrating OAuth Apps to GitHub Apps"}], "h3:bc34909f" -> 
      Association[
       "Parent" -> "li:88f92ac7", "Type" -> "h3", "Name" -> "h3:bc34909f", 
        "Meta" -> Association["class" -> "standalone"], "Children" -> {
          XMLGraph`Package`Node["a:852da122"]}], "li:88f92ac7" -> 
      Association[
       "Parent" -> "ul:b1ccd1ec", "Type" -> "li", "Name" -> "li:88f92ac7", 
        "Meta" -> Association["class" -> "js-topic"], "Children" -> {
          XMLGraph`Package`Node["h3:bc34909f"]}], "a:89b9e7a2" -> 
      Association[
       "Parent" -> "h3:4797f923", "Type" -> "a", "Name" -> "a:89b9e7a2", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-your-first-github-app/"], 
        "Children" -> {"Quickstart: Building Your First GitHub App"}], 
      "h3:4797f923" -> 
      Association[
       "Parent" -> "li:4f07e409", "Type" -> "h3", "Name" -> "h3:4797f923", 
        "Meta" -> Association["class" -> "standalone"], "Children" -> {
          XMLGraph`Package`Node["a:89b9e7a2"]}], "li:4f07e409" -> 
      Association[
       "Parent" -> "ul:b1ccd1ec", "Type" -> "li", "Name" -> "li:4f07e409", 
        "Meta" -> Association["class" -> "js-topic"], "Children" -> {
          XMLGraph`Package`Node["h3:4797f923"]}], "a:2767c733" -> 
      Association[
       "Parent" -> "h3:ec86df17", "Type" -> "a", "Name" -> "a:2767c733", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "js-expand-btn collapsed arrow-btn", 
          "href" -> "#", "data-proofer-ignore" -> "data-proofer-ignore"], 
        "Children" -> {}], "a:72eb082b" -> 
      Association[
       "Parent" -> "h3:ec86df17", "Type" -> "a", "Name" -> "a:72eb082b", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> "/apps/building-github-apps/"], 
        "Children" -> {"Building GitHub Apps"}], "h3:ec86df17" -> 
      Association[
       "Parent" -> "li:32456736", "Type" -> "h3", "Name" -> "h3:ec86df17", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:2767c733"], 
          XMLGraph`Package`Node["a:72eb082b"]}], "a:64a14ad2" -> 
      Association[
       "Parent" -> "li:31c722d5", "Type" -> "a", "Name" -> "a:64a14ad2", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-github-apps/creating-a-github-app/"], 
        "Children" -> {"Creating a GitHub App"}], "li:31c722d5" -> 
      Association[
       "Parent" -> "ul:d5df8ce6", "Type" -> "li", "Name" -> "li:31c722d5", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:64a14ad2"]}], "a:0a78f767" -> 
      Association[
       "Parent" -> "li:eb081765", "Type" -> "a", "Name" -> "a:0a78f767", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-github-apps/creating-github-apps-from-a-manifest/"],
         "Children" -> {"Creating GitHub Apps from a manifest"}], 
      "li:eb081765" -> 
      Association[
       "Parent" -> "ul:d5df8ce6", "Type" -> "li", "Name" -> "li:eb081765", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:0a78f767"]}], "a:cfdac299" -> 
      Association[
       "Parent" -> "li:91f3ccdb", "Type" -> "a", "Name" -> "a:cfdac299", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-github-apps/creating-custom-badges-for-github-apps/\
"], "Children" -> {"Creating custom badges for GitHub Apps"}], "li:91f3ccdb" -> 
      Association[
       "Parent" -> "ul:d5df8ce6", "Type" -> "li", "Name" -> "li:91f3ccdb", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:cfdac299"]}], "a:12dab58c" -> 
      Association[
       "Parent" -> "li:96089853", "Type" -> "a", "Name" -> "a:12dab58c", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-github-apps/setting-permissions-for-github-apps/"], 
        "Children" -> {"Setting permissions for GitHub Apps"}], "li:96089853" -> 
      Association[
       "Parent" -> "ul:d5df8ce6", "Type" -> "li", "Name" -> "li:96089853", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:12dab58c"]}], "a:c7435288" -> 
      Association[
       "Parent" -> "li:a17a0b6d", "Type" -> "a", "Name" -> "a:c7435288", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-github-apps/authenticating-with-github-apps/"], 
        "Children" -> {"Authenticating with GitHub Apps"}], "li:a17a0b6d" -> 
      Association[
       "Parent" -> "ul:d5df8ce6", "Type" -> "li", "Name" -> "li:a17a0b6d", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:c7435288"]}], "a:3e320e6e" -> 
      Association[
       "Parent" -> "li:b6db4cfa", "Type" -> "a", "Name" -> "a:3e320e6e", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-github-apps/identifying-and-authorizing-users-for-\
github-apps/"], 
        "Children" -> {"Identifying and authorizing users for GitHub Apps"}], 
      "li:b6db4cfa" -> 
      Association[
       "Parent" -> "ul:d5df8ce6", "Type" -> "li", "Name" -> "li:b6db4cfa", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:3e320e6e"]}], "a:d1f4d25c" -> 
      Association[
       "Parent" -> "li:21c02478", "Type" -> "a", "Name" -> "a:d1f4d25c", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-github-apps/understanding-rate-limits-for-github-\
apps/"], "Children" -> {"Understanding rate limits for GitHub Apps"}], 
      "li:21c02478" -> 
      Association[
       "Parent" -> "ul:d5df8ce6", "Type" -> "li", "Name" -> "li:21c02478", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:d1f4d25c"]}], "li:2a34f94a" -> 
      Association[
       "Parent" -> "ul:d5df8ce6", "Type" -> "li", "Name" -> "li:2a34f94a", 
        "Meta" -> Association["class" -> "js-topic"], 
        "Children" -> {"\n              "}], "ul:d5df8ce6" -> 
      Association[
       "Parent" -> "li:32456736", "Type" -> "ul", "Name" -> "ul:d5df8ce6", 
        "Meta" -> Association["class" -> "js-guides"], "Children" -> {
          XMLGraph`Package`Node["li:31c722d5"], 
          XMLGraph`Package`Node["li:eb081765"], 
          XMLGraph`Package`Node["li:91f3ccdb"], 
          XMLGraph`Package`Node["li:96089853"], 
          XMLGraph`Package`Node["li:a17a0b6d"], 
          XMLGraph`Package`Node["li:b6db4cfa"], 
          XMLGraph`Package`Node["li:21c02478"], 
          XMLGraph`Package`Node["li:2a34f94a"]}], "li:32456736" -> 
      Association[
       "Parent" -> "ul:b1ccd1ec", "Type" -> "li", "Name" -> "li:32456736", 
        "Meta" -> Association["class" -> "js-topic"], 
        "Children" -> {"\n              ", 
          XMLGraph`Package`Node["h3:ec86df17"], "\n              ", 
          XMLGraph`Package`Node["ul:d5df8ce6"], "\n            "}], 
      "a:dff06263" -> 
      Association[
       "Parent" -> "h3:37406f27", "Type" -> "a", "Name" -> "a:dff06263", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "js-expand-btn collapsed arrow-btn", 
          "href" -> "#", "data-proofer-ignore" -> "data-proofer-ignore"], 
        "Children" -> {}], "a:eb9e20ae" -> 
      Association[
       "Parent" -> "h3:37406f27", "Type" -> "a", "Name" -> "a:eb9e20ae", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> "/apps/managing-github-apps/"], 
        "Children" -> {"Managing GitHub Apps"}], "h3:37406f27" -> 
      Association[
       "Parent" -> "li:d232ccd9", "Type" -> "h3", "Name" -> "h3:37406f27", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:dff06263"], 
          XMLGraph`Package`Node["a:eb9e20ae"]}], "a:723fdb23" -> 
      Association[
       "Parent" -> "li:dd07dc22", "Type" -> "a", "Name" -> "a:723fdb23", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/managing-github-apps/modifying-a-github-app/"], 
        "Children" -> {"Modifying a GitHub App"}], "li:dd07dc22" -> 
      Association[
       "Parent" -> "ul:07a2befe", "Type" -> "li", "Name" -> "li:dd07dc22", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:723fdb23"]}], "a:9cf2dc6f" -> 
      Association[
       "Parent" -> "li:674b91fb", "Type" -> "a", "Name" -> "a:9cf2dc6f", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/managing-github-apps/editing-a-github-app-s-permissions/"], 
        "Children" -> {"Editing a GitHub App's permissions"}], "li:674b91fb" -> 
      Association[
       "Parent" -> "ul:07a2befe", "Type" -> "li", "Name" -> "li:674b91fb", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:9cf2dc6f"]}], "a:02eaa68f" -> 
      Association[
       "Parent" -> "li:a51ba028", "Type" -> "a", "Name" -> "a:02eaa68f", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/managing-github-apps/making-a-github-app-public-or-private/"]\
, "Children" -> {"Making a GitHub App public or private"}], "li:a51ba028" -> 
      Association[
       "Parent" -> "ul:07a2befe", "Type" -> "li", "Name" -> "li:a51ba028", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:02eaa68f"]}], "a:c76b63d6" -> 
      Association[
       "Parent" -> "li:514f6863", "Type" -> "a", "Name" -> "a:c76b63d6", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/managing-github-apps/transferring-ownership-of-a-github-app/\
"], "Children" -> {"Transferring ownership of a GitHub App"}], "li:514f6863" -> 
      Association[
       "Parent" -> "ul:07a2befe", "Type" -> "li", "Name" -> "li:514f6863", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:c76b63d6"]}], "a:fadff153" -> 
      Association[
       "Parent" -> "li:9949e40c", "Type" -> "a", "Name" -> "a:fadff153", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/managing-github-apps/deleting-a-github-app/"], 
        "Children" -> {"Deleting a GitHub App"}], "li:9949e40c" -> 
      Association[
       "Parent" -> "ul:07a2befe", "Type" -> "li", "Name" -> "li:9949e40c", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:fadff153"]}], "ul:07a2befe" -> 
      Association[
       "Parent" -> "li:d232ccd9", "Type" -> "ul", "Name" -> "ul:07a2befe", 
        "Meta" -> Association["class" -> "js-guides"], "Children" -> {
          XMLGraph`Package`Node["li:dd07dc22"], 
          XMLGraph`Package`Node["li:674b91fb"], 
          XMLGraph`Package`Node["li:a51ba028"], 
          XMLGraph`Package`Node["li:514f6863"], 
          XMLGraph`Package`Node["li:9949e40c"]}], "li:d232ccd9" -> 
      Association[
       "Parent" -> "ul:b1ccd1ec", "Type" -> "li", "Name" -> "li:d232ccd9", 
        "Meta" -> Association["class" -> "js-topic"], 
        "Children" -> {"\n              ", 
          XMLGraph`Package`Node["h3:37406f27"], "\n              ", 
          XMLGraph`Package`Node["ul:07a2befe"], "\n            "}], 
      "a:22d37286" -> 
      Association[
       "Parent" -> "h3:3b5b657b", "Type" -> "a", "Name" -> "a:22d37286", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "js-expand-btn collapsed arrow-btn", 
          "href" -> "#", "data-proofer-ignore" -> "data-proofer-ignore"], 
        "Children" -> {}], "a:6292e467" -> 
      Association[
       "Parent" -> "h3:3b5b657b", "Type" -> "a", "Name" -> "a:6292e467", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> "/apps/building-oauth-apps/"], 
        "Children" -> {"Building OAuth Apps"}], "h3:3b5b657b" -> 
      Association[
       "Parent" -> "li:822a71af", "Type" -> "h3", "Name" -> "h3:3b5b657b", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:22d37286"], 
          XMLGraph`Package`Node["a:6292e467"]}], "a:53268970" -> 
      Association[
       "Parent" -> "li:51bb8aeb", "Type" -> "a", "Name" -> "a:53268970", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-oauth-apps/creating-an-oauth-app/"], 
        "Children" -> {"Creating an OAuth App"}], "li:51bb8aeb" -> 
      Association[
       "Parent" -> "ul:26559516", "Type" -> "li", "Name" -> "li:51bb8aeb", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:53268970"]}], "a:e67d7de4" -> 
      Association[
       "Parent" -> "li:4f46d44f", "Type" -> "a", "Name" -> "a:e67d7de4", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-oauth-apps/creating-custom-badges-for-oauth-apps/"],
         "Children" -> {"Creating custom badges for OAuth Apps"}], 
      "li:4f46d44f" -> 
      Association[
       "Parent" -> "ul:26559516", "Type" -> "li", "Name" -> "li:4f46d44f", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:e67d7de4"]}], "a:3ddc7efc" -> 
      Association[
       "Parent" -> "li:a33f2764", "Type" -> "a", "Name" -> "a:3ddc7efc", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-oauth-apps/authorizing-oauth-apps/"], 
        "Children" -> {"Authorizing OAuth Apps"}], "li:a33f2764" -> 
      Association[
       "Parent" -> "ul:26559516", "Type" -> "li", "Name" -> "li:a33f2764", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:3ddc7efc"]}], "a:97452980" -> 
      Association[
       "Parent" -> "li:228f944a", "Type" -> "a", "Name" -> "a:97452980", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"], 
        "Children" -> {"Understanding scopes for OAuth Apps"}], "li:228f944a" -> 
      Association[
       "Parent" -> "ul:26559516", "Type" -> "li", "Name" -> "li:228f944a", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:97452980"]}], "ul:26559516" -> 
      Association[
       "Parent" -> "li:822a71af", "Type" -> "ul", "Name" -> "ul:26559516", 
        "Meta" -> Association["class" -> "js-guides"], "Children" -> {
          XMLGraph`Package`Node["li:51bb8aeb"], 
          XMLGraph`Package`Node["li:4f46d44f"], 
          XMLGraph`Package`Node["li:a33f2764"], 
          XMLGraph`Package`Node["li:228f944a"]}], "li:822a71af" -> 
      Association[
       "Parent" -> "ul:b1ccd1ec", "Type" -> "li", "Name" -> "li:822a71af", 
        "Meta" -> Association["class" -> "js-topic"], 
        "Children" -> {"\n              ", 
          XMLGraph`Package`Node["h3:3b5b657b"], "\n              ", 
          XMLGraph`Package`Node["ul:26559516"], "\n            "}], 
      "a:fdba1cad" -> 
      Association[
       "Parent" -> "h3:45cd7cc0", "Type" -> "a", "Name" -> "a:fdba1cad", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "js-expand-btn collapsed arrow-btn", 
          "href" -> "#", "data-proofer-ignore" -> "data-proofer-ignore"], 
        "Children" -> {}], "a:fba9be52" -> 
      Association[
       "Parent" -> "h3:45cd7cc0", "Type" -> "a", "Name" -> "a:fba9be52", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> "/apps/managing-oauth-apps/"], 
        "Children" -> {"Managing OAuth Apps"}], "h3:45cd7cc0" -> 
      Association[
       "Parent" -> "li:25085ec5", "Type" -> "h3", "Name" -> "h3:45cd7cc0", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:fdba1cad"], 
          XMLGraph`Package`Node["a:fba9be52"]}], "a:162aec06" -> 
      Association[
       "Parent" -> "li:d7f5c769", "Type" -> "a", "Name" -> "a:162aec06", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/managing-oauth-apps/modifying-an-oauth-app/"], 
        "Children" -> {"Modifying an OAuth App"}], "li:d7f5c769" -> 
      Association[
       "Parent" -> "ul:940dac63", "Type" -> "li", "Name" -> "li:d7f5c769", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:162aec06"]}], "a:d48a2d82" -> 
      Association[
       "Parent" -> "li:aaa46b3c", "Type" -> "a", "Name" -> "a:d48a2d82", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/managing-oauth-apps/transferring-ownership-of-an-oauth-app/"]\
, "Children" -> {"Transferring ownership of an OAuth App"}], "li:aaa46b3c" -> 
      Association[
       "Parent" -> "ul:940dac63", "Type" -> "li", "Name" -> "li:aaa46b3c", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:d48a2d82"]}], "a:b3ef8aa8" -> 
      Association[
       "Parent" -> "li:a53ab3d3", "Type" -> "a", "Name" -> "a:b3ef8aa8", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/managing-oauth-apps/troubleshooting-authorization-request-\
errors/"], "Children" -> {"Troubleshooting authorization request errors"}], 
      "li:a53ab3d3" -> 
      Association[
       "Parent" -> "ul:940dac63", "Type" -> "li", "Name" -> "li:a53ab3d3", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:b3ef8aa8"]}], "a:28e9514d" -> 
      Association[
       "Parent" -> "li:d8ff9a59", "Type" -> "a", "Name" -> "a:28e9514d", 
        "Meta" -> 
        Association[
         "shape" -> "rect", "href" -> 
          "/apps/managing-oauth-apps/troubleshooting-oauth-app-access-token-\
request-errors/"], 
        "Children" -> {
         "Troubleshooting OAuth App access token request errors"}], 
      "li:d8ff9a59" -> 
      Association[
       "Parent" -> "ul:940dac63", "Type" -> "li", "Name" -> "li:d8ff9a59", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:28e9514d"]}], "a:a2b07aa5" -> 
      Association[
       "Parent" -> "li:94538c08", "Type" -> "a", "Name" -> "a:a2b07aa5", 
        "Meta" -> Association[
         "shape" -> "rect", "href" -> 
          "/apps/managing-oauth-apps/deleting-an-oauth-app/"], 
        "Children" -> {"Deleting an OAuth App"}], "li:94538c08" -> 
      Association[
       "Parent" -> "ul:940dac63", "Type" -> "li", "Name" -> "li:94538c08", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["a:a2b07aa5"]}], "ul:940dac63" -> 
      Association[
       "Parent" -> "li:25085ec5", "Type" -> "ul", "Name" -> "ul:940dac63", 
        "Meta" -> Association["class" -> "js-guides"], "Children" -> {
          XMLGraph`Package`Node["li:d7f5c769"], 
          XMLGraph`Package`Node["li:aaa46b3c"], 
          XMLGraph`Package`Node["li:a53ab3d3"], 
          XMLGraph`Package`Node["li:d8ff9a59"], 
          XMLGraph`Package`Node["li:94538c08"]}], "li:25085ec5" -> 
      Association[
       "Parent" -> "ul:b1ccd1ec", "Type" -> "li", "Name" -> "li:25085ec5", 
        "Meta" -> Association["class" -> "js-topic"], 
        "Children" -> {"\n              ", 
          XMLGraph`Package`Node["h3:45cd7cc0"], "\n              ", 
          XMLGraph`Package`Node["ul:940dac63"], "\n            "}], 
      "ul:b1ccd1ec" -> 
      Association[
       "Parent" -> "div:7e2b8b9d", "Type" -> "ul", "Name" -> "ul:b1ccd1ec", 
        "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["li:f42eb386"], 
          XMLGraph`Package`Node["li:b143e8e3"], 
          XMLGraph`Package`Node["li:88f92ac7"], 
          XMLGraph`Package`Node["li:4f07e409"], 
          XMLGraph`Package`Node["li:32456736"], 
          XMLGraph`Package`Node["li:d232ccd9"], 
          XMLGraph`Package`Node["li:822a71af"], 
          XMLGraph`Package`Node["li:25085ec5"]}], "div:7e2b8b9d" -> 
      Association[
       "Parent" -> "div:d331a83b", "Type" -> "div", "Name" -> "div:7e2b8b9d", 
        "Meta" -> Association[
         "class" -> "js-toggle-list sidebar-module sidebar-menu expandable"], 
        "Children" -> {"\n          ", 
          XMLGraph`Package`Node["ul:b1ccd1ec"], "\n        "}], "a:6eb469a6" -> 
      Association[
       "Parent" -> "div:750c63c9", "Type" -> "a", "Name" -> "a:6eb469a6", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "unknown", "href" -> 
          "https://status.github.com"], "Children" -> {"API Status"}], 
      "div:750c63c9" -> 
      Association[
       "Parent" -> "div:d331a83b", "Type" -> "div", "Name" -> "div:750c63c9", 
        "Meta" -> Association[
         "class" -> "sidebar-module api-status py-4 text-center"], "Children" -> {
          XMLGraph`Package`Node["a:6eb469a6"]}], "div:d331a83b" -> 
      Association[
       "Parent" -> "div:ac46b763", "Type" -> "div", "Name" -> "div:d331a83b", 
        "Meta" -> Association[
         "class" -> 
          "sidebar-shell col-md-4 hide-sm hide-md d-md-block d-lg-block \
d-xl-block", "id" -> "js-sidebar"], "Children" -> {"\n        ", 
          XMLGraph`Package`Node["div:7e2b8b9d"], "\n        ", 
          XMLGraph`Package`Node["div:750c63c9"], "\n\n      "}], 
      "div:ac46b763" -> 
      Association[
       "Parent" -> "body:f47f7457", "Type" -> "div", "Name" -> "div:ac46b763",
         "Meta" -> Association["class" -> "container app-container"], 
        "Children" -> {
         "\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    ", 
          XMLGraph`Package`Node["div:c23e7236"], "\n\n    ", 
          XMLGraph`Package`Node["div:7324a562"], "\n\n    ", 
          XMLGraph`Package`Node["section:364f6cb1"], "\n      ", 
          XMLGraph`Package`Node["div:ceda39f3"], "\n\n      ", 
          XMLGraph`Package`Node["div:5382af29"], "\n\n      ", 
          XMLGraph`Package`Node["div:d331a83b"], "\n    \n  "}], 
      "footer:c803d768" -> 
      Association[
       "Parent" -> "body:f47f7457", "Type" -> "footer", "Name" -> 
        "footer:c803d768", "Meta" -> 
        Association["class" -> "footer text-muted"], "Children" -> {}], 
      "span:d0e23327" -> 
      Association[
       "Parent" -> "div:597a5859", "Type" -> "span", "Name" -> 
        "span:d0e23327", "Meta" -> Association["class" -> "footer-legal"], 
        "Children" -> {"\[Copyright] 2018 GitHub Inc. All rights reserved."}],
       "span:49239377" -> 
      Association[
       "Parent" -> "div:597a5859", "Type" -> "span", "Name" -> 
        "span:49239377", "Meta" -> 
        Association[
         "class" -> "mega-octicon octicon-mark-github footer-mark"], 
        "Children" -> {}], "nav:d448d4ed" -> 
      Association[
       "Parent" -> "div:597a5859", "Type" -> "nav", "Name" -> "nav:d448d4ed", 
        "Meta" -> Association["class" -> "footer-nav"], "Children" -> {}], 
      "a:431a8c6a" -> 
      Association[
       "Parent" -> "div:597a5859", "Type" -> "a", "Name" -> "a:431a8c6a", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "footer-nav-item", "href" -> 
          "https://help.github.com/articles/github-terms-of-service"], 
        "Children" -> {"Terms of service"}], "a:399d6b90" -> 
      Association[
       "Parent" -> "div:597a5859", "Type" -> "a", "Name" -> "a:399d6b90", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "footer-nav-item", "href" -> 
          "https://github.com/site/privacy"], "Children" -> {"Privacy"}], 
      "a:7cd3695e" -> 
      Association[
       "Parent" -> "div:597a5859", "Type" -> "a", "Name" -> "a:7cd3695e", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "footer-nav-item", "href" -> 
          "https://github.com/security"], "Children" -> {"Security"}], 
      "a:2dc2b8b0" -> 
      Association[
       "Parent" -> "div:597a5859", "Type" -> "a", "Name" -> "a:2dc2b8b0", 
        "Meta" -> Association[
         "shape" -> "rect", "class" -> "footer-nav-item", "href" -> 
          "https://github.com/support"], "Children" -> {"Support"}], 
      "div:597a5859" -> 
      Association[
       "Parent" -> "body:f47f7457", "Type" -> "div", "Name" -> "div:597a5859",
         "Meta" -> Association["class" -> "container"], 
        "Children" -> {"\n    ", 
          XMLGraph`Package`Node["span:d0e23327"], "\n    ", 
          XMLGraph`Package`Node["span:49239377"], "\n    ", 
          XMLGraph`Package`Node["nav:d448d4ed"], "\n      ", 
          XMLGraph`Package`Node["a:431a8c6a"], "\n      ", 
          XMLGraph`Package`Node["a:399d6b90"], "\n      ", 
          XMLGraph`Package`Node["a:7cd3695e"], "\n      ", 
          XMLGraph`Package`Node["a:2dc2b8b0"], "\n    \n  "}], 
      "script:9396a2af" -> 
      Association[
       "Parent" -> "body:f47f7457", "Type" -> "script", "Name" -> 
        "script:9396a2af", "Meta" -> Association[], 
        "Children" -> {
         "\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]|\
|function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new \
Date();a=s.createElement(o),\n  \
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,\
m)\n  })(window,document,'script','//www.google-analytics.com/analytics.js','\
ga');\n\n  ga('create', 'UA-3769691-37', 'github.com');\n  ga('send', \
'pageview');\n"}], "body:f47f7457" -> 
      Association[
       "Parent" -> "html:80da223b", "Type" -> "body", "Name" -> 
        "body:f47f7457", "Meta" -> Association[], "Children" -> {
          XMLGraph`Package`Node["form:f1e1a1e7"], "\n    \n  \n\n\n\n  ", 
          XMLGraph`Package`Node["div:ac46b763"], "\n\n  ", 
          XMLGraph`Package`Node["footer:c803d768"], "\n  ", 
          XMLGraph`Package`Node["div:597a5859"], "\n\n\n", 
          XMLGraph`Package`Node["script:9396a2af"], "\n\n"}], "html:80da223b" -> 
      Association[
       "Parent" -> "Root", "Type" -> "html", "Name" -> "html:80da223b", 
        "Meta" -> Association[
         "version" -> "-//W3C//DTD HTML 4.01 Transitional//EN", "lang" -> 
          "en", "prefix" -> 
          "og: http://ogp.me/ns#", {"http://www.w3.org/2000/xmlns/", "xmlns"} -> 
          "http://www.w3.org/1999/xhtml"], "Children" -> {
          XMLGraph`Package`Node["head:ee1d9544"], 
          XMLGraph`Package`Node["body:f47f7457"]}]]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[85]=",ExpressionUUID->"62eb3ff2-a072-41ca-a17c-29fc2885985d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reap", "[", 
   RowBox[{"g", "@", 
    RowBox[{"\"\<BFS\>\"", "[", 
     RowBox[{"\"\<FrontierEdge\>\"", "\[Rule]", "Sow"}], "]"}]}], "]"}], "[", 
  
  RowBox[{"[", 
   RowBox[{"2", ",", " ", "1"}], "]"}], "]"}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"a30d1779-599b-4fb7-a180-e3837937bead"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"html:80da223b\"\>", 
    "\[UndirectedEdge]", "\<\"head:ee1d9544\"\>"}], ",", 
   RowBox[{"\<\"html:80da223b\"\>", 
    "\[UndirectedEdge]", "\<\"body:f47f7457\"\>"}], ",", 
   RowBox[{"\<\"body:f47f7457\"\>", 
    "\[UndirectedEdge]", "\<\"form:f1e1a1e7\"\>"}], ",", 
   RowBox[{"\<\"body:f47f7457\"\>", 
    "\[UndirectedEdge]", "\<\"div:ac46b763\"\>"}], ",", 
   RowBox[{"\<\"body:f47f7457\"\>", 
    "\[UndirectedEdge]", "\<\"footer:c803d768\"\>"}], ",", 
   RowBox[{"\<\"body:f47f7457\"\>", 
    "\[UndirectedEdge]", "\<\"div:597a5859\"\>"}], ",", 
   RowBox[{"\<\"body:f47f7457\"\>", 
    "\[UndirectedEdge]", "\<\"script:9396a2af\"\>"}], ",", 
   RowBox[{"\<\"form:f1e1a1e7\"\>", 
    "\[UndirectedEdge]", "\<\"label:3007f935\"\>"}], ",", 
   RowBox[{"\<\"form:f1e1a1e7\"\>", 
    "\[UndirectedEdge]", "\<\"div:d56b571c\"\>"}], ",", 
   RowBox[{"\<\"form:f1e1a1e7\"\>", 
    "\[UndirectedEdge]", "\<\"ul:d591f48a\"\>"}], ",", 
   RowBox[{"\<\"div:ac46b763\"\>", 
    "\[UndirectedEdge]", "\<\"div:c23e7236\"\>"}], ",", 
   RowBox[{"\<\"div:ac46b763\"\>", 
    "\[UndirectedEdge]", "\<\"div:7324a562\"\>"}], ",", 
   RowBox[{"\<\"div:ac46b763\"\>", 
    "\[UndirectedEdge]", "\<\"section:364f6cb1\"\>"}], ",", 
   RowBox[{"\<\"div:ac46b763\"\>", 
    "\[UndirectedEdge]", "\<\"div:ceda39f3\"\>"}], ",", 
   RowBox[{"\<\"div:ac46b763\"\>", 
    "\[UndirectedEdge]", "\<\"div:5382af29\"\>"}], ",", 
   RowBox[{"\<\"div:ac46b763\"\>", 
    "\[UndirectedEdge]", "\<\"div:d331a83b\"\>"}], ",", 
   RowBox[{"\<\"div:597a5859\"\>", 
    "\[UndirectedEdge]", "\<\"span:d0e23327\"\>"}], ",", 
   RowBox[{"\<\"div:597a5859\"\>", 
    "\[UndirectedEdge]", "\<\"span:49239377\"\>"}], ",", 
   RowBox[{"\<\"div:597a5859\"\>", 
    "\[UndirectedEdge]", "\<\"nav:d448d4ed\"\>"}], ",", 
   RowBox[{"\<\"div:597a5859\"\>", 
    "\[UndirectedEdge]", "\<\"a:431a8c6a\"\>"}], ",", 
   RowBox[{"\<\"div:597a5859\"\>", 
    "\[UndirectedEdge]", "\<\"a:399d6b90\"\>"}], ",", 
   RowBox[{"\<\"div:597a5859\"\>", 
    "\[UndirectedEdge]", "\<\"a:7cd3695e\"\>"}], ",", 
   RowBox[{"\<\"div:597a5859\"\>", 
    "\[UndirectedEdge]", "\<\"a:2dc2b8b0\"\>"}], ",", 
   RowBox[{"\<\"label:3007f935\"\>", 
    "\[UndirectedEdge]", "\<\"input:30160c7d\"\>"}], ",", 
   RowBox[{"\<\"div:c23e7236\"\>", 
    "\[UndirectedEdge]", "\<\"h2:e705080f\"\>"}], ",", 
   RowBox[{"\<\"div:c23e7236\"\>", 
    "\[UndirectedEdge]", "\<\"ul:ebec5264\"\>"}], ",", 
   RowBox[{"\<\"div:7324a562\"\>", 
    "\[UndirectedEdge]", "\<\"select:b378d16a\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"h1:86f75d4a\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"div:2cc95eb5\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"ul:e283d998\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"p:e10302f5\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"p:e8ddfd06\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"pre:9b1c4c34\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"ul:b9dd26b5\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"h2:4800e38a\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"table:3396a8ee\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"div:da3ff450\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"h2:2165cfad\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"p:d5a93a26\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"p:24928c2b\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"p:a235130e\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"p:dadd9710\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"h2:644b79d7\"\>"}], ",", 
   RowBox[{"\<\"div:ceda39f3\"\>", 
    "\[UndirectedEdge]", "\<\"p:6bb4ab20\"\>"}], ",", 
   RowBox[{"\<\"div:5382af29\"\>", 
    "\[UndirectedEdge]", "\<\"select:5cabc8a7\"\>"}], ",", 
   RowBox[{"\<\"div:d331a83b\"\>", 
    "\[UndirectedEdge]", "\<\"div:7e2b8b9d\"\>"}], ",", 
   RowBox[{"\<\"div:d331a83b\"\>", 
    "\[UndirectedEdge]", "\<\"div:750c63c9\"\>"}], ",", 
   RowBox[{"\<\"h2:e705080f\"\>", "\[UndirectedEdge]", "\<\"a:f3f42e31\"\>"}],
    ",", 
   RowBox[{"\<\"ul:ebec5264\"\>", 
    "\[UndirectedEdge]", "\<\"li:b73edc35\"\>"}], ",", 
   RowBox[{"\<\"ul:ebec5264\"\>", 
    "\[UndirectedEdge]", "\<\"li:f8806e90\"\>"}], ",", 
   RowBox[{"\<\"ul:ebec5264\"\>", 
    "\[UndirectedEdge]", "\<\"li:096ae289\"\>"}], ",", 
   RowBox[{"\<\"select:b378d16a\"\>", 
    "\[UndirectedEdge]", "\<\"option:5b5d8cfa\"\>"}], ",", 
   RowBox[{"\<\"select:b378d16a\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:22a4f9aa\"\>"}], ",", 
   RowBox[{"\<\"select:b378d16a\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:db77e68a\"\>"}], ",", 
   RowBox[{"\<\"select:b378d16a\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:ca682084\"\>"}], ",", 
   RowBox[{"\<\"select:b378d16a\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:bcd31ecf\"\>"}], ",", 
   RowBox[{"\<\"select:b378d16a\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:f4a34065\"\>"}], ",", 
   RowBox[{"\<\"select:b378d16a\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:f81a423f\"\>"}], ",", 
   RowBox[{"\<\"select:b378d16a\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:31dc47f7\"\>"}], ",", 
   RowBox[{"\<\"select:b378d16a\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:20d81043\"\>"}], ",", 
   RowBox[{"\<\"select:b378d16a\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:d7025718\"\>"}], ",", 
   RowBox[{"\<\"h1:86f75d4a\"\>", "\[UndirectedEdge]", "\<\"a:11805c0c\"\>"}],
    ",", 
   RowBox[{"\<\"div:2cc95eb5\"\>", 
    "\[UndirectedEdge]", "\<\"p:7e2ec7e1\"\>"}], ",", 
   RowBox[{"\<\"ul:e283d998\"\>", 
    "\[UndirectedEdge]", "\<\"li:05db0129\"\>"}], ",", 
   RowBox[{"\<\"ul:e283d998\"\>", 
    "\[UndirectedEdge]", "\<\"li:ed9b2f29\"\>"}], ",", 
   RowBox[{"\<\"ul:e283d998\"\>", 
    "\[UndirectedEdge]", "\<\"li:dfbdc7d3\"\>"}], ",", 
   RowBox[{"\<\"pre:9b1c4c34\"\>", 
    "\[UndirectedEdge]", "\<\"span:428e63c0\"\>"}], ",", 
   RowBox[{"\<\"ul:b9dd26b5\"\>", 
    "\[UndirectedEdge]", "\<\"li:66d942eb\"\>"}], ",", 
   RowBox[{"\<\"ul:b9dd26b5\"\>", 
    "\[UndirectedEdge]", "\<\"li:69c90bb1\"\>"}], ",", 
   RowBox[{"\<\"h2:4800e38a\"\>", "\[UndirectedEdge]", "\<\"a:ef35ff8d\"\>"}],
    ",", 
   RowBox[{"\<\"table:3396a8ee\"\>", 
    "\[UndirectedEdge]", "\<\"thead:b615f6b3\"\>"}], ",", 
   RowBox[{"\<\"table:3396a8ee\"\>", 
    "\[UndirectedEdge]", "\<\"tbody:c1a4436a\"\>"}], ",", 
   RowBox[{"\<\"div:da3ff450\"\>", 
    "\[UndirectedEdge]", "\<\"p:2c5bd71b\"\>"}], ",", 
   RowBox[{"\<\"div:da3ff450\"\>", 
    "\[UndirectedEdge]", "\<\"pre:0c28b369\"\>"}], ",", 
   RowBox[{"\<\"h2:2165cfad\"\>", "\[UndirectedEdge]", "\<\"a:1abc6082\"\>"}],
    ",", 
   RowBox[{"\<\"p:d5a93a26\"\>", 
    "\[UndirectedEdge]", "\<\"code:bcb8e2b8\"\>"}], ",", 
   RowBox[{"\<\"p:dadd9710\"\>", "\[UndirectedEdge]", "\<\"a:8a49d5e0\"\>"}], 
   ",", 
   RowBox[{"\<\"h2:644b79d7\"\>", "\[UndirectedEdge]", "\<\"a:1d75ead3\"\>"}],
    ",", 
   RowBox[{"\<\"p:6bb4ab20\"\>", 
    "\[UndirectedEdge]", "\<\"code:a6822f34\"\>"}], ",", 
   RowBox[{"\<\"p:6bb4ab20\"\>", 
    "\[UndirectedEdge]", "\<\"code:767e8dcb\"\>"}], ",", 
   RowBox[{"\<\"p:6bb4ab20\"\>", 
    "\[UndirectedEdge]", "\<\"code:20928d62\"\>"}], ",", 
   RowBox[{"\<\"p:6bb4ab20\"\>", 
    "\[UndirectedEdge]", "\<\"code:80eb04ac\"\>"}], ",", 
   RowBox[{"\<\"p:6bb4ab20\"\>", 
    "\[UndirectedEdge]", "\<\"code:32671877\"\>"}], ",", 
   RowBox[{"\<\"select:5cabc8a7\"\>", 
    "\[UndirectedEdge]", "\<\"option:951fdcce\"\>"}], ",", 
   RowBox[{"\<\"select:5cabc8a7\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:f53b867b\"\>"}], ",", 
   RowBox[{"\<\"select:5cabc8a7\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:190b7fbd\"\>"}], ",", 
   RowBox[{"\<\"select:5cabc8a7\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:8190037d\"\>"}], ",", 
   RowBox[{"\<\"select:5cabc8a7\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:4c15e262\"\>"}], ",", 
   RowBox[{"\<\"select:5cabc8a7\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:bd8dfaf1\"\>"}], ",", 
   RowBox[{"\<\"select:5cabc8a7\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:04347579\"\>"}], ",", 
   RowBox[{"\<\"select:5cabc8a7\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:34860533\"\>"}], ",", 
   RowBox[{"\<\"select:5cabc8a7\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:2c2ec8bc\"\>"}], ",", 
   RowBox[{"\<\"select:5cabc8a7\"\>", 
    "\[UndirectedEdge]", "\<\"optgroup:86cb7506\"\>"}], ",", 
   RowBox[{"\<\"div:7e2b8b9d\"\>", 
    "\[UndirectedEdge]", "\<\"ul:b1ccd1ec\"\>"}], ",", 
   RowBox[{"\<\"div:750c63c9\"\>", 
    "\[UndirectedEdge]", "\<\"a:6eb469a6\"\>"}], ",", 
   RowBox[{"\<\"li:b73edc35\"\>", "\[UndirectedEdge]", "\<\"a:e4c8a715\"\>"}],
    ",", 
   RowBox[{"\<\"li:f8806e90\"\>", "\[UndirectedEdge]", "\<\"a:b5fcfcb2\"\>"}],
    ",", 
   RowBox[{"\<\"li:096ae289\"\>", "\[UndirectedEdge]", "\<\"a:6682ddff\"\>"}],
    ",", 
   RowBox[{"\<\"optgroup:22a4f9aa\"\>", 
    "\[UndirectedEdge]", "\<\"option:5d2076f8\"\>"}], ",", 
   RowBox[{"\<\"optgroup:db77e68a\"\>", 
    "\[UndirectedEdge]", "\<\"option:2f1466a3\"\>"}], ",", 
   RowBox[{"\<\"optgroup:ca682084\"\>", 
    "\[UndirectedEdge]", "\<\"option:9a26e14e\"\>"}], ",", 
   RowBox[{"\<\"optgroup:bcd31ecf\"\>", 
    "\[UndirectedEdge]", "\<\"option:49d7e34c\"\>"}], ",", 
   RowBox[{"\<\"optgroup:f4a34065\"\>", 
    "\[UndirectedEdge]", "\<\"option:4b0f9b31\"\>"}], ",", 
   RowBox[{"\<\"optgroup:f81a423f\"\>", 
    "\[UndirectedEdge]", "\<\"option:a9ea57b8\"\>"}], ",", 
   RowBox[{"\<\"optgroup:f81a423f\"\>", 
    "\[UndirectedEdge]", "\<\"option:4de29f7f\"\>"}], ",", 
   RowBox[{"\<\"optgroup:f81a423f\"\>", 
    "\[UndirectedEdge]", "\<\"option:43305945\"\>"}], ",", 
   RowBox[{"\<\"optgroup:f81a423f\"\>", 
    "\[UndirectedEdge]", "\<\"option:db6409ef\"\>"}], ",", 
   RowBox[{"\<\"optgroup:f81a423f\"\>", 
    "\[UndirectedEdge]", "\<\"option:7c096a78\"\>"}], ",", 
   RowBox[{"\<\"optgroup:f81a423f\"\>", 
    "\[UndirectedEdge]", "\<\"option:7cb81077\"\>"}], ",", 
   RowBox[{"\<\"optgroup:f81a423f\"\>", 
    "\[UndirectedEdge]", "\<\"option:4c4e678b\"\>"}], ",", 
   RowBox[{"\<\"optgroup:f81a423f\"\>", 
    "\[UndirectedEdge]", "\<\"option:5f401676\"\>"}], ",", 
   RowBox[{"\<\"optgroup:31dc47f7\"\>", 
    "\[UndirectedEdge]", "\<\"option:8c71cad6\"\>"}], ",", 
   RowBox[{"\<\"optgroup:31dc47f7\"\>", 
    "\[UndirectedEdge]", "\<\"option:5c36e7d5\"\>"}], ",", 
   RowBox[{"\<\"optgroup:31dc47f7\"\>", 
    "\[UndirectedEdge]", "\<\"option:f3d45886\"\>"}], ",", 
   RowBox[{"\<\"optgroup:31dc47f7\"\>", 
    "\[UndirectedEdge]", "\<\"option:e44ef44a\"\>"}], ",", 
   RowBox[{"\<\"optgroup:31dc47f7\"\>", 
    "\[UndirectedEdge]", "\<\"option:f2c9707b\"\>"}], ",", 
   RowBox[{"\<\"optgroup:31dc47f7\"\>", 
    "\[UndirectedEdge]", "\<\"option:5a692542\"\>"}], ",", 
   RowBox[{"\<\"optgroup:20d81043\"\>", 
    "\[UndirectedEdge]", "\<\"option:e7b5fdb7\"\>"}], ",", 
   RowBox[{"\<\"optgroup:20d81043\"\>", 
    "\[UndirectedEdge]", "\<\"option:208ff86f\"\>"}], ",", 
   RowBox[{"\<\"optgroup:20d81043\"\>", 
    "\[UndirectedEdge]", "\<\"option:f214f2b1\"\>"}], ",", 
   RowBox[{"\<\"optgroup:20d81043\"\>", 
    "\[UndirectedEdge]", "\<\"option:77d9dbbd\"\>"}], ",", 
   RowBox[{"\<\"optgroup:20d81043\"\>", 
    "\[UndirectedEdge]", "\<\"option:187f7125\"\>"}], ",", 
   RowBox[{"\<\"optgroup:d7025718\"\>", 
    "\[UndirectedEdge]", "\<\"option:9ae4887e\"\>"}], ",", 
   RowBox[{"\<\"optgroup:d7025718\"\>", 
    "\[UndirectedEdge]", "\<\"option:a78c1080\"\>"}], ",", 
   RowBox[{"\<\"optgroup:d7025718\"\>", 
    "\[UndirectedEdge]", "\<\"option:f39d1536\"\>"}], ",", 
   RowBox[{"\<\"optgroup:d7025718\"\>", 
    "\[UndirectedEdge]", "\<\"option:40c1ed24\"\>"}], ",", 
   RowBox[{"\<\"optgroup:d7025718\"\>", 
    "\[UndirectedEdge]", "\<\"option:27a4b95c\"\>"}], ",", 
   RowBox[{"\<\"optgroup:d7025718\"\>", 
    "\[UndirectedEdge]", "\<\"option:3aa1508a\"\>"}], ",", 
   RowBox[{"\<\"a:11805c0c\"\>", 
    "\[UndirectedEdge]", "\<\"span:fbc3a60c\"\>"}], ",", 
   RowBox[{"\<\"p:7e2ec7e1\"\>", "\[UndirectedEdge]", "\<\"em:0ef79f66\"\>"}],
    ",", 
   RowBox[{"\<\"li:05db0129\"\>", "\[UndirectedEdge]", "\<\"a:8dd2227a\"\>"}],
    ",", 
   RowBox[{"\<\"li:ed9b2f29\"\>", "\[UndirectedEdge]", "\<\"a:7e2323cc\"\>"}],
    ",", 
   RowBox[{"\<\"li:dfbdc7d3\"\>", "\[UndirectedEdge]", "\<\"a:026526e2\"\>"}],
    ",", 
   RowBox[{"\<\"li:66d942eb\"\>", 
    "\[UndirectedEdge]", "\<\"code:db725e2f\"\>"}], ",", 
   RowBox[{"\<\"li:69c90bb1\"\>", 
    "\[UndirectedEdge]", "\<\"code:ea8b678b\"\>"}], ",", 
   RowBox[{"\<\"a:ef35ff8d\"\>", 
    "\[UndirectedEdge]", "\<\"span:6d984cbe\"\>"}], ",", 
   RowBox[{"\<\"thead:b615f6b3\"\>", 
    "\[UndirectedEdge]", "\<\"tr:0e4646b5\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:095800e8\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:974b790b\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:f1c637b2\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:b0bcb265\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:7363fc5a\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:a9b083bb\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:5083bcdf\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:7f21041b\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:bcef20e1\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:5c7e3f9c\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:4f12e2da\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:63a07cd2\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:f41cf485\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:a7b61ceb\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:edc7d005\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:7c97bcf2\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:e7420477\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:e91a853a\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:f86eaf5c\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:1cabb944\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:f6b0adac\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:139cd2eb\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:003ce769\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:04d64fcd\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:7d5feb3d\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:03a2441d\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:beaa6117\"\>"}], ",", 
   RowBox[{"\<\"tbody:c1a4436a\"\>", 
    "\[UndirectedEdge]", "\<\"tr:d9dccb4f\"\>"}], ",", 
   RowBox[{"\<\"p:2c5bd71b\"\>", 
    "\[UndirectedEdge]", "\<\"strong:aa42a5bf\"\>"}], ",", 
   RowBox[{"\<\"pre:0c28b369\"\>", 
    "\[UndirectedEdge]", "\<\"code:286bc6a9\"\>"}], ",", 
   RowBox[{"\<\"a:1abc6082\"\>", 
    "\[UndirectedEdge]", "\<\"span:bb79d128\"\>"}], ",", 
   RowBox[{"\<\"a:1d75ead3\"\>", 
    "\[UndirectedEdge]", "\<\"span:6e084816\"\>"}], ",", 
   RowBox[{"\<\"optgroup:f53b867b\"\>", 
    "\[UndirectedEdge]", "\<\"option:1671d31e\"\>"}], ",", 
   RowBox[{"\<\"optgroup:190b7fbd\"\>", 
    "\[UndirectedEdge]", "\<\"option:4b3fd04d\"\>"}], ",", 
   RowBox[{"\<\"optgroup:8190037d\"\>", 
    "\[UndirectedEdge]", "\<\"option:7605da39\"\>"}], ",", 
   RowBox[{"\<\"optgroup:4c15e262\"\>", 
    "\[UndirectedEdge]", "\<\"option:e634aea9\"\>"}], ",", 
   RowBox[{"\<\"optgroup:bd8dfaf1\"\>", 
    "\[UndirectedEdge]", "\<\"option:a8a27bf5\"\>"}], ",", 
   RowBox[{"\<\"optgroup:04347579\"\>", 
    "\[UndirectedEdge]", "\<\"option:b9308718\"\>"}], ",", 
   RowBox[{"\<\"optgroup:04347579\"\>", 
    "\[UndirectedEdge]", "\<\"option:ce8d73db\"\>"}], ",", 
   RowBox[{"\<\"optgroup:04347579\"\>", 
    "\[UndirectedEdge]", "\<\"option:9f013e96\"\>"}], ",", 
   RowBox[{"\<\"optgroup:04347579\"\>", 
    "\[UndirectedEdge]", "\<\"option:6cecb163\"\>"}], ",", 
   RowBox[{"\<\"optgroup:04347579\"\>", 
    "\[UndirectedEdge]", "\<\"option:d190fda6\"\>"}], ",", 
   RowBox[{"\<\"optgroup:04347579\"\>", 
    "\[UndirectedEdge]", "\<\"option:e4f6b270\"\>"}], ",", 
   RowBox[{"\<\"optgroup:04347579\"\>", 
    "\[UndirectedEdge]", "\<\"option:51ba452f\"\>"}], ",", 
   RowBox[{"\<\"optgroup:04347579\"\>", 
    "\[UndirectedEdge]", "\<\"option:3e3d50c3\"\>"}], ",", 
   RowBox[{"\<\"optgroup:34860533\"\>", 
    "\[UndirectedEdge]", "\<\"option:c01ab125\"\>"}], ",", 
   RowBox[{"\<\"optgroup:34860533\"\>", 
    "\[UndirectedEdge]", "\<\"option:d2c76d92\"\>"}], ",", 
   RowBox[{"\<\"optgroup:34860533\"\>", 
    "\[UndirectedEdge]", "\<\"option:afd32b03\"\>"}], ",", 
   RowBox[{"\<\"optgroup:34860533\"\>", 
    "\[UndirectedEdge]", "\<\"option:f6f0594f\"\>"}], ",", 
   RowBox[{"\<\"optgroup:34860533\"\>", 
    "\[UndirectedEdge]", "\<\"option:2f91504d\"\>"}], ",", 
   RowBox[{"\<\"optgroup:34860533\"\>", 
    "\[UndirectedEdge]", "\<\"option:fc2ba317\"\>"}], ",", 
   RowBox[{"\<\"optgroup:2c2ec8bc\"\>", 
    "\[UndirectedEdge]", "\<\"option:d83e6c7e\"\>"}], ",", 
   RowBox[{"\<\"optgroup:2c2ec8bc\"\>", 
    "\[UndirectedEdge]", "\<\"option:af38efc1\"\>"}], ",", 
   RowBox[{"\<\"optgroup:2c2ec8bc\"\>", 
    "\[UndirectedEdge]", "\<\"option:12728e38\"\>"}], ",", 
   RowBox[{"\<\"optgroup:2c2ec8bc\"\>", 
    "\[UndirectedEdge]", "\<\"option:a57c4638\"\>"}], ",", 
   RowBox[{"\<\"optgroup:2c2ec8bc\"\>", 
    "\[UndirectedEdge]", "\<\"option:cc0d1f81\"\>"}], ",", 
   RowBox[{"\<\"optgroup:86cb7506\"\>", 
    "\[UndirectedEdge]", "\<\"option:68076915\"\>"}], ",", 
   RowBox[{"\<\"optgroup:86cb7506\"\>", 
    "\[UndirectedEdge]", "\<\"option:7fc44f4b\"\>"}], ",", 
   RowBox[{"\<\"optgroup:86cb7506\"\>", 
    "\[UndirectedEdge]", "\<\"option:f22787a2\"\>"}], ",", 
   RowBox[{"\<\"optgroup:86cb7506\"\>", 
    "\[UndirectedEdge]", "\<\"option:fedc1c21\"\>"}], ",", 
   RowBox[{"\<\"optgroup:86cb7506\"\>", 
    "\[UndirectedEdge]", "\<\"option:5d4e64d4\"\>"}], ",", 
   RowBox[{"\<\"optgroup:86cb7506\"\>", 
    "\[UndirectedEdge]", "\<\"option:d3603f28\"\>"}], ",", 
   RowBox[{"\<\"ul:b1ccd1ec\"\>", 
    "\[UndirectedEdge]", "\<\"li:f42eb386\"\>"}], ",", 
   RowBox[{"\<\"ul:b1ccd1ec\"\>", 
    "\[UndirectedEdge]", "\<\"li:b143e8e3\"\>"}], ",", 
   RowBox[{"\<\"ul:b1ccd1ec\"\>", 
    "\[UndirectedEdge]", "\<\"li:88f92ac7\"\>"}], ",", 
   RowBox[{"\<\"ul:b1ccd1ec\"\>", 
    "\[UndirectedEdge]", "\<\"li:4f07e409\"\>"}], ",", 
   RowBox[{"\<\"ul:b1ccd1ec\"\>", 
    "\[UndirectedEdge]", "\<\"li:32456736\"\>"}], ",", 
   RowBox[{"\<\"ul:b1ccd1ec\"\>", 
    "\[UndirectedEdge]", "\<\"li:d232ccd9\"\>"}], ",", 
   RowBox[{"\<\"ul:b1ccd1ec\"\>", 
    "\[UndirectedEdge]", "\<\"li:822a71af\"\>"}], ",", 
   RowBox[{"\<\"ul:b1ccd1ec\"\>", 
    "\[UndirectedEdge]", "\<\"li:25085ec5\"\>"}], ",", 
   RowBox[{"\<\"tr:0e4646b5\"\>", 
    "\[UndirectedEdge]", "\<\"th:0bfbb739\"\>"}], ",", 
   RowBox[{"\<\"tr:0e4646b5\"\>", 
    "\[UndirectedEdge]", "\<\"th:b3519447\"\>"}], ",", 
   RowBox[{"\<\"tr:095800e8\"\>", 
    "\[UndirectedEdge]", "\<\"td:69b78581\"\>"}], ",", 
   RowBox[{"\<\"tr:095800e8\"\>", 
    "\[UndirectedEdge]", "\<\"td:285a904e\"\>"}], ",", 
   RowBox[{"\<\"tr:974b790b\"\>", 
    "\[UndirectedEdge]", "\<\"td:5795f3e6\"\>"}], ",", 
   RowBox[{"\<\"tr:974b790b\"\>", 
    "\[UndirectedEdge]", "\<\"td:418208f9\"\>"}], ",", 
   RowBox[{"\<\"tr:f1c637b2\"\>", 
    "\[UndirectedEdge]", "\<\"td:f51b942f\"\>"}], ",", 
   RowBox[{"\<\"tr:f1c637b2\"\>", 
    "\[UndirectedEdge]", "\<\"td:4fb99c55\"\>"}], ",", 
   RowBox[{"\<\"tr:b0bcb265\"\>", 
    "\[UndirectedEdge]", "\<\"td:cf2af89f\"\>"}], ",", 
   RowBox[{"\<\"tr:b0bcb265\"\>", 
    "\[UndirectedEdge]", "\<\"td:90a1a989\"\>"}], ",", 
   RowBox[{"\<\"tr:7363fc5a\"\>", 
    "\[UndirectedEdge]", "\<\"td:fc994044\"\>"}], ",", 
   RowBox[{"\<\"tr:7363fc5a\"\>", 
    "\[UndirectedEdge]", "\<\"td:7d9deb13\"\>"}], ",", 
   RowBox[{"\<\"tr:a9b083bb\"\>", 
    "\[UndirectedEdge]", "\<\"td:1b48ca75\"\>"}], ",", 
   RowBox[{"\<\"tr:a9b083bb\"\>", 
    "\[UndirectedEdge]", "\<\"td:471d9d6f\"\>"}], ",", 
   RowBox[{"\<\"tr:5083bcdf\"\>", 
    "\[UndirectedEdge]", "\<\"td:408a12e4\"\>"}], ",", 
   RowBox[{"\<\"tr:5083bcdf\"\>", 
    "\[UndirectedEdge]", "\<\"td:a5d092ac\"\>"}], ",", 
   RowBox[{"\<\"tr:7f21041b\"\>", 
    "\[UndirectedEdge]", "\<\"td:4ad02bef\"\>"}], ",", 
   RowBox[{"\<\"tr:7f21041b\"\>", 
    "\[UndirectedEdge]", "\<\"td:8717f60b\"\>"}], ",", 
   RowBox[{"\<\"tr:bcef20e1\"\>", 
    "\[UndirectedEdge]", "\<\"td:f74ce8de\"\>"}], ",", 
   RowBox[{"\<\"tr:bcef20e1\"\>", 
    "\[UndirectedEdge]", "\<\"td:9ec9a2eb\"\>"}], ",", 
   RowBox[{"\<\"tr:5c7e3f9c\"\>", 
    "\[UndirectedEdge]", "\<\"td:7ffe6690\"\>"}], ",", 
   RowBox[{"\<\"tr:5c7e3f9c\"\>", 
    "\[UndirectedEdge]", "\<\"td:5c223c9c\"\>"}], ",", 
   RowBox[{"\<\"tr:4f12e2da\"\>", 
    "\[UndirectedEdge]", "\<\"td:17f38bb1\"\>"}], ",", 
   RowBox[{"\<\"tr:4f12e2da\"\>", 
    "\[UndirectedEdge]", "\<\"td:f233d87f\"\>"}], ",", 
   RowBox[{"\<\"tr:63a07cd2\"\>", 
    "\[UndirectedEdge]", "\<\"td:779d8f72\"\>"}], ",", 
   RowBox[{"\<\"tr:63a07cd2\"\>", 
    "\[UndirectedEdge]", "\<\"td:92e26210\"\>"}], ",", 
   RowBox[{"\<\"tr:f41cf485\"\>", 
    "\[UndirectedEdge]", "\<\"td:df6fbe81\"\>"}], ",", 
   RowBox[{"\<\"tr:f41cf485\"\>", 
    "\[UndirectedEdge]", "\<\"td:9248140e\"\>"}], ",", 
   RowBox[{"\<\"tr:a7b61ceb\"\>", 
    "\[UndirectedEdge]", "\<\"td:280eb0d7\"\>"}], ",", 
   RowBox[{"\<\"tr:a7b61ceb\"\>", 
    "\[UndirectedEdge]", "\<\"td:1f764f96\"\>"}], ",", 
   RowBox[{"\<\"tr:edc7d005\"\>", 
    "\[UndirectedEdge]", "\<\"td:c13376fc\"\>"}], ",", 
   RowBox[{"\<\"tr:edc7d005\"\>", 
    "\[UndirectedEdge]", "\<\"td:cdde13b0\"\>"}], ",", 
   RowBox[{"\<\"tr:7c97bcf2\"\>", 
    "\[UndirectedEdge]", "\<\"td:a154b4c9\"\>"}], ",", 
   RowBox[{"\<\"tr:7c97bcf2\"\>", 
    "\[UndirectedEdge]", "\<\"td:9a94f79c\"\>"}], ",", 
   RowBox[{"\<\"tr:e7420477\"\>", 
    "\[UndirectedEdge]", "\<\"td:fe8b9bb3\"\>"}], ",", 
   RowBox[{"\<\"tr:e7420477\"\>", 
    "\[UndirectedEdge]", "\<\"td:178e7c8d\"\>"}], ",", 
   RowBox[{"\<\"tr:e91a853a\"\>", 
    "\[UndirectedEdge]", "\<\"td:869a5da2\"\>"}], ",", 
   RowBox[{"\<\"tr:e91a853a\"\>", 
    "\[UndirectedEdge]", "\<\"td:c9d7707d\"\>"}], ",", 
   RowBox[{"\<\"tr:f86eaf5c\"\>", 
    "\[UndirectedEdge]", "\<\"td:c0c313ac\"\>"}], ",", 
   RowBox[{"\<\"tr:f86eaf5c\"\>", 
    "\[UndirectedEdge]", "\<\"td:d78691fd\"\>"}], ",", 
   RowBox[{"\<\"tr:1cabb944\"\>", 
    "\[UndirectedEdge]", "\<\"td:95383cd6\"\>"}], ",", 
   RowBox[{"\<\"tr:1cabb944\"\>", 
    "\[UndirectedEdge]", "\<\"td:ee5ccf12\"\>"}], ",", 
   RowBox[{"\<\"tr:f6b0adac\"\>", 
    "\[UndirectedEdge]", "\<\"td:7f3f07a2\"\>"}], ",", 
   RowBox[{"\<\"tr:f6b0adac\"\>", 
    "\[UndirectedEdge]", "\<\"td:42314228\"\>"}], ",", 
   RowBox[{"\<\"tr:139cd2eb\"\>", 
    "\[UndirectedEdge]", "\<\"td:6940d93a\"\>"}], ",", 
   RowBox[{"\<\"tr:139cd2eb\"\>", 
    "\[UndirectedEdge]", "\<\"td:e72d812b\"\>"}], ",", 
   RowBox[{"\<\"tr:003ce769\"\>", 
    "\[UndirectedEdge]", "\<\"td:7e6c4e11\"\>"}], ",", 
   RowBox[{"\<\"tr:003ce769\"\>", 
    "\[UndirectedEdge]", "\<\"td:3740aebb\"\>"}], ",", 
   RowBox[{"\<\"tr:04d64fcd\"\>", 
    "\[UndirectedEdge]", "\<\"td:3b92dbb6\"\>"}], ",", 
   RowBox[{"\<\"tr:04d64fcd\"\>", 
    "\[UndirectedEdge]", "\<\"td:18a27413\"\>"}], ",", 
   RowBox[{"\<\"tr:7d5feb3d\"\>", 
    "\[UndirectedEdge]", "\<\"td:0088e241\"\>"}], ",", 
   RowBox[{"\<\"tr:7d5feb3d\"\>", 
    "\[UndirectedEdge]", "\<\"td:9450d23f\"\>"}], ",", 
   RowBox[{"\<\"tr:03a2441d\"\>", 
    "\[UndirectedEdge]", "\<\"td:c7f3773c\"\>"}], ",", 
   RowBox[{"\<\"tr:03a2441d\"\>", 
    "\[UndirectedEdge]", "\<\"td:44a48403\"\>"}], ",", 
   RowBox[{"\<\"tr:beaa6117\"\>", 
    "\[UndirectedEdge]", "\<\"td:4b578331\"\>"}], ",", 
   RowBox[{"\<\"tr:beaa6117\"\>", 
    "\[UndirectedEdge]", "\<\"td:2491851a\"\>"}], ",", 
   RowBox[{"\<\"tr:d9dccb4f\"\>", 
    "\[UndirectedEdge]", "\<\"td:e922adf9\"\>"}], ",", 
   RowBox[{"\<\"tr:d9dccb4f\"\>", 
    "\[UndirectedEdge]", "\<\"td:86fc3274\"\>"}], ",", 
   RowBox[{"\<\"li:f42eb386\"\>", 
    "\[UndirectedEdge]", "\<\"h3:dd809b9f\"\>"}], ",", 
   RowBox[{"\<\"li:b143e8e3\"\>", 
    "\[UndirectedEdge]", "\<\"h3:41a67f11\"\>"}], ",", 
   RowBox[{"\<\"li:88f92ac7\"\>", 
    "\[UndirectedEdge]", "\<\"h3:bc34909f\"\>"}], ",", 
   RowBox[{"\<\"li:4f07e409\"\>", 
    "\[UndirectedEdge]", "\<\"h3:4797f923\"\>"}], ",", 
   RowBox[{"\<\"li:32456736\"\>", 
    "\[UndirectedEdge]", "\<\"h3:ec86df17\"\>"}], ",", 
   RowBox[{"\<\"li:32456736\"\>", 
    "\[UndirectedEdge]", "\<\"ul:d5df8ce6\"\>"}], ",", 
   RowBox[{"\<\"li:d232ccd9\"\>", 
    "\[UndirectedEdge]", "\<\"h3:37406f27\"\>"}], ",", 
   RowBox[{"\<\"li:d232ccd9\"\>", 
    "\[UndirectedEdge]", "\<\"ul:07a2befe\"\>"}], ",", 
   RowBox[{"\<\"li:822a71af\"\>", 
    "\[UndirectedEdge]", "\<\"h3:3b5b657b\"\>"}], ",", 
   RowBox[{"\<\"li:822a71af\"\>", 
    "\[UndirectedEdge]", "\<\"ul:26559516\"\>"}], ",", 
   RowBox[{"\<\"li:25085ec5\"\>", 
    "\[UndirectedEdge]", "\<\"h3:45cd7cc0\"\>"}], ",", 
   RowBox[{"\<\"li:25085ec5\"\>", 
    "\[UndirectedEdge]", "\<\"ul:940dac63\"\>"}], ",", 
   RowBox[{"\<\"td:69b78581\"\>", 
    "\[UndirectedEdge]", "\<\"strong:1dd69c5a\"\>"}], ",", 
   RowBox[{"\<\"td:5795f3e6\"\>", 
    "\[UndirectedEdge]", "\<\"strong:540f417f\"\>"}], ",", 
   RowBox[{"\<\"td:f51b942f\"\>", 
    "\[UndirectedEdge]", "\<\"code:3efe94e8\"\>"}], ",", 
   RowBox[{"\<\"td:4fb99c55\"\>", 
    "\[UndirectedEdge]", "\<\"em:919d0e00\"\>"}], ",", 
   RowBox[{"\<\"td:cf2af89f\"\>", 
    "\[UndirectedEdge]", "\<\"code:f9b6a90d\"\>"}], ",", 
   RowBox[{"\<\"td:90a1a989\"\>", "\[UndirectedEdge]", "\<\"a:3fb1c5f7\"\>"}],
    ",", 
   RowBox[{"\<\"td:90a1a989\"\>", 
    "\[UndirectedEdge]", "\<\"em:77591606\"\>"}], ",", 
   RowBox[{"\<\"td:fc994044\"\>", 
    "\[UndirectedEdge]", "\<\"code:74740881\"\>"}], ",", 
   RowBox[{"\<\"td:1b48ca75\"\>", 
    "\[UndirectedEdge]", "\<\"code:e166e8d3\"\>"}], ",", 
   RowBox[{"\<\"td:471d9d6f\"\>", 
    "\[UndirectedEdge]", "\<\"em:546807e9\"\>"}], ",", 
   RowBox[{"\<\"td:408a12e4\"\>", 
    "\[UndirectedEdge]", "\<\"strong:ec0c4b58\"\>"}], ",", 
   RowBox[{"\<\"td:4ad02bef\"\>", 
    "\[UndirectedEdge]", "\<\"code:0ef85607\"\>"}], ",", 
   RowBox[{"\<\"td:f74ce8de\"\>", 
    "\[UndirectedEdge]", "\<\"code:4557a219\"\>"}], ",", 
   RowBox[{"\<\"td:7ffe6690\"\>", 
    "\[UndirectedEdge]", "\<\"strong:11a5ed26\"\>"}], ",", 
   RowBox[{"\<\"td:17f38bb1\"\>", 
    "\[UndirectedEdge]", "\<\"code:46320a1e\"\>"}], ",", 
   RowBox[{"\<\"td:779d8f72\"\>", 
    "\[UndirectedEdge]", "\<\"code:35328166\"\>"}], ",", 
   RowBox[{"\<\"td:df6fbe81\"\>", 
    "\[UndirectedEdge]", "\<\"strong:e40f6d17\"\>"}], ",", 
   RowBox[{"\<\"td:280eb0d7\"\>", 
    "\[UndirectedEdge]", "\<\"code:872df66a\"\>"}], ",", 
   RowBox[{"\<\"td:c13376fc\"\>", 
    "\[UndirectedEdge]", "\<\"code:ccc4fbd2\"\>"}], ",", 
   RowBox[{"\<\"td:a154b4c9\"\>", 
    "\[UndirectedEdge]", "\<\"strong:69f8f87c\"\>"}], ",", 
   RowBox[{"\<\"td:9a94f79c\"\>", 
    "\[UndirectedEdge]", "\<\"strong:f16907d6\"\>"}], ",", 
   RowBox[{"\<\"td:fe8b9bb3\"\>", 
    "\[UndirectedEdge]", "\<\"strong:7acc385c\"\>"}], ",", 
   RowBox[{"\<\"td:869a5da2\"\>", 
    "\[UndirectedEdge]", "\<\"strong:6ca0cfa8\"\>"}], ",", 
   RowBox[{"\<\"td:c9d7707d\"\>", 
    "\[UndirectedEdge]", "\<\"code:412766d0\"\>"}], ",", 
   RowBox[{"\<\"td:c0c313ac\"\>", 
    "\[UndirectedEdge]", "\<\"strong:83214a30\"\>"}], ",", 
   RowBox[{"\<\"td:d78691fd\"\>", 
    "\[UndirectedEdge]", "\<\"code:902fda05\"\>"}], ",", 
   RowBox[{"\<\"td:d78691fd\"\>", 
    "\[UndirectedEdge]", "\<\"code:fa5fd6de\"\>"}], ",", 
   RowBox[{"\<\"td:95383cd6\"\>", 
    "\[UndirectedEdge]", "\<\"code:0e85f7ba\"\>"}], ",", 
   RowBox[{"\<\"td:7f3f07a2\"\>", 
    "\[UndirectedEdge]", "\<\"code:1e257ca2\"\>"}], ",", 
   RowBox[{"\<\"td:6940d93a\"\>", 
    "\[UndirectedEdge]", "\<\"code:946e60dc\"\>"}], ",", 
   RowBox[{"\<\"td:7e6c4e11\"\>", 
    "\[UndirectedEdge]", "\<\"strong:b40542e5\"\>"}], ",", 
   RowBox[{"\<\"td:3b92dbb6\"\>", 
    "\[UndirectedEdge]", "\<\"strong:3d6886e7\"\>"}], ",", 
   RowBox[{"\<\"td:0088e241\"\>", 
    "\[UndirectedEdge]", "\<\"code:e789fd80\"\>"}], ",", 
   RowBox[{"\<\"td:c7f3773c\"\>", 
    "\[UndirectedEdge]", "\<\"strong:bf88c620\"\>"}], ",", 
   RowBox[{"\<\"td:4b578331\"\>", 
    "\[UndirectedEdge]", "\<\"code:0a9cf6c0\"\>"}], ",", 
   RowBox[{"\<\"td:e922adf9\"\>", 
    "\[UndirectedEdge]", "\<\"code:5db9fe97\"\>"}], ",", 
   RowBox[{"\<\"h3:dd809b9f\"\>", "\[UndirectedEdge]", "\<\"a:25549c8b\"\>"}],
    ",", 
   RowBox[{"\<\"h3:41a67f11\"\>", "\[UndirectedEdge]", "\<\"a:94082db7\"\>"}],
    ",", 
   RowBox[{"\<\"h3:bc34909f\"\>", "\[UndirectedEdge]", "\<\"a:852da122\"\>"}],
    ",", 
   RowBox[{"\<\"h3:4797f923\"\>", "\[UndirectedEdge]", "\<\"a:89b9e7a2\"\>"}],
    ",", 
   RowBox[{"\<\"h3:ec86df17\"\>", "\[UndirectedEdge]", "\<\"a:2767c733\"\>"}],
    ",", 
   RowBox[{"\<\"h3:ec86df17\"\>", "\[UndirectedEdge]", "\<\"a:72eb082b\"\>"}],
    ",", 
   RowBox[{"\<\"ul:d5df8ce6\"\>", 
    "\[UndirectedEdge]", "\<\"li:31c722d5\"\>"}], ",", 
   RowBox[{"\<\"ul:d5df8ce6\"\>", 
    "\[UndirectedEdge]", "\<\"li:eb081765\"\>"}], ",", 
   RowBox[{"\<\"ul:d5df8ce6\"\>", 
    "\[UndirectedEdge]", "\<\"li:91f3ccdb\"\>"}], ",", 
   RowBox[{"\<\"ul:d5df8ce6\"\>", 
    "\[UndirectedEdge]", "\<\"li:96089853\"\>"}], ",", 
   RowBox[{"\<\"ul:d5df8ce6\"\>", 
    "\[UndirectedEdge]", "\<\"li:a17a0b6d\"\>"}], ",", 
   RowBox[{"\<\"ul:d5df8ce6\"\>", 
    "\[UndirectedEdge]", "\<\"li:b6db4cfa\"\>"}], ",", 
   RowBox[{"\<\"ul:d5df8ce6\"\>", 
    "\[UndirectedEdge]", "\<\"li:21c02478\"\>"}], ",", 
   RowBox[{"\<\"ul:d5df8ce6\"\>", 
    "\[UndirectedEdge]", "\<\"li:2a34f94a\"\>"}], ",", 
   RowBox[{"\<\"h3:37406f27\"\>", "\[UndirectedEdge]", "\<\"a:dff06263\"\>"}],
    ",", 
   RowBox[{"\<\"h3:37406f27\"\>", "\[UndirectedEdge]", "\<\"a:eb9e20ae\"\>"}],
    ",", 
   RowBox[{"\<\"ul:07a2befe\"\>", 
    "\[UndirectedEdge]", "\<\"li:dd07dc22\"\>"}], ",", 
   RowBox[{"\<\"ul:07a2befe\"\>", 
    "\[UndirectedEdge]", "\<\"li:674b91fb\"\>"}], ",", 
   RowBox[{"\<\"ul:07a2befe\"\>", 
    "\[UndirectedEdge]", "\<\"li:a51ba028\"\>"}], ",", 
   RowBox[{"\<\"ul:07a2befe\"\>", 
    "\[UndirectedEdge]", "\<\"li:514f6863\"\>"}], ",", 
   RowBox[{"\<\"ul:07a2befe\"\>", 
    "\[UndirectedEdge]", "\<\"li:9949e40c\"\>"}], ",", 
   RowBox[{"\<\"h3:3b5b657b\"\>", "\[UndirectedEdge]", "\<\"a:22d37286\"\>"}],
    ",", 
   RowBox[{"\<\"h3:3b5b657b\"\>", "\[UndirectedEdge]", "\<\"a:6292e467\"\>"}],
    ",", 
   RowBox[{"\<\"ul:26559516\"\>", 
    "\[UndirectedEdge]", "\<\"li:51bb8aeb\"\>"}], ",", 
   RowBox[{"\<\"ul:26559516\"\>", 
    "\[UndirectedEdge]", "\<\"li:4f46d44f\"\>"}], ",", 
   RowBox[{"\<\"ul:26559516\"\>", 
    "\[UndirectedEdge]", "\<\"li:a33f2764\"\>"}], ",", 
   RowBox[{"\<\"ul:26559516\"\>", 
    "\[UndirectedEdge]", "\<\"li:228f944a\"\>"}], ",", 
   RowBox[{"\<\"h3:45cd7cc0\"\>", "\[UndirectedEdge]", "\<\"a:fdba1cad\"\>"}],
    ",", 
   RowBox[{"\<\"h3:45cd7cc0\"\>", "\[UndirectedEdge]", "\<\"a:fba9be52\"\>"}],
    ",", 
   RowBox[{"\<\"ul:940dac63\"\>", 
    "\[UndirectedEdge]", "\<\"li:d7f5c769\"\>"}], ",", 
   RowBox[{"\<\"ul:940dac63\"\>", 
    "\[UndirectedEdge]", "\<\"li:aaa46b3c\"\>"}], ",", 
   RowBox[{"\<\"ul:940dac63\"\>", 
    "\[UndirectedEdge]", "\<\"li:a53ab3d3\"\>"}], ",", 
   RowBox[{"\<\"ul:940dac63\"\>", 
    "\[UndirectedEdge]", "\<\"li:d8ff9a59\"\>"}], ",", 
   RowBox[{"\<\"ul:940dac63\"\>", 
    "\[UndirectedEdge]", "\<\"li:94538c08\"\>"}], ",", 
   RowBox[{"\<\"strong:1dd69c5a\"\>", 
    "\[UndirectedEdge]", "\<\"code:6ba68d10\"\>"}], ",", 
   RowBox[{"\<\"strong:540f417f\"\>", 
    "\[UndirectedEdge]", "\<\"code:5475e1f5\"\>"}], ",", 
   RowBox[{"\<\"strong:ec0c4b58\"\>", 
    "\[UndirectedEdge]", "\<\"code:17a4a57d\"\>"}], ",", 
   RowBox[{"\<\"strong:11a5ed26\"\>", 
    "\[UndirectedEdge]", "\<\"code:c6e58a5a\"\>"}], ",", 
   RowBox[{"\<\"strong:e40f6d17\"\>", 
    "\[UndirectedEdge]", "\<\"code:8f73d280\"\>"}], ",", 
   RowBox[{"\<\"strong:69f8f87c\"\>", 
    "\[UndirectedEdge]", "\<\"code:1179de47\"\>"}], ",", 
   RowBox[{"\<\"strong:7acc385c\"\>", 
    "\[UndirectedEdge]", "\<\"code:9aeaf9ed\"\>"}], ",", 
   RowBox[{"\<\"strong:6ca0cfa8\"\>", 
    "\[UndirectedEdge]", "\<\"code:c9c8fc38\"\>"}], ",", 
   RowBox[{"\<\"strong:83214a30\"\>", 
    "\[UndirectedEdge]", "\<\"code:d9e56ff5\"\>"}], ",", 
   RowBox[{"\<\"strong:b40542e5\"\>", 
    "\[UndirectedEdge]", "\<\"code:cd837d14\"\>"}], ",", 
   RowBox[{"\<\"strong:3d6886e7\"\>", 
    "\[UndirectedEdge]", "\<\"code:0b0121a3\"\>"}], ",", 
   RowBox[{"\<\"strong:bf88c620\"\>", 
    "\[UndirectedEdge]", "\<\"code:d1c71e64\"\>"}], ",", 
   RowBox[{"\<\"li:31c722d5\"\>", "\[UndirectedEdge]", "\<\"a:64a14ad2\"\>"}],
    ",", 
   RowBox[{"\<\"li:eb081765\"\>", "\[UndirectedEdge]", "\<\"a:0a78f767\"\>"}],
    ",", 
   RowBox[{"\<\"li:91f3ccdb\"\>", "\[UndirectedEdge]", "\<\"a:cfdac299\"\>"}],
    ",", 
   RowBox[{"\<\"li:96089853\"\>", "\[UndirectedEdge]", "\<\"a:12dab58c\"\>"}],
    ",", 
   RowBox[{"\<\"li:a17a0b6d\"\>", "\[UndirectedEdge]", "\<\"a:c7435288\"\>"}],
    ",", 
   RowBox[{"\<\"li:b6db4cfa\"\>", "\[UndirectedEdge]", "\<\"a:3e320e6e\"\>"}],
    ",", 
   RowBox[{"\<\"li:21c02478\"\>", "\[UndirectedEdge]", "\<\"a:d1f4d25c\"\>"}],
    ",", 
   RowBox[{"\<\"li:dd07dc22\"\>", "\[UndirectedEdge]", "\<\"a:723fdb23\"\>"}],
    ",", 
   RowBox[{"\<\"li:674b91fb\"\>", "\[UndirectedEdge]", "\<\"a:9cf2dc6f\"\>"}],
    ",", 
   RowBox[{"\<\"li:a51ba028\"\>", "\[UndirectedEdge]", "\<\"a:02eaa68f\"\>"}],
    ",", 
   RowBox[{"\<\"li:514f6863\"\>", "\[UndirectedEdge]", "\<\"a:c76b63d6\"\>"}],
    ",", 
   RowBox[{"\<\"li:9949e40c\"\>", "\[UndirectedEdge]", "\<\"a:fadff153\"\>"}],
    ",", 
   RowBox[{"\<\"li:51bb8aeb\"\>", "\[UndirectedEdge]", "\<\"a:53268970\"\>"}],
    ",", 
   RowBox[{"\<\"li:4f46d44f\"\>", "\[UndirectedEdge]", "\<\"a:e67d7de4\"\>"}],
    ",", 
   RowBox[{"\<\"li:a33f2764\"\>", "\[UndirectedEdge]", "\<\"a:3ddc7efc\"\>"}],
    ",", 
   RowBox[{"\<\"li:228f944a\"\>", "\[UndirectedEdge]", "\<\"a:97452980\"\>"}],
    ",", 
   RowBox[{"\<\"li:d7f5c769\"\>", "\[UndirectedEdge]", "\<\"a:162aec06\"\>"}],
    ",", 
   RowBox[{"\<\"li:aaa46b3c\"\>", "\[UndirectedEdge]", "\<\"a:d48a2d82\"\>"}],
    ",", 
   RowBox[{"\<\"li:a53ab3d3\"\>", "\[UndirectedEdge]", "\<\"a:b3ef8aa8\"\>"}],
    ",", 
   RowBox[{"\<\"li:d8ff9a59\"\>", "\[UndirectedEdge]", "\<\"a:28e9514d\"\>"}],
    ",", 
   RowBox[{"\<\"li:94538c08\"\>", 
    "\[UndirectedEdge]", "\<\"a:a2b07aa5\"\>"}]}], "}"}]], "Output",
 CellLabel->
  "Out[86]=",ExpressionUUID->"15d7f9c3-8a77-4356-b4b2-3f3ad3c36b10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "/@", 
  RowBox[{"Values", "@", "\[IndentingNewLine]", 
   RowBox[{"g", "@", 
    RowBox[{"\"\<Children\>\"", "[", 
     RowBox[{"g", "@", 
      RowBox[{"\"\<Select\>\"", "[", "\"\<td code\>\"", "]"}]}], 
     "]"}]}]}]}]], "Input",
 CellLabel->"In[81]:=",ExpressionUUID->"4d211929-9de1-48d4-aea2-b6848cdd3910"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"(no scope)\"\>", ",", "\<\"repo\"\>", 
   ",", "\<\"repo:status\"\>", ",", "\<\"repo_deployment\"\>", 
   ",", "\<\"public_repo\"\>", ",", "\<\"repo:invite\"\>", 
   ",", "\<\"admin:org\"\>", ",", "\<\"write:org\"\>", 
   ",", "\<\"read:org\"\>", ",", "\<\"admin:public_key\"\>", 
   ",", "\<\"write:public_key\"\>", ",", "\<\"read:public_key\"\>", 
   ",", "\<\"admin:repo_hook\"\>", ",", "\<\"write:repo_hook\"\>", 
   ",", "\<\"read:repo_hook\"\>", ",", "\<\"admin:org_hook\"\>", 
   ",", "\<\"gist\"\>", ",", "\<\"notifications\"\>", ",", "\<\"repo\"\>", 
   ",", "\<\"user\"\>", ",", "\<\"user:email\"\>", ",", "\<\"user:follow\"\>",
    ",", "\<\"read:user\"\>", ",", "\<\"user:email\"\>", 
   ",", "\<\"user:follow\"\>", ",", "\<\"delete_repo\"\>", 
   ",", "\<\"write:discussion\"\>", ",", "\<\"read:discussion\"\>", 
   ",", "\<\"admin:gpg_key\"\>", ",", "\<\"write:gpg_key\"\>", 
   ",", "\<\"read:gpg_key\"\>"}], "}"}]], "Output",
 CellLabel->
  "Out[81]=",ExpressionUUID->"88bb072e-eb72-4927-8fc2-3a4c01902935"]
}, Open  ]]
},
WindowSize->{808, 755},
WindowMargins->{{58, Automatic}, {Automatic, 10}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]

