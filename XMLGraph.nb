Notebook[{

Cell[CellGroupData[{
Cell["XMLGraph", \
"CodeSection",ExpressionUUID->"73e32bf8-1e9f-449c-a7e0-f54ac6b0a77c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<XMLGraph`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"a1777e36-e630-4a6e-8278-\
f2ccd73466d1"],

Cell["\<\
\[LeftCeiling]
\tXMLGraph is an object that is stored as XMLGraph[data] where data is an \
Association or other object that supports key access mechanisms that stores \
the core XMLGraph data.
\tKeys *must* include \[OpenCurlyDoubleQuote]Graph\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Data\[CloseCurlyDoubleQuote],  \
\[OpenCurlyDoubleQuote]Version\[CloseCurlyDoubleQuote].
\t\tData      -- data for each node
\t\tGraph   -- structural representation of the XML
\t\tVersion -- version of the object API
\tEach node in Graph will have an entry in Data. Structural lookups happen on \
the Graph. Data lookups happen on the data.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"a9b98545-fc09-4b30-84f0-f50c93dc639e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraph", "::", "usage"}], "=", "\n", "\t", 
   "\"\<A Graph-based representation of XML data\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"0192aaeb-1bef-4c10-b6f6-aa8cdb061efa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<`Package`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"6786ddd7-0c8a-42ed-95a6-\
ba653df63cd8"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Node Stuff\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"aa74b1b3-82c2-4ead-b4e5-0d67f43f3727"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$NodeDefaults", "::", "usage"}], "=", 
   "\"\<Defaults for created nodes\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Node", "::", "usage"}], "=", "\"\<Head for a node\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"8cb563b2-388a-4a0f-9739-d9f958f8c189"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CreateNode", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Creates a node/set of nodes\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InsertNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Adds nodes to the graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DeleteNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Deletes nodes from the graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ModifyNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Modifies a node or set of nodes on the graph\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"60099292-7c37-4c52-83b9-c8780502f48b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RootNode", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Gets the XML root element\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeList", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Lists the nodes on the Graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeData", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Gets a set of nodes off the graph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Selects nodes by some criterion\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"def51c9b-9d1e-4e59-8c45-9a70e2e5c0f0"]\

}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Object Stuff\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"8484398c-6bcf-4295-a201-1bfb21409ca0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConstructXMLGraph", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphQ", "::", "usage"}], "=", 
   "\"\<Tests whether an XMLGraph structure is a valid XML graph\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MutableXMLGraph", "::", "usage"}], "=", 
   "\"\<Creates a mutable XMLGraph\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MutableXMLGraphQ", "::", "usage"}], "=", 
   "\"\<Tests whether a graph is mutable or not\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"134307b6-3d63-40b3-8d10-b415e5e06e1e"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Conversions\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"5c11f8d6-63e7-4141-b002-377728f6bb38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLAssociation", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ToXMLAssociation", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"3971490d-0cf9-4440-908d-3641d132e286"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLObject", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ToXMLObject", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"63efabda-faa5-4263-baa4-c5c72ab540f0"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Graph Operations\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"62a98411-59e8-439b-af3d-2c179fac0440"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XMLSubgraph", "::", "usage"}], "=", 
   "\"\<Extracts a subgraph starting from a head node\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FormattedXMLGraph", "::", "usage"}], "=", 
   "\"\<Returns the Graph with nice formatting\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphSort", "::", "usage"}], "=", 
   "\"\<Sorts the XMLGraph by distance from the \\\"Root\\\" node\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"839bc02a-30e2-4271-977a-b4b4395fb040"]\

}, Closed]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"6141fdb9-45b9-4996-99b6-\
b5e9d136ff13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"25af30df-69d9-4995-b7b5-\
e734bbed5230"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Object API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"a6f45103-1173-486e-88b9-29aff0108c94"],

Cell[BoxData[
 RowBox[{"XMLGraph", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"3de88a08-4f9f-4ea4-a0f7-62a2e9a4d863"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraphQ\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"26db5503-0268-4a39-b403-857b88550ac6"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraphQ\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b1af96ba-f171-42c4-8f9b-ab358d8fb367"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphQ", "[", 
    RowBox[{"a", ":", 
     RowBox[{"Except", "[", "_XMLGraph", "]"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"TrueQ", "@", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"a", ",", " ", "\"\<Version\>\""}], "]"}]}], "]"}], "&&", "\n",
     "\t\t", 
    RowBox[{"AllTrue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Graph\>\"", ",", " ", "\"\<Data\>\""}], "}"}], ",", " ", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"a", ",", " ", "#"}], "]"}], "&"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"HoldPattern", "[", 
   RowBox[{"XMLGraphQ", "[", 
    RowBox[{
     RowBox[{"XMLGraph", "[", "a_", "]"}], "?", 
     RowBox[{"(", "System`Private`HoldNotValidQ", ")"}]}], "]"}], "]"}], ":=",
   "\n", "\t", 
  RowBox[{"XMLGraphQ", "@", "a"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XMLGraphQ", "[", 
    RowBox[{"_XMLGraph", "?", 
     RowBox[{"(", "System`Private`HoldValidQ", ")"}]}], "]"}], ":=", "\n", 
   "\t", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"XMLGraphQ", "[", "___", "]"}], ":=", 
  "False"}]}], \
"CodeInput",ExpressionUUID->"c7134c5d-3e71-4446-a806-6760d0b5a3ba"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MutableXMLGraphQ\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"edc8752f-f68a-4a94-add1-9093aa342846"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"MutableXMLGraphQ", "[", 
     RowBox[{"XMLGraph", "[", "a_", "]"}], "]"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"MutableXMLGraphQ", "@", "a"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MutableXMLGraphQ", "[", 
   RowBox[{"a", ":", 
    RowBox[{"Except", "[", "_XMLGraph", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"TrueQ", "@", 
   RowBox[{
   "a", "[", "\"\<Mutable\>\"", 
    "]"}]}]}]}], \
"CodeInput",ExpressionUUID->"db9a0b58-b196-4946-9fde-7b0e36ecabd8"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Constructor\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7a7cef16-5be7-4982-b29f-c9c50cf35578"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c3413d31-fa60-4fd3-9ecd-71080a30ed83"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{
     RowBox[{"XMLGraph", "[", "a_", "]"}], "?", 
     RowBox[{"(", "System`Private`HoldNotValidQ", ")"}]}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", "=", 
       RowBox[{"ConstructXMLGraph", "[", "a", "]"}]}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"res", "/;", 
      RowBox[{"XMLGraphQ", "[", "res", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"b518068d-4101-401e-ae02-5ee87a07102d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ConstructXMLGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"154f91c7-0eaf-436b-9233-ada9fd66ff96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$XMLGraphDefaults", "=", "\n", "\t", 
   RowBox[{"<|", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<Version\>\"", "\[Rule]", "1"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Graph\>\"", "\[Rule]", 
      RowBox[{"VertexAdd", "[", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{"{", "}"}], "]"}], ",", " ", "\"\<Root\>\""}], "]"}]}], ",", 
     "\n", "\t\t", 
     RowBox[{"\"\<Data\>\"", "\[Rule]", 
      RowBox[{"<|", "|>"}]}]}], "\n", "\t\t", "|>"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"c6f0c984-ceda-451a-a0cc-b0eda408050b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConstructXMLGraph", "//", "Clear"}], 
  ";"}]], "CodeInput",ExpressionUUID->"63ca1b5a-2ddb-43f4-bddc-5515b6e7e1d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConstructXMLGraph", "[", "a_Association", "]"}], ":=", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "a"}], ">", "0"}], "&&", 
      RowBox[{"AssociationQ", "@", 
       RowBox[{"a", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&&", "\n", "\t\t", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Type\>\"", ",", " ", "\"\<Meta\>\"", ",", " ", 
          "\"\<Children\>\""}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{"KeyExistsQ", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", "#"}], "]"}], "&"}]}], 
       "]"}]}], ",", "\n", "\t\t", 
     RowBox[{"FromXMLAssociation", "@", "a"}], ",", "\n", "\t\t", 
     RowBox[{"Module", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"assoc", "=", "\n", "\t", "\t\t\t\t", 
         RowBox[{"Join", "[", "\n", "\t", "\t\t\t\t\t", 
          RowBox[{"$XMLGraphDefaults", ",", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{"KeyTake", "[", 
            RowBox[{"a", ",", " ", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Version\>\"", ",", " ", "\"\<Graph\>\"", ",", " ", 
               "\"\<Data\>\""}], "}"}]}], "]"}]}], "\n", "\t", "\t\t\t\t\t", 
          "]"}]}], "\n", "\t", "\t\t\t", "}"}], ",", "\n", "\t", "\t\t", 
       RowBox[{
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"EdgeList", "[", 
           RowBox[{
            RowBox[{"assoc", "[", "\"\<Graph\>\"", "]"}], ",", " ", 
            RowBox[{"\"\<Root\>\"", "\[UndirectedEdge]", "_"}]}], "]"}], ",", 
          "\n", "\t", "\t\t\t", 
          RowBox[{
           RowBox[{"el", ":", 
            RowBox[{"{", 
             RowBox[{"\"\<Root\>\"", "\[UndirectedEdge]", "n_"}], "}"}]}], ":>",
            "\n", "\t", "\t\t\t\t", 
           RowBox[{"Set", "[", 
            RowBox[{
             RowBox[{"assoc", "[", "\"\<Graph\>\"", "]"}], ",", " ", "\n", 
             "\t", "\t\t\t\t\t", 
             RowBox[{"EdgeAdd", "[", 
              RowBox[{
               RowBox[{"EdgeDelete", "[", 
                RowBox[{
                 RowBox[{"assoc", "[", "\"\<Graph\>\"", "]"}], ",", " ", 
                 "el"}], "]"}], ",", " ", 
               RowBox[{"\"\<Root\>\"", "\[DirectedEdge]", "n"}]}], "]"}]}], 
            "\n", "\t", "\t\t\t\t\t", "]"}]}]}], "\n", "\t", "\t\t\t", "]"}], 
        ";", "\n", "\t", "\t\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"d", "=", "assoc"}], "}"}], ",", "\n", "\t", "\t\t\t", 
          RowBox[{"System`Private`HoldSetValid", "@", 
           RowBox[{"XMLGraph", "[", "d", "]"}]}]}], "\n", "\t\t\t\t", 
         "]"}]}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstructXMLGraph", "[", 
    RowBox[{"xml", ":", 
     RowBox[{"_XMLElement", "|", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XMLObject", "[", "_", "]"}], "[", 
        RowBox[{"_", ",", " ", "_", ",", " ", "_"}], "]"}], ")"}], "|", 
      "_String"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"FromXMLObject", "[", "xml", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ConstructXMLGraph", "[", "e_", "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", 
      RowBox[{"Association", "@", "e"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"AssociationQ", "@", "a"}], ",", "\n", "\t\t\t", 
      RowBox[{"XMLGraph", "@", "a"}], ",", "\n", "\t\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Quiet", "@", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"BooleanQ", "@", 
            RowBox[{"KeyExistsQ", "[", 
             RowBox[{"e", ",", " ", "\"\<Version\>\""}], "]"}]}], ",", " ", 
           "False"}], "]"}]}], ",", " ", "\n", "\t", "\t", "\t\t", 
        RowBox[{
         RowBox[{"KeyValueMap", "[", "\n", "\t", "\t", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"KeyExistsQ", "[", 
                RowBox[{"e", ",", " ", "#"}], "]"}]}], ",", "\n", "\t", "\t", 
              "\t\t\t\t", 
              RowBox[{
               RowBox[{"e", "[", "#", "]"}], "=", "#2"}]}], "\n", "\t", "\t", 
             "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t", "\t", "\t\t\t", 
           "$XMLGraphDefaults"}], "\n", "\t", "\t", "\t\t\t", "]"}], ";", 
         "\n", "\t", "\t", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"XMLGraphQ", "[", "e", "]"}]}], ",", " ", "$Failed", ",", 
           " ", "\n", "\t", "\t", "\t\t\t", 
           RowBox[{
            RowBox[{"Replace", "[", 
             RowBox[{
              RowBox[{"EdgeList", "[", 
               RowBox[{
                RowBox[{"e", "[", "\"\<Graph\>\"", "]"}], ",", " ", 
                RowBox[{"\"\<Root\>\"", "\[UndirectedEdge]", "_"}]}], "]"}], 
              ",", "\n", "\t", "\t", "\t\t\t\t", 
              RowBox[{
               RowBox[{"el", ":", 
                RowBox[{"{", 
                 RowBox[{"\"\<Root\>\"", "\[UndirectedEdge]", "n_"}], "}"}]}],
                ":>", "\n", "\t", "\t", "\t\t\t\t\t", 
               RowBox[{"Set", "[", 
                RowBox[{
                 RowBox[{"e", "[", "\"\<Graph\>\"", "]"}], ",", " ", "\n", 
                 "\t", "\t", "\t", "\t\t\t\t\t", 
                 RowBox[{"EdgeAdd", "[", 
                  RowBox[{
                   RowBox[{"EdgeDelete", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "\"\<Graph\>\"", "]"}], ",", " ", 
                    "el"}], "]"}], ",", " ", 
                   RowBox[{"\"\<Root\>\"", "\[DirectedEdge]", "n"}]}], 
                  "]"}]}], "\n", "\t", "\t", "\t\t\t\t\t\t", "]"}]}]}], "\n", 
             "\t", "\t", "\t\t\t\t", "]"}], ";", "\n", "\t", "\t", "\t\t\t", 
            RowBox[{"System`Private`HoldSetValid", "@", 
             RowBox[{"XMLGraph", "[", "e", "]"}]}]}]}], "\n", "\t", "\t", 
          "\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t", "$Failed"}], "\n", 
       "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"d18087e9-7684-4591-9c01-86a825e0b179"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MutableXMLGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"272ead4e-c389-420e-8fe6-160fcc8b65e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MutableXMLGraph", "[", 
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MutableXMLGraphQ", "[", "x", "]"}], ",", " ", "\n", "\t\t", "x", 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Quiet", "@", "\n", "\t\t\t", 
      RowBox[{"Check", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"Get", "[", "\"\<HashTableInterface`\>\"", "]"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{
        "Get", "[", 
         "\"\<https://github.com/b3m2a1/mathematica-tools/raw/master/\
HashTableInterface.m\>\"", "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"b", "=", 
         RowBox[{"HashTableInterface`HashTable", "[", 
          RowBox[{"x", "[", "\"\<Backend\>\"", "]"}], "]"}]}], "}"}], ",", 
       "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"b", "[", "\"\<Mutable\>\"", "]"}], "=", "True"}], ";", "\n",
         "\t\t\t", 
        RowBox[{"XMLGraph", "[", "b", "]"}]}]}], "\n", "\t\t\t", "]"}]}]}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"18e45e9d-0cdf-4c2e-bdab-5da26ec50aef"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Accessor API\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7c7aa613-3dbf-460f-96cc-134893ae0af1"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Backend\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"192658f1-ad38-4795-876b-8cf3cd2e5c85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "@", 
   RowBox[{
    RowBox[{"XMLGraph", "[", "a_", "]"}], "[", "\"\<Backend\>\"", "]"}]}], ":=",
   "\n", "\t", 
  "a"}]], "CodeInput",ExpressionUUID->"159e2367-9198-461e-9582-249bd8a73991"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Graph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ffa2e8e9-69c5-463a-a9cc-f179bb9100ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "@", 
   RowBox[{
    RowBox[{"XMLGraph", "[", "a_", "]"}], "[", "\"\<Graph\>\"", "]"}]}], ":=",
   "\n", "\t", 
  RowBox[{
  "a", "[", "\"\<Graph\>\"", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"3e11fb21-a683-455a-8d85-58613a460f26"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Data\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4e6dc1c9-f170-4e95-b155-72f312fb1717"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "@", 
   RowBox[{
    RowBox[{"XMLGraph", "[", "a_", "]"}], "[", "\"\<Data\>\"", "]"}]}], ":=", 
  "\n", "\t", 
  RowBox[{
  "a", "[", "\"\<Data\>\"", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"63bac57b-2eb7-4228-bab7-8046d785d109"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Format\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"a34651ea-2a45-4e5e-9aec-e44744f2bf5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"RawBoxes", "@", "\n", "\t\t", 
   RowBox[{"With", "[", "\n", "\t", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"g", "=", 
        RowBox[{
         RowBox[{"VertexCount", "@", 
          RowBox[{"x", "[", "\"\<Graph\>\"", "]"}]}], "-", "1"}]}], ",", "\n",
        "\t\t\t\t", 
       RowBox[{"r", "=", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"RootNode", "[", "x", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"s", ":", 
            RowBox[{"Except", "[", "None", "]"}]}], ":>", 
           RowBox[{
            RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
            RowBox[{"s", ",", " ", "\"\<Type\>\""}], "]"}]}]}], "]"}]}]}], 
      "\n", "\t\t\t\t", "}"}], ",", "\n", "\t\t\t", 
     RowBox[{"BoxForm`ArrangeSummaryBox", "[", "\n", "\t\t\t\t", 
      RowBox[{
      "XMLGraph", ",", "\n", "\t\t\t\t", "x", ",", "\n", "\t\t\t\t", "None", 
       ",", "\n", "\t\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"BoxForm`MakeSummaryItem", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Root: \>\"", ",", " ", "r"}], "}"}], ",", " ", 
           "StandardForm"}], "]"}], ",", "\n", "\t\t\t\t\t", 
         RowBox[{"BoxForm`MakeSummaryItem", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Nodes: \>\"", ",", " ", "g"}], "}"}], ",", " ", 
           "StandardForm"}], "]"}]}], "\n", "\t\t\t\t\t", "}"}], ",", "\n", 
       "\t\t\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t\t\t", "StandardForm"}], "\n", 
      "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"4602c545-5722-4356-8003-7be1368633ac"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Attributes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"45ad7919-762f-44d1-8396-11ae8be72d04"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Insert\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"2c5055ba-33a9-4572-b9f4-0edd8e7d05ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"\"\<Insert\>\"", "[", "n_", "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"InsertNodes", "[", 
   RowBox[{"x", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"300cf772-407d-4bd8-bc9e-fbe1244e36c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Delete\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"41bf58c3-1b44-4736-b5bb-9b6b3a1c4df1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"\"\<Delete\>\"", "[", "n_", "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"DeleteNodes", "[", 
   RowBox[{"x", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"921e7f02-9783-4fad-9a0b-d6636f7abe35"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Modify\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4c357d2e-1390-40eb-be58-185e959bef92"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"\"\<ModifyNodes\>\"", "[", "n_", "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"ModifyNodes", "[", 
   RowBox[{"x", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"9bfed3be-8147-487b-bb3f-de8ee0203f34"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FormattedGraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"42170ecf-2b40-4db6-ad63-40fa89873bb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
    RowBox[{"\"\<FormattedGraph\>\"", "[", "o___", "]"}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"FormattedXMLGraph", "[", 
    RowBox[{"x", ",", " ", "o"}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"9cd480e9-3006-48c3-9971-d179ef17ad59"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Nodes\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9b0196b6-c7fc-4d01-a2d4-558bb3b71e5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", "\"\<Nodes\>\"", "]"}], ":=",
   "\n", "\t", 
  RowBox[{
  "NodeList", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"74788f25-e303-4bf0-b974-892f2aaa0256"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Select\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"80f065e7-56d5-457c-b3d4-e33e2ebcaa5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"\"\<Select\>\"", "[", 
    RowBox[{"fn_", ",", " ", "n___"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"SelectNodes", "[", 
   RowBox[{"x", ",", " ", "fn", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8b005a5d-bc98-49a2-872f-21a6a194d06e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Data\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e4b1a840-5fac-4db4-b2dd-1f0dbad3ed38"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"\"\<Data\>\"", "[", "n__", "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeData", "[", 
   RowBox[{"x", ",", " ", "n"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"ed0acc01-3e84-408e-9cb4-b33c2e3df3c7"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Meta\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"2c44d77b-2df9-46b6-b011-366f8e204c3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"\"\<Meta\>\"", "[", "n_", "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeData", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "\"\<Meta\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"759cddee-a57f-402a-805f-4f60e42d230f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Parent\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f7dce4b0-a19c-4344-be98-aed9e677c602"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"\"\<Parent\>\"", "[", "n_", "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeData", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "\"\<Parent\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"f42de4a7-a319-4469-9dc2-b223226caf5b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Children\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9c5e8e31-c3fd-464b-af12-55a11f09cbda"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"\"\<Children\>\"", "[", "n_", "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"NodeData", "[", 
   RowBox[{"x", ",", " ", "n", ",", " ", "\"\<Children\>\""}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5505037c-2f39-4eda-b2c6-b1e9add9de77"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Sort\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1a85426e-0bfc-435e-9124-209c1b841c2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"\"\<Sort\>\"", "[", "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
  "XMLGraphSort", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"478805cb-381c-44bc-996e-bdd9dd673d25"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Subgraph\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"00ee8d9b-ba1a-46a1-8db4-26f5907a7750"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", 
   RowBox[{"\"\<Subgraph\>\"", "[", "k_", "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLSubgraph", "[", 
   RowBox[{"x", ",", " ", "k"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5b73a8cc-6417-4c51-be69-06477b88c20a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XML\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"0e0ac211-a0b4-4ed9-9d80-49be316c5577"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", "\"\<XML\>\"", "]"}], ":=", 
  "\n", "\t", 
  RowBox[{
  "ToXMLObject", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"865f3400-6c25-4793-9fc2-d267a0465f4d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Association\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"884cde8e-3409-4602-aa97-c1e84cf315b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], "[", "\"\<Association\>\"", 
   "]"}], ":=", "\n", "\t", 
  RowBox[{
  "ToXMLAssociation", "[", "x", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"cc37eab0-3407-4350-aea3-05751574fc19"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Node API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"13740c6e-dc23-4dae-a16e-b0ebd284485c"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$NodeDefaults\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"48e93e77-4858-4d66-aabb-2512ea3b71ac"],

Cell[BoxData[
 RowBox[{"$NodeDefaults", "=", "\n", "\t", 
  RowBox[{"<|", "\n", "\t\t", 
   RowBox[{
    RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<p\>\""}], ",", "\n", "\t\t", 
    RowBox[{"\"\<Meta\>\"", "\[Rule]", 
     RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t", 
    RowBox[{"\"\<Children\>\"", "\[Rule]", 
     RowBox[{"{", "}"}]}]}], "\n", "\t\t", 
   "|>"}]}]], \
"CodeInput",ExpressionUUID->"dc6c636f-ea92-4613-88db-749023bd2c76"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ValidateNode\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"b366e9af-e4a6-410f-9be5-e809b35a407a"],

Cell["\[LeftCeiling]...I should probably write this...\[RightFloor]", "Text",
 Evaluatable->True,ExpressionUUID->"264368c7-bfea-4335-948e-4fe13448830d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Node\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"b6cba970-307f-4b1d-b74c-acb09067bd5f"],

Cell[BoxData[
 RowBox[{"With", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"baseBoxes", "=", "\n", "\t\t", 
     RowBox[{
      RowBox[{"RawBoxes", "@", "\n", "\t\t\t", 
       RowBox[{"BoxForm`ArrangeSummaryBox", "[", "\n", "\t\t\t\t", 
        RowBox[{"Node", ",", "\n", "\t", "\t\t\t", 
         RowBox[{"Node", "[", "$$name", "]"}], ",", "\n", "\t", "\t\t\t", 
         "None", ",", "\n", "\t", "\t\t\t", 
         RowBox[{"{", "$$name", "}"}], ",", "\n", "\t", "\t\t\t", 
         RowBox[{"{", "}"}], ",", "\n", "\t", "\t\t\t", "StandardForm"}], 
        "\n", "\t", "\t\t\t", "]"}]}], "/.", 
      RowBox[{
       RowBox[{"DynamicModuleBox", "[", 
        RowBox[{"_", ",", " ", "b_", ",", " ", "___"}], "]"}], 
       "\[RuleDelayed]", "\n", "\t", "\t\t\t\t\t\t", 
       RowBox[{"RuleCondition", "[", 
        RowBox[{
         RowBox[{"b", "/.", 
          RowBox[{
           RowBox[{"PaneSelectorBox", "[", 
            RowBox[{"s_", ",", " ", "___"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"Lookup", "[", 
            RowBox[{"s", ",", " ", "False"}], "]"}]}]}], ",", " ", "True"}], 
        "]"}]}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t", 
   RowBox[{
    RowBox[{"Format", "[", 
     RowBox[{"Node", "[", "name_String", "]"}], "]"}], ":=", "\n", "\t\t", 
    RowBox[{"baseBoxes", "/.", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"$$name", "\[Rule]", "name"}], ",", "\n", "\t", "\t\t", 
       RowBox[{
        RowBox[{"TagBox", "[", 
         RowBox[{"\"\<$$name\>\"", ",", " ", "\"\<SummaryItem\>\""}], "]"}], 
        "\[RuleDelayed]", "\n", "\t", "\t\t", 
        RowBox[{"RuleCondition", "[", 
         RowBox[{
          RowBox[{"TagBox", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"name", ",", " ", "InputForm"}], "]"}], ",", " ", 
            "\"\<SummaryItem\>\""}], "]"}], ",", " ", "True"}], "]"}]}]}], 
      "\n", "\t", "\t\t", "}"}]}]}]}], "\n", "\t", 
  "]"}]], "CodeInput",ExpressionUUID->"6571a719-65e7-42ec-b8bf-1f547f71d322"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CreateNode\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"559b017c-db6a-4cfb-922e-3007e688b03d"],

Cell["\<\
\[LeftCeiling]
\tCreateNode takes a parent node and a list of child-specs and creates an \
Association for the children out of it.
\tReturns {{childData}, {nodeSpecs...}} where each nodeSpec is an Association \
and the childData is data about the children of the parent node.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"45e7eeba-8158-400b-a8aa-888eb6fa9cda"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CreateNode\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"372d1bdf-16a1-475f-9a43-3c9437d9bd19"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CreateNode", "[", "d_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Reap", "[", 
    RowBox[{"createNode", "[", "d", "]"}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"1aac1c05-d69c-4277-82ad-18358c62b0bc"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]createNode\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"3716d145-65e8-4137-ba67-2f935f90ff52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"createNode", "[", 
    RowBox[{"parent_", "\[Rule]", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"d_", ",", " ", "c_", ",", " ", "b_"}], "]"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"createNode", "[", "\n", "\t\t", 
    RowBox[{"parent", "->", "\n", "\t\t\t", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Type\>\"", "\[Rule]", "d"}], ",", " ", 
       RowBox[{"\"\<Meta\>\"", "\[Rule]", "c"}], ",", " ", 
       RowBox[{"\"\<Children\>\"", "\[Rule]", "b"}]}], "|>"}]}], "\n", "\t\t",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"createNode", "[", 
   RowBox[{"parent_", "\[Rule]", "kid_Association"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"<|", 
        RowBox[{"\"\<Parent\>\"", "\[Rule]", "parent"}], "|>"}]}], ",", "\n", 
      "\t\t\t", "children"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"data", "[", "\"\<Type\>\"", "]"}], "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"kid", ",", " ", "\"\<Type\>\"", ",", " ", 
        RowBox[{"$NodeDefaults", "[", "\"\<Type\>\"", "]"}]}], "]"}]}], ";", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{"data", "[", "\"\<Name\>\"", "]"}], "=", 
      RowBox[{"CreateUUID", "[", 
       RowBox[{
        RowBox[{"data", "[", "\"\<Type\>\"", "]"}], "<>", "\"\<:\>\""}], 
       "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"data", "[", "\"\<Meta\>\"", "]"}], "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"kid", ",", " ", "\"\<Meta\>\"", ",", " ", 
        RowBox[{"$NodeDefaults", "[", "\"\<Meta\>\"", "]"}]}], "]"}]}], ";", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{"data", "[", "\"\<Children\>\"", "]"}], "=", "\n", "\t\t\t", 
      RowBox[{"createNode", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"data", "[", "\"\<Name\>\"", "]"}], "->", "\n", "\t\t\t\t\t", 
        
        RowBox[{"Flatten", "@", 
         RowBox[{"List", "@", 
          RowBox[{"Lookup", "[", 
           RowBox[{"kid", ",", " ", "\"\<Children\>\"", ",", " ", 
            RowBox[{"$NodeDefaults", "[", "\"\<Children\>\"", "]"}]}], 
           "]"}]}]}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"Sow", "[", "data", "]"}], ";", "\n", "\t\t", 
     RowBox[{"Node", "[", 
      RowBox[{"data", "[", "\"\<Name\>\"", "]"}], "]"}]}]}], "\n", "\t\t", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"createNode", "[", 
    RowBox[{"parent_", "\[Rule]", 
     RowBox[{"kids", ":", "l_List"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"createNode", "/@", 
    RowBox[{"Thread", "[", 
     RowBox[{"parent", "\[Rule]", "kids"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"createNode", "[", 
   RowBox[{"parent_", "\[Rule]", "kid_"}], "]"}], ":=", "\n", "\t", 
  "kid"}]}], \
"CodeInput",ExpressionUUID->"a961653d-f309-41e3-b8e3-95dd4969b431"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]InsertNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"524d28e7-b71d-4df1-b6b9-fbbc5dc23ed7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InsertNodes", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"x_XMLGraph", "?", "XMLGraphQ"}], ",", " ", "\n", "\t", 
    RowBox[{"nodes", ":", 
     RowBox[{"{", "__Rule", "}"}]}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"XMLGraph", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", 
      "\t\t\t", "data", ",", "\n", "\t\t\t", 
      RowBox[{"parents", "=", 
       RowBox[{"Keys", "@", "nodes"}]}], ",", "\n", "\t\t\t", "pos", ",", 
      "\n", "\t\t\t", 
      RowBox[{"nodez", "=", 
       RowBox[{"Values", "@", "nodes"}]}], ",", "\n", "\t\t\t", "children", 
      ",", "\n", "\t\t\t", "others", ",", "\n", "\t\t\t", "edges", ",", "\n", 
      "\t\t\t", "new"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"(*", " ", 
     RowBox[{
     "If", " ", "no", " ", "position", " ", "is", " ", "specifed", " ", 
      "insert", " ", "at", " ", "the", " ", "end"}], " ", "*)"}], "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"parents", "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"ListQ", "@", "#"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"#", ",", " ", 
            RowBox[{"-", "1"}]}], "}"}], ",", " ", "#"}], "]"}], "&"}], "/@", 
       "parents"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"parents", ",", " ", "pos"}], "}"}], "=", 
      RowBox[{"Transpose", "@", "parents"}]}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Create", " ", "new", " ", "nodes", " ", "from", " ", "rules"}],
       " ", "*)"}], "\n", "\t\t", 
     RowBox[{"nodez", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", "#", "}"}], ",", " ", "1"}], "]"}], "&"}], "/@", 
       "nodez"}]}], ";", "\n", "\t\t", 
     RowBox[{"nodez", "=", 
      RowBox[{"CreateNode", "/@", 
       RowBox[{"Thread", "[", 
        RowBox[{"parents", "\[Rule]", "nodez"}], "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"new", "=", 
      RowBox[{"Join", "@@", 
       RowBox[{"nodez", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}]}], ";", "\n", "\t\t", 
     
     RowBox[{"(*", " ", 
      RowBox[{
      "Add", " ", "constructed", " ", "edges", " ", "to", " ", "the", " ", 
       "Graph"}], " ", "*)"}], "\n", "\t\t", 
     RowBox[{"edges", "=", "\n", "\t\t\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "\"\<Parent\>\"", "]"}], "\[Rule]", 
          RowBox[{"#", "[", "\"\<Name\>\"", "]"}]}], "&"}], ",", " ", "new"}],
        "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], "=", "\n", "\t\t\t", 
      RowBox[{"EdgeAdd", "[", 
       RowBox[{
        RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"UndirectedEdge", "@@@", "edges"}]}], "\n", "\t\t\t\t", 
       "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Add", " ", "data", " ", "to", " ", "Data", " ", "association"}], " ", 
      "*)"}], "\n", "\t\t", 
     RowBox[{"data", "=", 
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"MapThread", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Function", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"#", ",", " ", "\"\<Children\>\""}], "]"}], "=", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"FlattenAt", "[", "\n", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Insert", "[", 
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"#", ",", " ", "\"\<Children\>\""}], "]"}], ",", " ", 
              "#3", ",", " ", "#2"}], "]"}], ",", "\n", "\t\t\t\t\t\t", 
            "#2"}], "\n", "\t\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"data", "[", 
          RowBox[{"#", ",", " ", "\"\<Children\>\""}], "]"}]}], "\n", 
        "\t\t\t\t", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
        "parents", ",", "\n", "\t\t\t\t", "pos", ",", "\n", "\t\t\t\t", 
         RowBox[{"nodez", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "\n", "\t\t\t\t", 
        "}"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"#", "[", "\"\<Name\>\"", "]"}], "]"}], "=", "#"}], "]"}], 
       ",", " ", "new"}], "]"}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Return", " ", "new", " ", "XMLGraph", " ", "and", " ", "added", " ", 
       "nodes"}], " ", "*)"}], "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MutableXMLGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
         RowBox[{"XMLGraph", "@", "a"}]}], "]"}], ",", " ", 
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "}"}]}]}], "\n", 
   "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"073fce56-39b1-4a27-b998-ba2872901103"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]DeleteNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"15cc4fdb-0d1c-43cb-a5ad-174c3353ffab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteNodes", "[", "\n", "\t", 
   RowBox[{"x_XMLGraph", ",", "\n", "\t", 
    RowBox[{"n", ":", 
     RowBox[{"{", "__String", "}"}]}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", "\t\t\t", "g",
       ",", "\n", "\t\t\t", "d", ",", "\n", "\t\t\t", "vs"}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"g", "=", 
      RowBox[{"VertexDelete", "[", 
       RowBox[{"g", ",", " ", "n"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], "=", "g"}], ";", "\n", "\t\t", 
     RowBox[{"d", "=", 
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"vs", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"d", ",", " ", "n"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}], "=", 
      RowBox[{"KeyDrop", "[", 
       RowBox[{"d", ",", " ", "n"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MutableXMLGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
         RowBox[{"XMLGraph", "@", "a"}]}], "]"}], ",", " ", "vs"}], "}"}]}]}],
    "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"403e5fbc-74c1-462e-8fdd-52e088a68f8b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ModifyNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"9e726068-4497-41be-a08b-f7d31b69526f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModifyNodes", "[", "\n", "\t", 
   RowBox[{"x_XMLGraph", ",", "\n", "\t", 
    RowBox[{"n", ":", 
     RowBox[{"{", "__Rule", "}"}]}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", "\t\t\t", "g",
       ",", "\n", "\t\t\t", "d", ",", "\n", "\t\t\t", 
      RowBox[{"vs", "=", 
       RowBox[{"Keys", "@", "n"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"ms", "=", 
       RowBox[{"Association", "/@", 
        RowBox[{"Values", "[", "n", "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"MapThread", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Function", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"#", ",", " ", "\"\<Type\>\""}], "]"}], "=", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"Lookup", "[", 
           RowBox[{"#2", ",", " ", "\"\<Type\>\"", ",", " ", 
            RowBox[{"d", "[", 
             RowBox[{"#", ",", " ", "\"\<Type\>\""}], "]"}]}], "]"}]}], ";", 
         "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"#", ",", " ", "\"\<Meta\>\""}], "]"}], "=", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"Merge", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"#", ",", " ", "\"\<Meta\>\""}], "]"}], ",", " ", 
              RowBox[{"KeyDrop", "[", 
               RowBox[{"#2", ",", " ", "\"\<Type\>\""}], "]"}]}], "}"}], ",", 
            " ", "Last"}], "]"}]}], ";"}], "\n", "\t\t\t\t", "]"}], ",", "\n",
        "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"vs", ",", "\n", "\t\t\t\t", "ms"}], "\n", "\t\t\t\t", 
        "}"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Data\>\"", "]"}], "=", "d"}], ";", "\n", "\t\t", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MutableXMLGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
       RowBox[{"XMLGraph", "@", "a"}]}], "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"665815f0-1570-48be-8706-a063f912d22a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]RootNode\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"00c3f9bf-e716-4370-885f-8a722983348e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RootNode", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "#"}], ">", "0"}], ",", " ", "\n", "\t\t", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], ",", "\n", "\t\t", 
      "None"}], "\n", "\t\t", "]"}], "&"}], "@", 
   RowBox[{"IncidenceList", "[", 
    RowBox[{
     RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", " ", "\"\<Root\>\""}], 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"a2a83f45-d5c6-44c6-98a9-06cce1502780"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NodeList\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"1ab82e5f-b5fa-411d-a358-6cacfad52edd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NodeList", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Keys", "@", 
   RowBox[{
   "x", "[", "\"\<Data\>\"", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"f0ffaf5a-c13e-492f-9e77-f625c836d6c1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SelectNodes\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7caf900b-1a15-488a-8e0b-9eab2e0b4fa4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", "test_String"}], "]"}], ":=", "\n", "\t", 
   
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "\"\<Type\>\""}], "]"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"#", "\[Equal]", "test"}], "&"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"test", ":", 
      RowBox[{"Except", "[", "_String", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"x", "[", "\"\<Data\>\"", "]"}], ",", " ", "test"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", "test_String", ",", " ", "n_"}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "\"\<Type\>\""}], "]"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"#", "\[Equal]", "test"}], "&"}], ",", " ", "n"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectNodes", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"test", ":", 
      RowBox[{"Except", "[", "_String", "]"}]}], ",", " ", "n_"}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"x", "[", "\"\<Data\>\"", "]"}], ",", " ", "test", ",", " ", 
      "n"}], "]"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"a3fc19cc-cf86-482e-80f3-763b4b1814a6"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NodeData\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"e42d1f2e-4e7c-464e-aca9-492a25b94d51"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NodeData", "[", 
    RowBox[{"x_XMLGraph", ",", " ", "n_String", ",", " ", 
     RowBox[{"Optional", "[", 
      RowBox[{"All", ",", " ", "All"}], "]"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", "n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeData", "[", 
    RowBox[{"x_XMLGraph", ",", " ", "n_String", ",", " ", 
     RowBox[{"part", ":", 
      RowBox[{"_String", "|", 
       RowBox[{"{", "__String", "}"}]}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"x", "[", "\"\<Data\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", " ", "part"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeData", "[", 
    RowBox[{"x_XMLGraph", ",", " ", 
     RowBox[{"n", ":", 
      RowBox[{"{", "__String", "}"}]}], ",", " ", 
     RowBox[{"parts", ":", 
      RowBox[{"_String", "|", 
       RowBox[{"{", "__String", "}"}], "|", "All"}], ":", "All"}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{
    RowBox[{"Lookup", "[", 
     RowBox[{
      RowBox[{"x", "[", "\"\<Data\>\"", "]"}], ",", " ", "n"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", " ", "parts"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"NodeData", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"i", ":", 
     RowBox[{"_Integer", "|", 
      RowBox[{"{", "__Integer", "}"}], "|", "_Span"}]}], ",", " ", 
    RowBox[{"parts", ":", 
     RowBox[{"_String", "|", 
      RowBox[{"{", "__String", "}"}], "|", "All"}], ":", "All"}]}], "]"}], ":=",
   "\n", "\t", 
  RowBox[{"NodeData", "[", 
   RowBox[{"x", ",", " ", 
    RowBox[{
     RowBox[{"VertexList", "[", 
      RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], "]"}], "[", 
     RowBox[{"[", "i", "]"}], "]"}]}], 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"dcc00aa4-7cf1-4e2a-93ab-69a6f99d7145"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Graph API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"b75586c8-101e-4958-9b41-8b71d228ecb8"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLSubgraph\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"71b38dca-777e-4cc0-9657-d4201e1578ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xmlNodeTree", "[", 
    RowBox[{"d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"n", ",", "\n", "\t\t", 
     RowBox[{"Cases", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"n", ",", " ", "\"\<Children\>\""}], "]"}], ",", " ", "\n", 
       "\t", "\t\t", 
       RowBox[{
        RowBox[{"Node", "[", "s_", "]"}], "\[RuleDelayed]", 
        RowBox[{"xmlNodeFullChildren", "[", 
         RowBox[{"d", ",", " ", "s"}], "]"}]}]}], "\n", "\t\t\t", "]"}]}], 
    "\n", "\t\t", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xmlNodeTree", "~", "SetAttributes", "~", "HoldFirst"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"a9e21c7b-0d0f-4500-a919-146994420d28"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xmlSubtree", "[", 
    RowBox[{"g_", ",", " ", "d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"SelectFirst", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"ConnectedComponents", "[", 
      RowBox[{"VertexDelete", "[", 
       RowBox[{"g", ",", " ", 
        RowBox[{"d", "[", 
         RowBox[{"n", ",", " ", "\"\<Parent\>\""}], "]"}]}], "]"}], "]"}], 
     ",", "\n", "\t\t", 
     RowBox[{"MemberQ", "[", "n", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"93e64696-ba75-463c-b5ad-7411d20cb71b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLSubgraph", "[", 
   RowBox[{"x_XMLGraph", ",", " ", "node_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "verts", ",", "\n", "\t\t\t", "sa", ",", "\n", "\t\t\t", "sg", ",", "\n",
       "\t\t\t", 
      RowBox[{"g", "=", 
       RowBox[{"x", "[", "\"\<Graph\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"d", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}]}], "\n", "\t\t\t", "}"}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"verts", "=", 
      RowBox[{"xmlSubtree", "[", 
       RowBox[{"g", ",", " ", "d", ",", " ", "node"}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"XMLGraph", "@", "\n", "\t\t\t", 
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Data\>\"", "\[Rule]", 
         RowBox[{"AssociationThread", "[", 
          RowBox[{"verts", ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"d", ",", " ", "verts"}], "]"}]}], "]"}]}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"\"\<Graph\>\"", "\[Rule]", 
         RowBox[{"EdgeAdd", "[", 
          RowBox[{
           RowBox[{"Subgraph", "[", 
            RowBox[{"g", ",", " ", "verts"}], "]"}], ",", " ", 
           RowBox[{"\"\<Root\>\"", "\[Rule]", "node"}]}], "]"}]}]}], "\n", 
       "\t\t\t\t", "|>"}]}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"ecd87349-4c05-4694-83dc-a6f533b52daa"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FormattedXMLGraph\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"47e93879-7691-4d2e-b9a8-36f9b578ab76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "FormattedXMLGraph", "]"}], "=", "\n", "\t", 
    RowBox[{"Join", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Options", "[", "Graph", "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{"ColorRules", "->", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"\"\<Root\>\"", "\[Rule]", "Black"}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"\"\<body\>\"", "\[Rule]", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}]}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<head\>\"", "->", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<div\>\"", "->", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "3", "]"}]}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<p\>\"", "->", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "4", "]"}]}]}], "\n", 
         "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", 
     "]"}]}], ";"}], "\t"}], "\n", 
 RowBox[{
  RowBox[{"FormattedXMLGraph", "[", 
   RowBox[{"x_XMLGraph", ",", " ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"VertexDelete", "[", 
           RowBox[{"#", ",", " ", "\"\<Root\>\""}], "]"}], "&"}], "@"}], 
        "*)"}], 
       RowBox[{"x", "[", "\"\<Graph\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"r", "=", 
       RowBox[{"RootNode", "[", "x", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"cr", "=", 
       RowBox[{"OptionValue", "[", "ColorRules", "]"}]}], ",", "\n", "\t\t\t",
       "vs"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"cr", "=", "\n", "\t\t\t", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"cr", "/.", 
           RowBox[{"\"\<Root\>\"", "\[Rule]", "r"}]}], ",", " ", 
          RowBox[{"_", "\[Rule]", "None"}]}], "}"}]}]}]}], ";", "\n", "\t\t", 
     
     RowBox[{"vs", "=", "\n", "\t\t\t", 
      RowBox[{"Normal", "@", 
       RowBox[{
        RowBox[{"DeleteCases", "[", "None", "]"}], "@", "\n", "\t\t\t\t", 
        RowBox[{"AssociationMap", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{
             RowBox[{"#", "[", "\"\<Type\>\"", "]"}], ",", " ", "cr"}], "]"}],
            "&"}], ",", " ", "\n", "\t\t\t\t\t", 
          RowBox[{"VertexList", "@", "g"}]}], "\n", "\t\t\t\t\t", "]"}]}]}]}],
      ";", "\n", "\t\t", 
     RowBox[{"Graph", "[", "\n", "\t\t\t", 
      RowBox[{"g", ",", "\n", "\t\t\t", 
       RowBox[{"VertexStyle", "\[Rule]", "vs"}], ",", "\n", "\t\t\t", 
       RowBox[{"GraphLayout", "->", "\"\<LayeredEmbedding\>\""}], ",", "\n", 
       "\t\t\t", "ops"}], "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"6b2a27f5-0109-4457-9e6b-a11224bce883"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]XMLGraphSort\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"bb2064c8-d518-47d1-9e9e-b03b0131b34b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLGraphSort", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"x", "[", "\"\<Backend\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      "graph", ",", "\n", "\t\t\t", "vl", ",", "\n", "\t\t\t", "vo"}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"graph", "=", 
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"vl", "=", 
      RowBox[{"VertexList", "@", "graph"}]}], ";", "\n", "\t\t", 
     RowBox[{"vo", "=", 
      RowBox[{"Ordering", "@", 
       RowBox[{"GraphDistance", "[", 
        RowBox[{"graph", ",", " ", "\"\<Root\>\""}], "]"}]}]}], ";", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"a", "[", "\"\<Graph\>\"", "]"}], "=", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"VertexList", "[", "a", "]"}], "[", 
         RowBox[{"[", "vo", "]"}], "]"}], ",", " ", 
        RowBox[{"EdgeList", "[", "a", "]"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MutableGraphQ", "@", "x"}], ",", " ", "x", ",", " ", 
       RowBox[{"XMLGraph", "[", "a", "]"}]}], "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"b86f5306-a58d-4813-a36b-055fced6b260"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Conversion API\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"d347c7c0-7c3d-4a29-8fdc-7d6e78f59c28"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FromXMLAssociation\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"237a452f-9354-434f-bd7e-0158aedfe6e0"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]fromAssoc\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"cb2f683f-436f-43a0-8833-4179ecbc1bf0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fromAssoc", "[", 
   RowBox[{"p_", ",", " ", "a_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"name", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"a", ",", " ", "\"\<Name\>\"", ",", " ", 
        RowBox[{"CreateUUID", "[", 
         RowBox[{
          RowBox[{"a", "[", "\"\<Type\>\"", "]"}], "<>", "\"\<:\>\""}], 
         "]"}]}], "]"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Sow", "@", "\n", "\t\t\t", 
      RowBox[{"Join", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"<|", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"\"\<Parent\>\"", "\[Rule]", "p"}], ",", "\n", "\t", 
          "\t\t\t\t", 
          RowBox[{"\"\<Name\>\"", "\[Rule]", "name"}]}], "\n", "\t\t\t\t\t", 
         "|>"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"MapAt", "[", 
         RowBox[{"a", ",", "\n", "\t", "\t", "\t", "\t\t", 
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{"#", ",", " ", "\n", "\t", "\t", "\t\t\t\t", 
             RowBox[{
              RowBox[{"b_Association", "?", "AssociationQ"}], ":>", "\n", 
              "\t", "\t", "\t\t\t\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"ba", "=", 
                  RowBox[{"fromAssoc", "[", 
                   RowBox[{"name", ",", " ", "b"}], "]"}]}], "}"}], ",", "\n",
                 "\t", "\t", "\t\t\t\t\t\t", 
                RowBox[{"Node", "[", 
                 RowBox[{"ba", "[", "\"\<Name\>\"", "]"}], "]"}]}], "\n", 
               "\t", "\t", "\t\t\t\t\t\t", "]"}]}]}], "\n", "\t", "\t", 
            "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t", "\t", "\t\t\t", 
          "\"\<Children\>\""}], "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t",
        "]"}]}], ";"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8c083653-08a7-4bb9-9624-9692ddbb4b9b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FromXMLAssociation\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"40b833b5-9a66-4e9e-85ae-2e59624fadaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FromXMLAssociation", "[", "a_Association", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"data", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Reap", "[", 
          RowBox[{"fromAssoc", "[", 
           RowBox[{"\"\<Root\>\"", ",", " ", "a"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"ConstructXMLGraph", "@", "\n", "\t\t\t", 
     RowBox[{"<|", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"\"\<Data\>\"", "\[Rule]", 
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"data", ",", " ", "\"\<Name\>\""}], "]"}], ",", " ", 
          "data"}], "]"}]}], ",", "\n", "\t\t\t\t", 
       RowBox[{"\"\<Graph\>\"", "\[Rule]", 
        RowBox[{"Thread", "[", 
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{
           RowBox[{"Lookup", "[", 
            RowBox[{"data", ",", " ", "\"\<Parent\>\""}], "]"}], ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"data", ",", " ", "\"\<Name\>\""}], "]"}]}], "]"}], 
         "]"}]}]}], "\n", "\t\t\t\t", "|>"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"72369a88-2107-49a5-86cc-4f43c25676a8"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ToXMLAssociation\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"f4e90f05-9d37-46f0-bb8f-ec958bd5b34e"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]BFS\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"93390014-2133-4b33-b537-47d1ceca9659"],

Cell["\<\
\[LeftCeiling]
\tI think a recursive algorithm will actually perform better
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"df4dd0b2-d897-4e66-b2b5-3d1530b79403"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"insertAssociationVertex", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"d_", ",", " ", "a_", ",", " ", "p_"}], "]"}], "]"}], "[", 
    RowBox[{"node_", ",", " ", "parent_", ",", " ", "depth_"}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"(", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "node", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "[", "parent", "]"}], ",", " ", "parent"}], "}"}]}], ";",
      "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "[", "node", "]"}], ",", " ", "node"}], "}"}]}]}], 
       "]"}], "=", 
      RowBox[{"d", "[", "a", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{"p", "[", "node", "]"}], "}"}]}]}], "]"}], "="}]}], "\n", 
    "\t\t", ")"}]}], 
  "*)"}]], "CodeInput",ExpressionUUID->"672d3279-9eeb-4550-b298-9e17e4f6ff7c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ToXMLAssociation", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"p", "=", 
        RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"d", "=", 
        RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"r", "=", 
        RowBox[{"RootNode", "[", "x", "]"}]}]}], "\n", "\t\t\t", "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", "r", "]"}], "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t\t", 
      RowBox[{"BreadthFirstScan", "[", 
       RowBox[{
        RowBox[{"x", "[", "\"\<Graph\>\"", "]"}], ",", "\n", "\t\t\t", "r", 
        ",", "\n", "\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{"\"\<DiscoverVertex\>\"", "->", "\n", "\t\t\t\t\t", 
          RowBox[{"insertAssociationVertex", "[", 
           RowBox[{"Hold", "[", 
            RowBox[{"d", ",", " ", "a", ",", " ", "p"}], "]"}], "]"}]}], "\n",
          "\t\t\t\t", "}"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
      "a"}]}], "\n", "\t\t", "]"}]}], 
  "*)"}]], "CodeInput",ExpressionUUID->"91a348ee-c9c0-49a6-adfe-73e1bd1c0235"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Recursive\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1062c08d-401c-44db-8815-4570823b6847"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toXMLAssociationRec", "[", 
    RowBox[{"d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"MapAt", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{
         RowBox[{"Node", "[", "s_", "]"}], ":>", 
         RowBox[{"toXMLAssociationRec", "[", 
          RowBox[{"d", ",", " ", "s"}], "]"}]}], ",", " ", "1"}], "]"}], 
      "&"}], ",", "\n", "\t\t", 
     RowBox[{"d", "[", "n", "]"}], ",", "\n", "\t\t", "\"\<Children\>\""}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"toXMLAssociationRec", "~", "SetAttributes", "~", 
  "HoldFirst"}]}], \
"CodeInput",ExpressionUUID->"c8fbdef5-fea3-4ad8-917f-2700317584f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToXMLAssociation", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"r", "=", 
       RowBox[{"RootNode", "[", "x", "]"}]}]}], "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{"toXMLAssociationRec", "[", 
     RowBox[{"d", ",", " ", "r"}], "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4108d398-8fee-4eb9-b210-3ee753f66d1b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FromXMLObject\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"da145b86-7024-4067-8f0c-5ada82a3fc2f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLObject", "[", "s_String", "]"}], ":=", "\n", "\t", 
   RowBox[{"FromXMLObject", "@", "\n", "\t\t", 
    RowBox[{"Quiet", "@", 
     RowBox[{"Check", "[", 
      RowBox[{
       RowBox[{"ImportString", "[", 
        RowBox[{"s", ",", " ", "\"\<XML\>\""}], "]"}], ",", " ", 
       RowBox[{"ImportString", "[", 
        RowBox[{"s", ",", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<HTML\>\"", ",", " ", "\"\<XMLObject\>\""}], "}"}]}], 
        "]"}]}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FromXMLObject", "[", 
    RowBox[{
     RowBox[{"XMLObject", "[", "_", "]"}], "[", 
     RowBox[{"_", ",", " ", "d_", ",", " ", "_"}], "]"}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"FromXMLObject", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"FromXMLObject", "[", "x_XMLElement", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"nodes", "=", 
       RowBox[{"CreateNode", "[", 
        RowBox[{"\"\<Root\>\"", "\[Rule]", "x"}], "]"}]}], ",", "\n", 
      "\t\t\t", "edges", ",", "\n", "\t\t\t", "graph", ",", "\n", "\t\t\t", 
      "data"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"nodes", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"nodes", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"data", "=", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"Lookup", "[", 
         RowBox[{"nodes", ",", " ", "\"\<Name\>\""}], "]"}], ",", " ", 
        "nodes"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"edges", "=", "\n", "\t\t\t", 
      RowBox[{"Thread", "@", "\n", "\t\t\t\t", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{"nodes", ",", " ", "\"\<Parent\>\""}], "]"}], ",", " ", 
         RowBox[{"Lookup", "[", 
          RowBox[{"nodes", ",", " ", "\"\<Name\>\""}], "]"}]}], "]"}]}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"graph", "=", 
      RowBox[{"TreeGraph", "[", "edges", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"ConstructXMLGraph", "@", "\n", "\t\t\t", 
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Graph\>\"", "\[Rule]", "graph"}], ",", "\n", "\t\t\t\t", 
        
        RowBox[{"\"\<Data\>\"", "\[Rule]", "data"}]}], "\n", "\t\t\t\t", 
       "|>"}]}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"692f5bff-182e-4f1d-9cb7-13eebaf16c90"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ToXMLObject\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"30ba4923-d27c-4e15-93d2-d9ff7ee0a16b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toXMLElementRec", "[", 
    RowBox[{"d_", ",", " ", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", "=", 
       RowBox[{"d", "[", "n", "]"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"XMLElement", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"a", "[", "\"\<Type\>\"", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"a", "[", "\"\<Meta\>\"", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"a", "[", "\"\<Children\>\"", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Node", "[", "s_", "]"}], ":>", 
          RowBox[{"toXMLElementRec", "[", 
           RowBox[{"d", ",", " ", "s"}], "]"}]}], ",", " ", "1"}], "]"}]}], 
      "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"toXMLElementRec", "~", "SetAttributes", "~", 
  "HoldFirst"}]}], \
"CodeInput",ExpressionUUID->"08bc9c6e-ab6e-4187-a164-74924160792d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToXMLObject", "[", "x_XMLGraph", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"x", "[", "\"\<Data\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"r", "=", 
       RowBox[{"RootNode", "[", "x", "]"}]}]}], "\n", "\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{"toXMLElementRec", "[", 
     RowBox[{"d", ",", " ", "r"}], "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"5c0c5bae-4ba8-44d0-bc9a-47ae2d0c7998"]
}, Closed]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"62a819e5-936f-4d32-9156-\
8a7af6518a86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"acc9d489-f0b1-47cd-a8c0-\
e469063eb3cc"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"4beedad2-ba75-4bf0-b3ff-\
dc6eca6b6029"],

Cell[BoxData[
 RowBox[{"Remove", "[", "\"\<XMLGraph`*`*\>\"", "]"}]], "Input",
 CellLabel->
  "In[153]:=",ExpressionUUID->"302a191d-18fe-4ca1-915f-878970676795"],

Cell[BoxData[
 RowBox[{"<<", "XMLGraph`"}]], "Input",
 CellLabel->"In[92]:=",ExpressionUUID->"89d01cc7-3ca8-4123-b89e-9f5ee60ce202"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"XMLGraph", "[", 
   RowBox[{"{", "}"}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"f0d96a82-e43e-4b17-9294-5f7ea3a540a3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["XMLGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Root: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Nodes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Root: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Nodes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  XMLGraph`XMLGraph[
   Association[
   "Version" -> 1, "Graph" -> Graph[{"Root"}, {}], "Data" -> Association[]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[2]=",ExpressionUUID->"52770f39-1eee-40bb-b946-df2e110ae1c1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://developer.github.com/apps/building-oauth-apps/understanding-\
scopes-for-oauth-apps/#available-scopes\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<HTML\>\"", ",", " ", "\"\<XMLObject\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"566da8a8-9290-4d6d-81a0-496855eac5e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"blech", "=", 
   RowBox[{"XMLGraph", "@", "test"}]}], ";"}]], "Input",
 CellLabel->
  "In[136]:=",ExpressionUUID->"42979413-7510-45ba-954d-bfde3ae2dbfc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"blech", "@", 
    RowBox[{"\"\<Children\>\"", "[", 
     RowBox[{"blech", "@", 
      RowBox[{"\"\<Select\>\"", "[", "\"\<td\>\"", "]"}]}], "]"}]}], "//", 
   "RepeatedTiming"}], "//", "First"}]], "Input",
 CellLabel->
  "In[121]:=",ExpressionUUID->"6c63d4aa-a53d-4cfe-9641-35a2b7318b53"],

Cell[BoxData["0.0005093256302521009`2."], "Output",
 CellLabel->"Out[121]=",ExpressionUUID->"21fe1e6c-acb6-41f0-abd0-fa7ed1eaffa8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"test", ",", " ", 
     RowBox[{
      RowBox[{"XMLElement", "[", 
       RowBox[{"\"\<td\>\"", ",", " ", "d_", ",", " ", "n_"}], "]"}], 
      "\[RuleDelayed]", "n"}], ",", " ", "\[Infinity]"}], "]"}], "//", 
   "RepeatedTiming"}], "//", "First"}]], "Input",
 CellLabel->
  "In[123]:=",ExpressionUUID->"171f149b-616b-4752-af7e-31115802ca53"],

Cell[BoxData["0.0001615535947712418`2."], "Output",
 CellLabel->"Out[123]=",ExpressionUUID->"c19cd9de-80fd-4862-aa00-a333144dd0a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tableNode", "=", 
  RowBox[{"First", "@", 
   RowBox[{"blech", "@", 
    RowBox[{"\"\<Select\>\"", "[", 
     RowBox[{"\"\<table\>\"", ",", " ", "1"}], "]"}]}]}]}]], "Input",
 CellLabel->
  "In[144]:=",ExpressionUUID->"79024191-7095-463d-a35d-4b28a2a715ed"],

Cell[BoxData["\<\"table:d197c128-e3b3-4895-acde-bba715366beb\"\>"], "Output",
 CellLabel->"Out[144]=",ExpressionUUID->"46b639bc-0c8b-4ff4-bcd1-41c1edb53a3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"blech", "@", 
   RowBox[{"\"\<Subgraph\>\"", "[", "tableNode", "]"}]}], "//", 
  "Rasterize"}]], "Input",
 CellLabel->
  "In[146]:=",ExpressionUUID->"5ecd6be4-5f5c-4e12-ad0d-108912821244"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
r1D/AwZNOtE=
    "], {{0, 45}, {150, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150, 45},
  PlotRange->{{0, 150}, {0, 45}}]], "Output",
 CellLabel->"Out[146]=",ExpressionUUID->"adebfaaf-ca0b-4e90-9758-ce7410ec1cf5"]
}, Open  ]]
},
WindowSize->{808, 755},
WindowMargins->{{58, Automatic}, {Automatic, 10}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]

