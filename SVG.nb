Notebook[{

Cell[CellGroupData[{
Cell["SVG Exporter", \
"CodeSection",ExpressionUUID->"3bb1128e-9a5e-489f-8a55-bcc024fcf01b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<SVG`\>\"", "]"}], ";"}]], "InputSection",
 CellLabel->"In[61]:=",ExpressionUUID->"5f4a54db-ee82-4950-a14a-bd2cf86f546a"],

Cell["\<\
\[LeftCeiling]
\tSimple SVG primitive support
\[RightFloor]\
\>", "Text",
 Evaluatable->True,
 CellLabel->"In[62]:=",ExpressionUUID->"b9e366b5-f37b-4133-abde-fa94f5e3c89a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToSVG", "::", "usage"}], "=", "\n", "\t", 
  "\"\<Export to an SVG XMLObject\>\""}]], \
"CodeInput",ExpressionUUID->"00373aa6-993e-4987-85cc-1e406c567f73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<SVG`Package`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"8919a578-50d4-47de-9e42-\
ce2f3b7a1544"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"toXML", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Turns svgElement structures into XML\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"7498b6da-f625-4cff-bdfb-2c56f36c836b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"toEl", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Turns aliases and standard SVG into svgElement data\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"fe536d3c-44cc-4cd5-a90d-34fac26a5b95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"register", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Registers a new transformable SVG element\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alias", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Registers a new alias for toplevel elements in terms of SVG \
elements\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"ecb1d7d5-d86f-4203-8b5f-706bc19eec44"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CSSGenerate", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Copped from BTools. Just there to support style elements\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"c52ff99a-cf74-4240-bdde-a32fbb30da31"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"prepareSVGGraphics", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getViewBox", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getPlotRange", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getImSize", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getAspRat", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getPlotRangePad", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"axesAndFrame", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toSVGCore", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"exportGraphics", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"canonicalizeDirectives", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"splitGraphicsList", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"67c83411-aa1e-491d-bb40-03be3ecb7c48"]\

}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"7ea50f08-13f5-4d70-8cca-\
a7dc98e13e01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "InputSection",
 CellLabel->"In[63]:=",ExpressionUUID->"dfab3ef6-67c6-4736-bd6c-189c211902ff"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CSSGenerate\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.733027747343328*^9, 
  3.7330277487754803`*^9}},ExpressionUUID->"24f5c81e-8949-4fc0-b514-\
fdae8d404cb4"],

Cell["\<\
\[LeftCeiling]
\tUsed for styling things
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"579b147a-6fb8-4c7f-899f-9afb4edc56d8"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]AllowedProperties\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7330291688658257`*^9, 3.7330291903133183`*^9}, {
  3.733029264250448*^9, 
  3.733029267751775*^9}},ExpressionUUID->"2c1a1944-2641-45f5-824d-\
b1bd996e1609"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$CSSDefaultAllowedProperties", "=", "\n", "\t", 
   RowBox[{"Alternatives", "@@", "\n", "\t\t", 
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "\"\<align-content\>\"", ",", "\"\<align-items\>\"", ",", 
      "\"\<align-self\>\"", ",", "\n", "\t", "\t", "\t", "\"\<all\>\"", ",", 
      "\"\<animation\>\"", ",", "\"\<animation-delay\>\"", ",", "\n", "\t", 
      "\t", "\t", "\"\<animation-direction\>\"", ",", 
      "\"\<animation-duration\>\"", ",", "\"\<animation-fill-mode\>\"", ",", 
      "\n", "\t", "\t", "\t", "\"\<animation-iteration-count\>\"", ",", 
      "\"\<animation-name\>\"", ",", "\"\<animation-play-state\>\"", ",", 
      "\n", "\t", "\t", "\t", "\"\<animation-timing-function\>\"", ",", 
      "\"\<backface-visibility\>\"", ",", "\"\<background\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<background-attachment\>\"", ",", 
      "\"\<background-blend-mode\>\"", ",", "\"\<background-clip\>\"", ",", 
      "\n", "\t", "\t", "\t", "\"\<background-color\>\"", ",", 
      "\"\<background-image\>\"", ",", "\"\<background-origin\>\"", ",", "\n",
       "\t", "\t", "\t", "\"\<background-position\>\"", ",", 
      "\"\<background-repeat\>\"", ",", "\"\<background-size\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<border\>\"", ",", "\"\<border-bottom\>\"", ",", 
      "\"\<border-bottom-color\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-bottom-left-radius\>\"", ",", 
      "\"\<border-bottom-right-radius\>\"", ",", 
      "\"\<border-bottom-style\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-bottom-width\>\"", ",", "\"\<border-collapse\>\"", ",", 
      "\"\<border-color\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-image\>\"", ",", "\"\<border-image-outset\>\"", ",", 
      "\"\<border-image-repeat\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-image-slice\>\"", ",", "\"\<border-image-source\>\"", ",", 
      "\"\<border-image-width\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-left\>\"", ",", "\"\<border-left-color\>\"", ",", 
      "\"\<border-left-style\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-left-width\>\"", ",", "\"\<border-radius\>\"", ",", 
      "\"\<border-right\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-right-color\>\"", ",", "\"\<border-right-style\>\"", ",", 
      "\"\<border-right-width\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-spacing\>\"", ",", "\"\<border-style\>\"", ",", 
      "\"\<border-top\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-top-color\>\"", ",", "\"\<border-top-left-radius\>\"", ",", 
      "\"\<border-top-right-radius\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-top-style\>\"", ",", "\"\<border-top-width\>\"", ",", 
      "\"\<border-width\>\"", ",", "\n", "\t", "\t", "\t", "\"\<bottom\>\"", 
      ",", "\"\<box-shadow\>\"", ",", "\"\<box-sizing\>\"", ",", "\n", "\t", 
      "\t", "\t", "\"\<caption-side\>\"", ",", "\"\<clear\>\"", ",", 
      "\"\<clip\>\"", ",", "\n", "\t", "\t", "\t", "\"\<color\>\"", ",", 
      "\"\<column-count\>\"", ",", "\"\<column-fill\>\"", ",", "\n", "\t", 
      "\t", "\t", "\"\<column-gap\>\"", ",", "\"\<column-rule\>\"", ",", 
      "\"\<column-rule-color\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<column-rule-style\>\"", ",", "\"\<column-rule-width\>\"", ",", 
      "\"\<column-span\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<column-width\>\"", ",", "\"\<columns\>\"", ",", "\"\<content\>\"", 
      ",", "\n", "\t", "\t", "\t", "\"\<counter-increment\>\"", ",", 
      "\"\<counter-reset\>\"", ",", "\"\<cursor\>\"", ",", "\n", "\t", "\t", 
      "\t", "\"\<direction\>\"", ",", "\"\<display\>\"", ",", 
      "\"\<empty-cells\>\"", ",", "\n", "\t", "\t", "\t", "\"\<filter\>\"", 
      ",", "\"\<flex\>\"", ",", "\"\<flex-basis\>\"", ",", "\n", "\t", "\t", 
      "\t", "\"\<flex-direction\>\"", ",", "\"\<flex-flow\>\"", ",", 
      "\"\<flex-grow\>\"", ",", "\n", "\t", "\t", "\t", "\"\<flex-shrink\>\"",
       ",", "\"\<flex-wrap\>\"", ",", "\"\<float\>\"", ",", "\n", "\t", "\t", 
      "\t", "\"\<font\>\"", ",", "\"\<@font-face\>\"", ",", 
      "\"\<font-family\>\"", ",", "\n", "\t", "\t", "\t", "\"\<font-size\>\"",
       ",", "\"\<font-size-adjust\>\"", ",", "\"\<font-stretch\>\"", ",", 
      "\n", "\t", "\t", "\t", "\"\<font-style\>\"", ",", 
      "\"\<font-variant\>\"", ",", "\"\<font-weight\>\"", ",", "\n", "\t", 
      "\t", "\t", "\"\<hanging-punctuation\>\"", ",", "\"\<height\>\"", ",", 
      "\"\<justify-content\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<@keyframes\>\"", ",", "\"\<left\>\"", ",", 
      "\"\<letter-spacing\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<line-height\>\"", ",", "\"\<list-style\>\"", ",", 
      "\"\<list-style-image\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<list-style-position\>\"", ",", "\"\<list-style-type\>\"", ",", 
      "\"\<margin\>\"", ",", "\n", "\t", "\t", "\t", "\"\<margin-bottom\>\"", 
      ",", "\"\<margin-left\>\"", ",", "\"\<margin-right\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<margin-top\>\"", ",", "\"\<max-height\>\"", ",", 
      "\"\<max-width\>\"", ",", "\n", "\t", "\t", "\t", "\"\<@media\>\"", 
      ",", "\"\<min-height\>\"", ",", "\"\<min-width\>\"", ",", "\n", "\t", 
      "\t", "\t", "\"\<nav-down\>\"", ",", "\"\<nav-index\>\"", ",", 
      "\"\<nav-left\>\"", ",", "\n", "\t", "\t", "\t", "\"\<nav-right\>\"", 
      ",", "\"\<nav-up\>\"", ",", "\"\<opacity\>\"", ",", "\n", "\t", "\t", 
      "\t", "\"\<order\>\"", ",", "\"\<outline\>\"", ",", 
      "\"\<outline-color\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<outline-offset\>\"", ",", "\"\<outline-style\>\"", ",", 
      "\"\<outline-width\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<overflow\>\"", ",", "\"\<overflow-x\>\"", ",", 
      "\"\<overflow-y\>\"", ",", "\n", "\t", "\t", "\t", "\"\<padding\>\"", 
      ",", "\"\<padding-bottom\>\"", ",", "\"\<padding-left\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<padding-right\>\"", ",", "\"\<padding-top\>\"", 
      ",", "\"\<page-break-after\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<page-break-before\>\"", ",", "\"\<page-break-inside\>\"", ",", 
      "\"\<perspective\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<perspective-origin\>\"", ",", "\"\<position\>\"", ",", 
      "\"\<quotes\>\"", ",", "\n", "\t", "\t", "\t", "\"\<resize\>\"", ",", 
      "\"\<right\>\"", ",", "\"\<tab-size\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<table-layout\>\"", ",", "\"\<text-align\>\"", ",", 
      "\"\<text-align-last\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<text-decoration\>\"", ",", "\"\<text-decoration-color\>\"", ",", 
      "\"\<text-decoration-line\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<text-decoration-style\>\"", ",", "\"\<text-indent\>\"", ",", 
      "\"\<text-justify\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<text-overflow\>\"", ",", "\"\<text-shadow\>\"", ",", 
      "\"\<text-transform\>\"", ",", "\n", "\t", "\t", "\t", "\"\<top\>\"", 
      ",", "\"\<transform\>\"", ",", "\"\<transform-origin\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<transform-style\>\"", ",", "\"\<transition\>\"", 
      ",", "\"\<transition-delay\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<transition-duration\>\"", ",", "\"\<transition-property\>\"", ",", 
      "\"\<transition-timing-function\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<unicode-bidi\>\"", ",", "\"\<user-select\>\"", ",", 
      "\"\<vertical-align\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<visibility\>\"", ",", "\"\<white-space\>\"", ",", "\"\<width\>\"", 
      ",", "\n", "\t", "\t", "\t", "\"\<word-break\>\"", ",", 
      "\"\<word-spacing\>\"", ",", "\"\<word-wrap\>\"", ",", "\n", "\t", "\t",
       "\t", "\"\<z-index\>\"", ",", "\"\<color\>\"", ",", "\"\<opacity\>\"", 
      ",", "\n", "\t", "\t", "\t", "\"\<background\>\"", ",", 
      "\"\<background-attachment\>\"", ",", "\"\<background-blend-mode\>\"", 
      ",", "\n", "\t", "\t", "\t", "\"\<background-color\>\"", ",", 
      "\"\<background-image\>\"", ",", "\"\<background-position\>\"", ",", 
      "\n", "\t", "\t", "\t", "\"\<background-repeat\>\"", ",", 
      "\"\<background-clip\>\"", ",", "\"\<background-origin\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<background-size\>\"", ",", "\"\<border\>\"", 
      ",", "\"\<border-bottom\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-bottom-color\>\"", ",", "\"\<border-bottom-left-radius\>\"",
       ",", "\"\<border-bottom-right-radius\>\"", ",", "\n", "\t", "\t", 
      "\t", "\"\<border-bottom-style\>\"", ",", "\"\<border-bottom-width\>\"",
       ",", "\"\<border-color\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-image\>\"", ",", "\"\<border-image-outset\>\"", ",", 
      "\"\<border-image-repeat\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-image-slice\>\"", ",", "\"\<border-image-source\>\"", ",", 
      "\"\<border-image-width\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-left\>\"", ",", "\"\<border-left-color\>\"", ",", 
      "\"\<border-left-style\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-left-width\>\"", ",", "\"\<border-radius\>\"", ",", 
      "\"\<border-right\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-right-color\>\"", ",", "\"\<border-right-style\>\"", ",", 
      "\"\<border-right-width\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-style\>\"", ",", "\"\<border-top\>\"", ",", 
      "\"\<border-top-color\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-top-left-radius\>\"", ",", 
      "\"\<border-top-right-radius\>\"", ",", "\"\<border-top-style\>\"", ",",
       "\n", "\t", "\t", "\t", "\"\<border-top-width\>\"", ",", 
      "\"\<border-width\>\"", ",", "\"\<box-shadow\>\"", ",", "\n", "\t", 
      "\t", "\t", "\"\<bottom\>\"", ",", "\"\<clear\>\"", ",", "\"\<clip\>\"",
       ",", "\n", "\t", "\t", "\t", "\"\<display\>\"", ",", "\"\<float\>\"", 
      ",", "\"\<height\>\"", ",", "\n", "\t", "\t", "\t", "\"\<left\>\"", 
      ",", "\"\<margin\>\"", ",", "\"\<margin-bottom\>\"", ",", "\n", "\t", 
      "\t", "\t", "\"\<margin-left\>\"", ",", "\"\<margin-right\>\"", ",", 
      "\"\<margin-top\>\"", ",", "\n", "\t", "\t", "\t", "\"\<max-height\>\"",
       ",", "\"\<max-width\>\"", ",", "\"\<min-height\>\"", ",", "\n", "\t", 
      "\t", "\t", "\"\<min-width\>\"", ",", "\"\<overflow\>\"", ",", 
      "\"\<overflow-x\>\"", ",", "\n", "\t", "\t", "\t", "\"\<overflow-y\>\"",
       ",", "\"\<padding\>\"", ",", "\"\<padding-bottom\>\"", ",", "\n", "\t",
       "\t", "\t", "\"\<padding-left\>\"", ",", "\"\<padding-right\>\"", ",", 
      "\"\<padding-top\>\"", ",", "\n", "\t", "\t", "\t", "\"\<position\>\"", 
      ",", "\"\<right\>\"", ",", "\"\<top\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<visibility\>\"", ",", "\"\<width\>\"", ",", 
      "\"\<vertical-align\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<z-index\>\"", ",", "\"\<align-content\>\"", ",", 
      "\"\<align-items\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<align-self\>\"", ",", "\"\<flex\>\"", ",", "\"\<flex-basis\>\"", 
      ",", "\n", "\t", "\t", "\t", "\"\<flex-direction\>\"", ",", 
      "\"\<flex-flow\>\"", ",", "\"\<flex-grow\>\"", ",", "\n", "\t", "\t", 
      "\t", "\"\<flex-shrink\>\"", ",", "\"\<flex-wrap\>\"", ",", 
      "\"\<justify-content\>\"", ",", "\n", "\t", "\t", "\t", "\"\<order\>\"",
       ",", "\"\<hanging-punctuation\>\"", ",", "\"\<letter-spacing\>\"", ",",
       "\n", "\t", "\t", "\t", "\"\<line-height\>\"", ",", "\"\<tab-size\>\"",
       ",", "\"\<text-align\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<text-align-last\>\"", ",", "\"\<text-indent\>\"", ",", 
      "\"\<text-justify\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<text-transform\>\"", ",", "\"\<white-space\>\"", ",", 
      "\"\<word-break\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<word-spacing\>\"", ",", "\"\<word-wrap\>\"", ",", 
      "\"\<text-decoration\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<text-decoration-color\>\"", ",", "\"\<text-decoration-line\>\"", 
      ",", "\"\<text-decoration-style\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<text-shadow\>\"", ",", "\"\<@font-face\>\"", ",", "\"\<font\>\"", 
      ",", "\n", "\t", "\t", "\t", "\"\<font-family\>\"", ",", 
      "\"\<font-size\>\"", ",", "\"\<font-size-adjust\>\"", ",", "\n", "\t", 
      "\t", "\t", "\"\<font-stretch\>\"", ",", "\"\<font-style\>\"", ",", 
      "\"\<font-variant\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<font-weight\>\"", ",", "\"\<direction\>\"", ",", 
      "\"\<unicode-bidi\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<direction\>\"", ",", "\"\<user-select\>\"", ",", 
      "\"\<border-collapse\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<border-spacing\>\"", ",", "\"\<caption-side\>\"", ",", 
      "\"\<empty-cells\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<table-layout\>\"", ",", "\"\<counter-increment\>\"", ",", 
      "\"\<counter-reset\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<list-style\>\"", ",", "\"\<list-style-image\>\"", ",", 
      "\"\<list-style-position\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<list-style-type\>\"", ",", "\"\<@keyframes\>\"", ",", 
      "\"\<animation\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<animation-delay\>\"", ",", "\"\<animation-direction\>\"", ",", 
      "\"\<animation-duration\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<animation-fill-mode\>\"", ",", "\"\<animation-iteration-count\>\"",
       ",", "\"\<animation-name\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<animation-play-state\>\"", ",", 
      "\"\<animation-timing-function\>\"", ",", "\"\<backface-visibility\>\"",
       ",", "\n", "\t", "\t", "\t", "\"\<perspective\>\"", ",", 
      "\"\<perspective-origin\>\"", ",", "\"\<transform\>\"", ",", "\n", "\t",
       "\t", "\t", "\"\<transform-origin\>\"", ",", "\"\<transform-style\>\"",
       ",", "\"\<transition\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<transition-property\>\"", ",", "\"\<transition-duration\>\"", ",", 
      "\"\<transition-timing-function\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<transition-delay\>\"", ",", "\"\<box-sizing\>\"", ",", 
      "\"\<content\>\"", ",", "\n", "\t", "\t", "\t", "\"\<cursor\>\"", ",", 
      "\"\<nav-down\>\"", ",", "\"\<nav-index\>\"", ",", "\n", "\t", "\t", 
      "\t", "\"\<nav-left\>\"", ",", "\"\<nav-right\>\"", ",", 
      "\"\<nav-up\>\"", ",", "\n", "\t", "\t", "\t", "\"\<outline\>\"", ",", 
      "\"\<outline-color\>\"", ",", "\"\<outline-offset\>\"", ",", "\n", "\t",
       "\t", "\t", "\"\<outline-style\>\"", ",", "\"\<outline-width\>\"", 
      ",", "\"\<resize\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<text-overflow\>\"", ",", "\"\<column-count\>\"", ",", 
      "\"\<column-fill\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<column-gap\>\"", ",", "\"\<column-rule\>\"", ",", 
      "\"\<column-rule-color\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<column-rule-style\>\"", ",", "\"\<column-rule-width\>\"", ",", 
      "\"\<column-span\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<column-width\>\"", ",", "\"\<columns\>\"", ",", 
      "\"\<page-break-after\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<page-break-before\>\"", ",", "\"\<page-break-inside\>\"", ",", 
      "\"\<quotes\>\"", ",", "\n", "\t", "\t", "\t", "\"\<filter\>\""}], "\n",
      "\t", "\t\t", "}"}]}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.733029174726426*^9, 3.733029182953493*^9}, {
  3.7330292686833887`*^9, 
  3.733029277278213*^9}},ExpressionUUID->"7b919bdc-76c1-4e32-bb3e-\
809205d70a99"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]AllowedTypes\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7330291688658257`*^9, 3.7330291903133183`*^9}, {
  3.733029264250448*^9, 3.733029267751775*^9}, {3.733029897601782*^9, 
  3.7330298984526377`*^9}, {3.733030034901659*^9, 
  3.733030035453197*^9}},ExpressionUUID->"7d47557d-b030-4702-8bca-\
8ef551395a24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$CSSDefaultAllowedTypes", "=", "\n", "\t", 
   RowBox[{"Alternatives", "@@", "\n", "\t\t", 
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "\"\<a\>\"", ",", "\"\<abbr\>\"", ",", "\"\<acronym\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<address\>\"", ",", "\"\<applet\>\"", ",", 
      "\"\<area\>\"", ",", "\n", "\t", "\t", "\t", "\"\<article\>\"", ",", 
      "\"\<aside\>\"", ",", "\"\<audio\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<b\>\"", ",", "\"\<base\>\"", ",", "\"\<basefont\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<bdi\>\"", ",", "\"\<bdo\>\"", ",", "\"\<big\>\"",
       ",", "\n", "\t", "\t", "\t", "\"\<blockquote\>\"", ",", "\"\<body\>\"",
       ",", "\n", "\t\t\t", "\"\<br\>\"", ",", "\"\<button\>\"", ",", 
      "\"\<buildto\>\"", ",", "\n", "\t", "\t", "\t", "\"\<canvas\>\"", ",", 
      "\"\<caption\>\"", ",", "\"\<center\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<cite\>\"", ",", "\"\<code\>\"", ",", "\"\<col\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<colgroup\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<data\>\"", ",", "\"\<datalist\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<dd\>\"", ",", "\"\<del\>\"", ",", "\"\<details\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<dfn\>\"", ",", "\"\<dialog\>\"", ",", 
      "\"\<dir\>\"", ",", "\n", "\t", "\t", "\t", "\"\<div\>\"", ",", 
      "\"\<dl\>\"", ",", "\"\<dt\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<em\>\"", ",", "\"\<embed\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<fieldset\>\"", ",", "\"\<figcaption\>\"", ",", "\"\<figure\>\"", 
      ",", "\n", "\t", "\t", "\t", "\"\<font\>\"", ",", "\"\<footer\>\"", 
      ",", "\"\<form\>\"", ",", "\n", "\t", "\t", "\t", "\"\<frame\>\"", ",", 
      "\"\<frameset\>\"", ",", "\n", "\t", "\t", "\t", "\"\<header\>\"", ",", 
      "\"\<hr\>\"", ",", "\n", "\t", "\t\t", "\"\<h1\>\"", ",", "\"\<h2\>\"", 
      ",", "\"\<h3\>\"", ",", "\n", "\t", "\t\t", "\"\<h4\>\"", ",", 
      "\"\<h5\>\"", ",", "\"\<h6\>\"", ",", "\n", "\t", "\t\t", "\"\<i\>\"", 
      ",", "\"\<iframe\>\"", ",", "\"\<img\>\"", ",", "\n", "\t", "\t\t", 
      "\"\<inputcell\>\"", ",", "\n", "\t", "\t\t", "\"\<input\>\"", ",", 
      "\"\<ins\>\"", ",", "\n", "\t", "\t", "\t", "\"\<kbd\>\"", ",", 
      "\"\<keygen\>\"", ",", "\n", "\t", "\t", "\t", "\"\<label\>\"", ",", 
      "\"\<legend\>\"", ",", "\"\<li\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<link\>\"", ",", "\n", "\t", "\t", "\t", "\"\<main\>\"", ",", 
      "\"\<map\>\"", ",", "\"\<mark\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<menu\>\"", ",", "\"\<menuitem\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<meta\>\"", ",", "\"\<meter\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<nav\>\"", ",", "\"\<noframes\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<noscript\>\"", ",", "\n", "\t", "\t", "\t", "\"\<object\>\"", ",", 
      "\"\<ol\>\"", ",", "\n", "\t", "\t", "\t", "\"\<optgroup\>\"", ",", 
      "\"\<option\>\"", ",", "\n", "\t", "\t", "\t", "\"\<output\>\"", ",", 
      "\n", "\t", "\t", "\t", "\"\<p\>\"", ",", "\"\<param\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<picture\>\"", ",", "\"\<pre\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<progress\>\"", ",", "\n", "\t", "\t\t", 
      "\"\<q\>\"", ",", "\n", "\t", "\t", "\t", "\"\<rp\>\"", ",", 
      "\"\<rt\>\"", ",", "\"\<ruby\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<s\>\"", ",", "\"\<samp\>\"", ",", "\"\<script\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<section\>\"", ",", "\"\<select\>\"", ",", 
      "\"\<small\>\"", ",", "\n", "\t", "\t", "\t", "\"\<source\>\"", ",", 
      "\"\<span\>\"", ",", "\"\<strike\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<strong\>\"", ",", "\"\<style\>\"", ",", "\"\<sub\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<summary\>\"", ",", "\"\<sup\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<table\>\"", ",", "\"\<tbody\>\"", ",", 
      "\"\<td\>\"", ",", "\n", "\t", "\t", "\t", "\"\<textarea\>\"", ",", 
      "\"\<tfoot\>\"", ",", "\"\<th\>\"", ",", "\n", "\t", "\t", "\t", 
      "\"\<thead\>\"", ",", "\"\<time\>\"", ",", "\"\<title\>\"", ",", "\n", 
      "\t", "\t", "\t", "\"\<tr\>\"", ",", "\"\<track\>\"", ",", "\"\<tt\>\"",
       ",", "\n", "\t", "\t", "\t", "\"\<u\>\"", ",", "\"\<ul\>\"", ",", "\n",
       "\t", "\t", "\t", "\"\<var\>\"", ",", "\"\<video\>\"", ",", "\n", "\t",
       "\t", "\t", "\"\<wbr\>\""}], "\n", "\t", "\t\t", "}"}]}]}], 
  ";"}]], "CodeInput",
 CellChangeTimes->{{3.7330299001025763`*^9, 3.733029914719771*^9}, {
  3.733029971203589*^9, 3.733029989665352*^9}, {3.733030031946465*^9, 
  3.733030032472371*^9}, {3.733033385995122*^9, 
  3.733033392511209*^9}},ExpressionUUID->"1f625943-69f3-4190-926a-\
2f96022f2951"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$CSSPropertyRules\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{3.73302765996661*^9, 
  3.733027905355218*^9},ExpressionUUID->"50a47a30-9a31-4770-badd-\
98cef2b998c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$CSSDefaultPropertyRules", "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"FontColor", "\[Rule]", "\"\<color\>\""}], ",", "\n", "\t\t", 
     RowBox[{"FrameStyle", "\[Rule]", "\"\<border\>\""}], ",", "\n", "\t\t", 
     RowBox[{"FrameMargins", "\[Rule]", "\"\<margin\>\""}], ",", "\n", "\t\t", 
     RowBox[{"TextAlignment", "\[Rule]", "\"\<text-align\>\""}], ",", "\n", 
     "\t\t", 
     RowBox[{"TabSpacings", "\[Rule]", "\"\<tab-size\>\""}], ",", "\n", 
     "\t\t", 
     RowBox[{"SourceLink", "\[Rule]", "\"\<src\>\""}], ",", "\n", "\t\t", 
     RowBox[{"ButtonFunction", "->", "\n", "\t\t\t", "\"\<onclick\>\""}], ",",
      "\n", "\t\t", 
     RowBox[{"Annotation", "\[Rule]", "\"\<alt\>\""}], ",", "\n", "\t\t", 
     RowBox[{"Hyperlink", "\[Rule]", "\"\<href\>\""}], ",", "\n", "\t\t", 
     RowBox[{"RoundingRadius", "\[Rule]", "\"\<border-radius\>\""}], ",", 
     "\n", "\t\t", 
     RowBox[{"LineSpacing", "\[Rule]", "\"\<line-height\>\""}], ",", "\n", 
     "\t\t", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<width\>\"", ",", "\"\<height\>\""}], "}"}]}], ",", "\n", 
     "\t\t", 
     RowBox[{"CellSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<width\>\"", ",", " ", "\"\<height\>\""}], "}"}]}], ",", 
     "\n", "\t\t", 
     RowBox[{"e_", "\[RuleDelayed]", "\n", "\t\t\t", 
      RowBox[{"(", "\n", "\t\t\t\t", 
       RowBox[{"ToLowerCase", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"StringJoin", "@", 
           RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"#", ",", "1"}], "]"}], ",", "\n", "\t", "\t", 
             "\t\t\t\t", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{"StringDrop", "[", 
                RowBox[{"#", ",", "1"}], "]"}], ",", "\n", "\t", "\t", "\t", 
               "\t\t\t\t", 
               RowBox[{
                RowBox[{"l", ":", 
                 RowBox[{"LetterCharacter", "?", 
                  RowBox[{"(", 
                   RowBox[{"Not", "@*", "LowerCaseQ"}], ")"}]}]}], ":>", 
                RowBox[{"\"\<-\>\"", "<>", "l"}]}]}], "]"}]}], "\n", "\t", 
            "\t\t\t\t\t", "}"}]}], "&"}], "@", 
         RowBox[{"ToString", "[", "e", "]"}]}], "\n", "\t\t\t\t\t", "]"}], 
       "\n", "\t\t\t\t", ")"}]}]}], "\n", "\t\t", "}"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.701742376486145*^9, 3.701742390262436*^9}, {
   3.701742542122346*^9, 3.70174254644563*^9}, {3.701742579226017*^9, 
   3.701742763243984*^9}, {3.701743489135323*^9, 3.701743494159808*^9}, {
   3.701747750199545*^9, 3.701747757407359*^9}, {3.7017779741339703`*^9, 
   3.701777974309288*^9}, {3.701778007534182*^9, 3.7017780175553617`*^9}, {
   3.701778646899786*^9, 3.70177864982447*^9}, {3.7017790649227133`*^9, 
   3.7017790755720863`*^9}, {3.7017798427423143`*^9, 3.701779852690042*^9}, {
   3.7017824620460567`*^9, 3.7017824648262243`*^9}, {3.701782502845847*^9, 
   3.701782511425811*^9}, {3.70179470421922*^9, 3.701794742734206*^9}, {
   3.704570604225387*^9, 3.704570608451426*^9}, {3.70457064762927*^9, 
   3.7045706486213293`*^9}, 3.733027905371779*^9, {3.7330279837840433`*^9, 
   3.733027984626937*^9}, {3.7330288379143887`*^9, 3.733028851143744*^9}, {
   3.73302888733778*^9, 3.733028919030015*^9}, {3.733028956624175*^9, 
   3.733028969607233*^9}, {3.733029289401211*^9, 
   3.733029307335341*^9}},ExpressionUUID->"c277f4df-d032-4855-809b-\
4602b97e47e3"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$CSSValueRules\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{3.733027739308865*^9, 
  3.733027921911899*^9},ExpressionUUID->"28abb202-8c40-4f7f-b48d-\
a14eb759ee36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$CSSDefaultValueRules", "=", "\n", "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Map", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Replace", "[", 
         RowBox[{"#", ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Hold", "[", "c_", "]"}], ":>", "\n", "\t\t\t\t\t", 
           RowBox[{"(", 
            RowBox[{"c", "\[Rule]", 
             RowBox[{"ToLowerCase", "@", 
              RowBox[{"ToString", "[", 
               RowBox[{"Unevaluated", "[", "c", "]"}], "]"}]}]}], ")"}]}]}], 
         "\n", "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t\t\t", 
       RowBox[{"Thread", "@", 
        RowBox[{"Hold", "@", 
         RowBox[{"{", "\n", "\t\t\t\t", 
          RowBox[{
          "Red", ",", "White", ",", "Blue", ",", "Black", ",", "Yellow", ",", 
           "\n", "\t\t\t\t", "Green", ",", "Orange", ",", "Purple", ",", 
           "Pink", ",", "Gray", ",", "\n", "\t\t\t\t", "LightBlue", ",", 
           "LightRed", ",", "LightGray", ",", "LightYellow", ",", "\n", 
           "\t\t\t\t", "LightGreen", ",", "LightOrange", ",", "LightPurple", 
           ",", "LightPink", ",", "\n", "\t\t\t\t", "Thick", ",", "Dotted", 
           ",", "Thin", ",", "Dashed"}], "\n", "\t\t\t\t", "}"}]}]}]}], "]"}],
      ",", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"c_", "?", "ColorQ"}], ":>", "\n", "\t\t\t", 
        RowBox[{"\"\<#\>\"", "<>", 
         RowBox[{"Map", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"StringPadLeft", "[", "\n", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"IntegerString", "[", 
               RowBox[{"#", ",", "16"}], "]"}], ",", "\n", "\t\t\t\t\t", "2", 
              ",", "\n", "\t\t\t\t\t", "\"\<0\>\""}], "\n", "\t\t\t\t\t", 
             "]"}], "&"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"Floor", "[", 
            RowBox[{"255", "*", 
             RowBox[{"Apply", "[", 
              RowBox[{"List", ",", 
               RowBox[{"ColorConvert", "[", 
                RowBox[{"c", ",", "RGBColor"}], "]"}]}], "]"}]}], "]"}]}], 
          "\n", "\t\t\t\t", "]"}]}]}], ",", "\n", "\t\t", 
       RowBox[{"i_Integer", ":>", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<px\>\""}]}], ",", 
       "\n", "\t\t", 
       RowBox[{"q_Quantity", ":>", "\n", "\t\t\t", 
        RowBox[{"StringReplace", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"ToString", "[", "q", "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\>\""}]}], "\n", "\t\t\t\t", 
         "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Scaled", "[", "i_", "]"}], ":>", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"ToString", "@", 
          RowBox[{"Floor", "[", 
           RowBox[{"i", "*", "100"}], "]"}]}], "<>", "\"\<%\>\""}]}], ",", 
       "\n", "\t\t", 
       RowBox[{"r_Rule", ":>", "\n", "\t\t\t", 
        RowBox[{"(", 
         RowBox[{"cssGenerate", "[", "r", "]"}], ")"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "l__", "}"}], "|", 
         RowBox[{"Directive", "[", "l__", "]"}]}], "\[RuleDelayed]", "\n", 
        "\t\t\t", 
        RowBox[{"StringRiffle", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "/.", "$CSSValueRules"}], "&"}], ",", 
           RowBox[{"{", "l", "}"}]}], "]"}]}]}], ",", "\n", "\t\t", 
       RowBox[{"d_Dynamic", ":>", "\n", "\t\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Setting", "[", "d", "]"}], "/.", "$CSSValueRules"}], 
         ")"}]}], ",", "\n", "\t\t", 
       RowBox[{"i_", "\[RuleDelayed]", 
        RowBox[{"ToLowerCase", "@", 
         RowBox[{"ToString", "[", "i", "]"}]}]}]}], "\n", "\t\t", "}"}]}], 
    "\n", "\t", "]"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.70174235905682*^9, 3.7017425345349073`*^9}, {
  3.7017778433576117`*^9, 3.7017779310901613`*^9}, {3.701778050186521*^9, 
  3.7017780784270906`*^9}, {3.701778210375092*^9, 3.701778250270299*^9}, {
  3.701778403605918*^9, 3.7017784264749393`*^9}, {3.701778590922645*^9, 
  3.7017786045549583`*^9}, {3.701779618522738*^9, 3.701779639969715*^9}, {
  3.701781457484383*^9, 3.701781459979834*^9}, {3.701787025864047*^9, 
  3.70178704508114*^9}, {3.702348677302252*^9, 3.702348714911435*^9}, {
  3.7330279181098003`*^9, 3.7330279181234217`*^9}, {3.7330279669102907`*^9, 
  3.733027978091425*^9}, {3.733029843900152*^9, 
  3.73302986314715*^9}},ExpressionUUID->"db7005c1-03fb-49d2-a7e9-9651feac46e4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$CSSTypeRules\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7330277297951612`*^9, 3.7330277322573853`*^9}, 
   3.733027936089677*^9},ExpressionUUID->"00f9b9ff-5a24-4e1a-970a-\
101f36909ff4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$CSSDefaultTypeRules", "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<Title\>\"", "\[Rule]", "\"\<h1\>\""}], ",", "\n", "\t", 
     "\t", 
     RowBox[{"\"\<Subtitle\>\"", "\[Rule]", "\"\<h2\>\""}], ",", "\n", "\t", 
     "\t", 
     RowBox[{"\"\<Section\>\"", "\[Rule]", "\"\<h3\>\""}], ",", "\n", "\t", 
     "\t", 
     RowBox[{"\"\<Subsection\>\"", "\[Rule]", "\"\<h4\>\""}], ",", "\n", "\t",
      "\t", 
     RowBox[{"\"\<Subsubsection\>\"", "\[Rule]", "\"\<h5\>\""}], ",", "\n", 
     "\t", "\t", 
     RowBox[{"\"\<Subsubsubsection\>\"", "\[Rule]", "\"\<h6\>\""}], ",", "\n",
      "\t", "\t", 
     RowBox[{"\"\<Hyperlink\>\"", "\[Rule]", "\"\<a\>\""}], ",", "\n", "\t", 
     "\t", 
     RowBox[{"\"\<HyperlinkActive\>\"", "\[Rule]", "\"\<a:hover\>\""}], ",", 
     "\n", "\t", "\t", 
     RowBox[{"\"\<Graphics\>\"", "\[Rule]", "\"\<img\>\""}], ",", "\n", "\t", 
     "\t", 
     RowBox[{"\"\<Text\>\"", "\[Rule]", "\"\<p\>\""}], ",", "\n", "\t", "\t", 
     
     RowBox[{"s_String", "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{"ToLowerCase", "[", "s", "]"}], ")"}]}]}], "\n", "\t", "\t", 
    "}"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.7017495165486298`*^9, 3.7017495607749147`*^9}, {
   3.701781896320071*^9, 3.7017819041800327`*^9}, {3.7017865298120403`*^9, 
   3.701786538840781*^9}, {3.701786706801643*^9, 3.701786709589716*^9}, {
   3.706720539780176*^9, 3.7067205498410587`*^9}, 3.7330279316698437`*^9, {
   3.733027991630755*^9, 
   3.733027996151807*^9}},ExpressionUUID->"9f6a8485-b2be-4eac-b17f-\
1aa178c50f2e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]cssThreadedOptions\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.733027724981748*^9},ExpressionUUID->"53ae5516-879b-41fe-a61a-\
efb9fac81d52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssThreadedOptions", "[", 
   RowBox[{"propBase_", ",", "propOps_", ",", "vals_"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"MapThread", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MatchQ", "[", 
         RowBox[{"#2", ",", 
          RowBox[{"Inherited", "|", "None"}]}], "]"}]}], ",", "\n", "\t\t\t", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringContainsQ", "[", 
          RowBox[{"propBase", ",", "\"\<-\>\""}], "]"}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"propBase", ",", 
            RowBox[{"{", "\n", "\t\t\t\t\t", 
             RowBox[{"\"\<-\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"\"\<-\>\"", "<>", "#", "<>", "\"\<-\>\""}], ")"}]}], 
             "\n", "\t\t\t\t\t", "}"}]}], "]"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"#2", "/.", "$CSSValueRules"}], ")"}]}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{"propBase", ",", 
            RowBox[{"\"\<-\>\"", "<>", "#"}]}], "]"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"#2", "/.", "$CSSValueRules"}], ")"}]}]}], "\n", 
        "\t\t\t\t", "]"}], ",", "\n", "\t\t\t", "Nothing"}], "\n", "\t\t\t", 
      "]"}], "&"}], ",", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{"propOps", ",", "\n", "\t\t", "vals"}], "\n", "\t\t", "}"}]}], 
   "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.7017769364278183`*^9, 3.701777003676669*^9}, {
  3.7017772335524397`*^9, 3.7017772357767477`*^9}, {3.701777488214386*^9, 
  3.701777492557832*^9}, {3.7017860505563087`*^9, 3.701786056345842*^9}, {
  3.7330279181286173`*^9, 
  3.7330279181339197`*^9}},ExpressionUUID->"663866fb-5434-4f47-b601-\
5993ba58e82f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]cssGenerate\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.733027700697241*^9, 
  3.7330277182878323`*^9}},ExpressionUUID->"9df6a114-ff17-4f07-9856-\
8b84c5fcc37d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssGenerate", "//", "Clear"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cssGenerate", "[", "\n", "\t", 
    RowBox[{"prop_", "\[Rule]", 
     RowBox[{"val", ":", 
      RowBox[{"Except", "[", 
       RowBox[{"{", "__Rule", "}"}], "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"propBase", "=", "\n", "\t\t\t", 
       RowBox[{"prop", "/.", "$CSSPropertyRules"}]}], "\n", "\t\t", "}"}], 
     ",", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MatchQ", "[", 
         RowBox[{"propBase", ",", " ", "$CSSAllowedProperties"}], "]"}]}], 
       ",", "\n", "\t\t\t", "Nothing", ",", "\n", "\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"ListQ", "@", "propBase"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Sequence", "@@", "\n", "\t\t\t\t\t\t", 
          RowBox[{"Replace", "[", 
           RowBox[{"val", ",", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"l_", ",", "r_"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"b_", ",", "h_"}], "}"}]}], "}"}], ":>", "\n", "\t",
                "\t", "\t", "\t\t\t\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"StringContainsQ", "[", 
                  RowBox[{"propBase", ",", "\"\<radius\>\""}], "]"}], ",", 
                 "\n", "\t", "\t", "\t", "\t\t\t\t\t\t\t", 
                 RowBox[{
                 "cssThreadedOptions", "[", "\n", "\t", "\t", "\t", 
                  "\t\t\t\t\t\t\t\t", 
                  RowBox[{
                  "propBase", ",", "\n", "\t", "\t", "\t", "\t", 
                   "\t\t\t\t\t\t\t", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<left-bottom\>\"", ",", "\"\<right-bottom\>\"", ",", 
                    "\"\<left-top\>\"", ",", "\"\<right-top\>\""}], "}"}], 
                   ",", "\n", "\t", "\t", "\t", "\t", "\t", "\t", 
                   "\t\t\t\t\t", 
                   RowBox[{"{", 
                    RowBox[{"l", ",", "r", ",", "b", ",", "h"}], "}"}]}], 
                  "\n", "\t", "\t", "\t", "\t\t\t\t\t\t\t\t", "]"}], ",", 
                 "\n", "\t", "\t", "\t", "\t\t\t\t\t\t\t", 
                 RowBox[{
                 "cssThreadedOptions", "[", "\n", "\t", "\t", "\t", 
                  "\t\t\t\t\t\t\t\t", 
                  RowBox[{
                  "propBase", ",", "\n", "\t", "\t", "\t", "\t", 
                   "\t\t\t\t\t\t\t", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<left\>\"", ",", "\"\<right\>\"", ",", 
                    "\"\<bottom\>\"", ",", "\"\<top\>\""}], "}"}], ",", "\n", 
                   "\t", "\t", "\t", "\t", "\t", "\t", "\t\t\t\t\t", 
                   RowBox[{"{", 
                    RowBox[{"l", ",", "r", ",", "b", ",", "h"}], "}"}]}], 
                  "\n", "\t", "\t", "\t", "\t\t\t\t\t\t\t\t", "]"}]}], "\n", 
                "\t", "\t", "\t", "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t", 
              "\t", "\t", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"l_", ",", "r_"}], "}"}], ":>", "\n", "\t", "\t", 
               "\t", "\t\t\t\t\t\t", 
               RowBox[{
               "cssThreadedOptions", "[", "\n", "\t", "\t", "\t", 
                "\t\t\t\t\t\t\t", 
                RowBox[{
                "propBase", ",", "\n", "\t", "\t", "\t", "\t\t\t\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{"\"\<left\>\"", ",", "\"\<right\>\""}], "}"}], ",", 
                 "\n", "\t", "\t", "\t", "\t\t\t\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{"l", ",", "r"}], "}"}]}], "\n", "\t", "\t", "\t", 
                "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t", "\t", "\t", 
              "\t\t\t\t\t", 
              RowBox[{"v_", ":>", "\n", "\t", "\t", "\t", "\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"propBase", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{"v", "/.", "$CSSValueRules"}], ")"}]}], "}"}]}]}], 
             "\n", "\t\t\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t\t\t", 
           "]"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "@", "val"}], ",", "\n", "\t", "\t\t\t\t", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"cssGenerate", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{"propBase", "\[Rule]", "val"}], "]"}], "]"}]}], ",", 
           "\n", "\t\t\t\t\t", 
           RowBox[{"cssGenerate", "[", 
            RowBox[{
             RowBox[{"First", "@", "propBase"}], "\[Rule]", "val"}], "]"}]}], 
          "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", 
      "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cssGenerate", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"type", ":", 
      RowBox[{"_String", "|", "_Symbol"}]}], "->", 
     RowBox[{"spec", ":", 
      RowBox[{"{", "__Rule", "}"}]}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tp", "=", 
       RowBox[{
        RowBox[{"ToString", "[", "type", "]"}], "/.", "$CSSTypeRules"}]}], 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MatchQ", "[", 
         RowBox[{"tp", ",", " ", "$CSSAllowedProperties"}], "]"}]}], ",", 
       "\n", "\t\t\t", "Nothing", ",", "\n", "\t\t\t", 
       RowBox[{"tp", "\[Rule]", 
        RowBox[{"Map", "[", 
         RowBox[{"cssGenerate", ",", " ", "spec"}], "]"}]}]}], "\n", "\t\t\t",
       "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cssGenerate", "[", 
    RowBox[{"r", ":", 
     RowBox[{"{", "__Rule", "}"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"cssGenerate", "/@", "r"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cssGenerate", "[", "a_Association", "]"}], ":=", "\n", "\t", 
   RowBox[{"KeyValueMap", "[", 
    RowBox[{"cssGenerate", ",", "a"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cssGenerate", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"Optional", "[", 
      RowBox[{"_", ",", "_"}], "]"}]}], "]"}], ":=", 
   RowBox[{"{", "}"}]}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.701741625510021*^9, 3.701741627028345*^9}, {
   3.701741705948105*^9, 3.701741708589278*^9}, {3.701741763622472*^9, 
   3.701741900150556*^9}, {3.701741940014846*^9, 3.701741984736967*^9}, {
   3.7017420242368593`*^9, 3.701742104433015*^9}, {3.70174221673208*^9, 
   3.7017422449650793`*^9}, {3.701742281366375*^9, 3.7017423829610767`*^9}, {
   3.701742781263833*^9, 3.701742803204671*^9}, {3.701743515444727*^9, 
   3.7017435784361897`*^9}, {3.701744589694929*^9, 3.701744602685816*^9}, {
   3.7017495654176617`*^9, 3.7017495696395807`*^9}, {3.701749660869115*^9, 
   3.70174967390064*^9}, 3.7017497658161592`*^9, {3.701749888616754*^9, 
   3.701749897561047*^9}, {3.701750015413636*^9, 3.701750020686413*^9}, {
   3.7017500607020473`*^9, 3.701750083195094*^9}, {3.7017501459243717`*^9, 
   3.701750163350892*^9}, {3.701750204964576*^9, 3.701750214701816*^9}, {
   3.701750380631542*^9, 3.701750381128127*^9}, {3.701750419800441*^9, 
   3.701750426840554*^9}, {3.701750470623146*^9, 3.701750480413599*^9}, 
   3.701750599414249*^9, {3.7017762482344303`*^9, 3.701776287630517*^9}, {
   3.7017763232671547`*^9, 3.7017763338156*^9}, {3.701776688190473*^9, 
   3.701776935244144*^9}, {3.701776985590233*^9, 3.701777035012838*^9}, {
   3.701777083771212*^9, 3.70177718299815*^9}, {3.7017772401720123`*^9, 
   3.701777248082369*^9}, {3.701777373195477*^9, 3.701777468625947*^9}, {
   3.7017775833046293`*^9, 3.701777587586152*^9}, {3.701777622664774*^9, 
   3.7017776272409277`*^9}, {3.701777660863597*^9, 3.7017776804380207`*^9}, {
   3.701779101758329*^9, 3.701779126490542*^9}, {3.701779219752219*^9, 
   3.701779245439249*^9}, {3.701779284700718*^9, 3.7017793930283422`*^9}, {
   3.7017794564263687`*^9, 3.701779463370623*^9}, {3.701782522031039*^9, 
   3.701782630027092*^9}, {3.7017830124956503`*^9, 3.7017830138522797`*^9}, {
   3.701787406411532*^9, 3.7017874175854473`*^9}, {3.73302790538536*^9, 
   3.7330279316814528`*^9}, {3.7330289856597757`*^9, 3.733029006079143*^9}, {
   3.733029323217971*^9, 3.733029335046502*^9}, {3.733029598271516*^9, 
   3.733029628094508*^9}, {3.733029677012439*^9, 
   3.733029797325038*^9}},ExpressionUUID->"c025e549-bf1b-41a7-919d-\
7db169ba4a42"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]generateCSSString\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.73302835471618*^9, 
  3.7330283627021227`*^9}},ExpressionUUID->"09c991c9-f128-4740-8dba-\
57066e2a9149"],

Cell[BoxData[
 RowBox[{
  RowBox[{"generateCSSString", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", " ", "_"}], "]"}], ":=", 
  "\"\<\>\""}]], "CodeInput",
 CellChangeTimes->{{3.7330344555261374`*^9, 
  3.7330344594922867`*^9}},ExpressionUUID->"999da9b4-1041-47a0-82bd-\
aa4e8bea867d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateCSSString", "[", 
    RowBox[{
     RowBox[{"r", ":", 
      RowBox[{"{", "__Rule", "}"}]}], ",", " ", 
     RowBox[{"riffle", ":", "_String", ":", "\"\< \>\""}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"StringRiffle", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"KeyValueMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "<>", "\"\<: \>\"", "<>", "#2", "<>", "\"\<;\>\""}], 
        "&"}], ",", " ", 
       RowBox[{"Association", "[", "r", "]"}]}], "]"}], ",", "\n", "\t\t", 
     "riffle"}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"generateCSSString", "[", 
   RowBox[{
    RowBox[{"r", ":", 
     RowBox[{"{", "__Rule", "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"riffle_String", ",", " ", "_"}], "}"}]}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"generateCSSString", "[", 
   RowBox[{"r", ",", " ", "riffle"}], "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.733028346168064*^9, 3.7330284373534813`*^9}, 
   3.73302992929797*^9, {3.7330313960452538`*^9, 
   3.733031416506465*^9}},ExpressionUUID->"297a5980-3e42-4ed5-8611-\
8ea8dc65359d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"generateCSSString", "[", 
    RowBox[{
     RowBox[{"a_Association", "?", "AssociationQ"}], ",", " ", "\n", "\t", 
     RowBox[{"riffle", ":", 
      RowBox[{"{", 
       RowBox[{"_String", ",", " ", "_String"}], "}"}], ":", 
      RowBox[{"{", 
       RowBox[{"\"\< \>\"", ",", " ", "\"\<\\n\>\""}], "}"}]}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"StringRiffle", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"KeyValueMap", "[", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "/.", "$CSSTypeRules"}], ")"}], "<>", "\"\<{\>\"", "<>", 
         RowBox[{"riffle", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<>", "\n", "\t", "\t\t\t\t", 
         RowBox[{"generateCSSString", "[", 
          RowBox[{"#2", ",", " ", 
           RowBox[{"riffle", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<>", 
         RowBox[{"riffle", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<}\>\""}], "&"}], ",", 
       "\n", "\t\t\t", "a"}], "\n", "\t\t\t", "]"}], ",", "\n", "\t\t", 
     RowBox[{"riffle", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",
 CellChangeTimes->{{3.733028491212611*^9, 3.733028536532174*^9}, {
  3.7330285754469357`*^9, 3.733028576171235*^9}, {3.733031342047432*^9, 
  3.7330314203545322`*^9}, {3.733031522053755*^9, 
  3.733031522249918*^9}},ExpressionUUID->"4780f3d5-5e1b-4af1-84e4-\
f1c9316cc6b4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]generateObjectStyles\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7330286382593517`*^9, 3.733028645105814*^9}, {
  3.733028712496649*^9, 
  3.733028713935507*^9}},ExpressionUUID->"889f3dea-9c32-4c4b-acd4-\
5e41c0f08da2"],

Cell[BoxData[
 RowBox[{"generateObjectStyles", "//", "Clear"}]], "CodeInput",
 CellChangeTimes->{{3.733033344693329*^9, 
  3.733033345435913*^9}},ExpressionUUID->"89f9d1ee-5d88-4a3e-8a24-\
6f8cdfbdcaa9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"generateObjectStyles", "[", "nb_NotebookObject", "]"}], ":=", "\n",
   "\t", 
  RowBox[{"Prepend", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"AssociationMap", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"AbsoluteCurrentValue", "[", 
        RowBox[{"nb", ",", " ", 
         RowBox[{"{", 
          RowBox[{"StyleDefinitions", ",", " ", "#"}], "}"}]}], "]"}], "&"}], 
      ",", "\n", "\t", "\t\t", 
      RowBox[{
       RowBox[{"Select", "[", "StringQ", "]"}], "@", 
       RowBox[{"Keys", "@", "\n", "\t", "\t\t\t", 
        RowBox[{"FE`Evaluate", "@", "\n", "\t", "\t\t\t\t", 
         RowBox[{"FEPrivate`GetPopupList", "[", 
          RowBox[{"nb", ",", "\"\<MenuListStyles\>\""}], "]"}]}]}]}]}], "\n", 
     "\t\t\t", "]"}], ",", "\n", "\t\t", 
    RowBox[{"\"\<body\>\"", "\[Rule]", 
     RowBox[{"Options", "[", "nb", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], "CodeInput",
 CellChangeTimes->{
  3.733029353506015*^9, {3.733033198465671*^9, 
   3.7330332142157507`*^9}},ExpressionUUID->"18ded5d3-5c99-4f47-be5f-\
eec80f94249f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"generateObjectStyles", "[", "cell_CellObject", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"Normal", "@", 
   RowBox[{"Merge", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Options", "[", "cell", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"AbsoluteCurrentValue", "[", 
        RowBox[{
         RowBox[{"ParentNotebook", "[", "cell", "]"}], ",", "\n", "\t", 
         "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"StyleDefinitions", ",", " ", 
           RowBox[{
            RowBox[{"NotebookRead", "[", "cell", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "\n", "\t\t\t\t", 
        "]"}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", "First"}], "\n", 
    "\t\t", "]"}]}]}]], "CodeInput",
 CellChangeTimes->{{3.733028654493984*^9, 3.733028681690174*^9}, {
   3.733028751859568*^9, 3.7330287708564777`*^9}, {3.7330290259822893`*^9, 
   3.7330290616253223`*^9}, 3.733029354390874*^9, {3.733034555838484*^9, 
   3.733034556762847*^9}},ExpressionUUID->"9d695c37-46e3-44c0-8ef7-\
4b5d4c6d4899"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"generateObjectStyles", "[", "box_BoxObject", "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"Options", "[", "box", "]"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.733028654493984*^9, 3.733028681690174*^9}, {
  3.733028751859568*^9, 3.7330287708564777`*^9}, {3.7330290259822893`*^9, 
  3.7330290616253223`*^9}, {3.733029348147403*^9, 
  3.7330293682921762`*^9}},ExpressionUUID->"05e9090b-c955-4c7e-a483-\
6ebb91b586f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CSSGenerate\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.7330277082093277`*^9},ExpressionUUID->"a73f69d7-8423-4897-8b15-\
e59b48cc913f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CSSGenerate", "]"}], "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<PropertyMapping\>\"", "\[Rule]", "Automatic"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<AllowedProperties\>\"", "\[Rule]", "Automatic"}], ",", "\n",
      "\t\t", 
     RowBox[{"\"\<ValueMapping\>\"", "\[Rule]", "Automatic"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<TypeMapping\>\"", "\[Rule]", "Automatic"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<AllowedTypes\>\"", "\[Rule]", "Automatic"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<GenerateString\>\"", "\[Rule]", "True"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<RiffleCharacter\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\< \>\"", ",", " ", "\"\<\\n\>\""}], "}"}]}]}], "\n", 
    "\t\t", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CSSGenerate", "[", 
   RowBox[{
    RowBox[{"l", ":", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"_List", "?", "OptionQ"}], "|", 
       RowBox[{"_Association", "?", 
        RowBox[{"(", 
         RowBox[{"OptionQ", "@*", "Normal"}], ")"}]}]}], ")"}]}], ",", " ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"$CSSPropertyRules", "=", "\n", "\t", "\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<PropertyMapping\>\"", "]"}], ",", 
         "\n", "\t", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Except", "[", 
           RowBox[{"_", "?", "OptionQ"}], "]"}], ":>", 
          "$CSSDefaultPropertyRules"}]}], "\n", "\t", "\t\t\t\t", "]"}]}], 
      ",", "\n", "\t", "\t\t", 
      RowBox[{"$CSSValueRules", "=", "\n", "\t", "\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<ValueMapping\>\"", "]"}], ",", "\n",
          "\t", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Except", "[", 
           RowBox[{"_", "?", "OptionQ"}], "]"}], ":>", 
          "$CSSDefaultValueRules"}]}], "\n", "\t", "\t\t\t\t", "]"}]}], ",", 
      "\n", "\t", "\t\t", 
      RowBox[{"$CSSTypeRules", "=", "\n", "\t", "\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<TypeMapping\>\"", "]"}], ",", "\n", 
         "\t", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Except", "[", 
           RowBox[{"_", "?", "OptionQ"}], "]"}], ":>", 
          "$CSSDefaultTypeRules"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"$CSSAllowedProperties", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<AllowedProperties\>\"", "]"}], ",", 
         "\n", "\t\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "s__String", "}"}], ":>", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"Alternatives", "[", "s", "]"}]}], ",", "\n", 
           "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Except", "[", "_Alternatives", "]"}], ":>", "\n", 
            "\t\t\t\t\t\t\t", "$CSSDefaultAllowedProperties"}]}], "\n", 
          "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"$CSSAllowedTypes", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<AllowedTypes\>\"", "]"}], ",", "\n",
          "\t\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "s__String", "}"}], ":>", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"Alternatives", "[", "s", "]"}]}], ",", "\n", 
           "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Except", "[", "_Alternatives", "]"}], ":>", "\n", 
            "\t\t\t\t\t\t\t", "$CSSDefaultAllowedTypes"}]}], "\n", 
          "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}]}]}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "@", 
        RowBox[{"OptionValue", "[", "\"\<GenerateString\>\"", "]"}]}], ",", 
       " ", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"generateCSSString", "[", 
         RowBox[{"#", ",", " ", "\n", "\t\t\t\t", 
          RowBox[{"Replace", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<RiffleCharacter\>\"", "]"}], ",",
             " ", "\n", "\t\t\t\t\t", 
            RowBox[{"{", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"s_String", "?", "StringQ"}], "\[RuleDelayed]", "\n", 
               "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"s", ",", " ", "\"\<\\n\>\""}], "}"}]}], ",", "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Except", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"_String", "?", "StringQ"}], ",", " ", 
                  RowBox[{"_String", "?", "StringQ"}]}], "}"}], "]"}], 
               "\[RuleDelayed]", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"\"\< \>\"", ",", " ", "\"\<\\n\>\""}], "}"}]}]}], 
             "\n", "\t\t\t\t\t\t", "}"}]}], "]"}]}], "\n", "\t\t\t\t", "]"}], 
        "&"}], ",", "\n", "\t\t\t", "Identity"}], "\n", "\t\t ", "]"}], "@", 
     "\n", "\t\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"Values", "@", "l"}], ",", " ", "OptionQ"}], "]"}], ",", 
       "\n", "\t", "\t", "\t\t", 
       RowBox[{"Map", "[", 
        RowBox[{"cssGenerate", ",", " ", "\n", "\t\t\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"$CSSAllowedTypes", "===", "All"}], ",", "\n", 
           "\t\t\t\t\t\t", 
           RowBox[{"Association", "[", "l", "]"}], ",", "\n", "\t\t\t\t\t\t", 
           
           RowBox[{
            RowBox[{"KeySortBy", "[", 
             RowBox[{
              RowBox[{"FirstPosition", "[", 
               RowBox[{"$CSSTypeRules", ",", " ", 
                RowBox[{"#", "/.", "$CSSTypeRules"}]}], "]"}], "&"}], "]"}], 
            "@", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"KeySelect", "[", 
             RowBox[{
              RowBox[{"Association", "[", "l", "]"}], ",", " ", "\n", "\t", 
              "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"MatchQ", "[", 
                RowBox[{
                 RowBox[{"#", "/.", "$CSSTypeRules"}], ",", " ", 
                 "$CSSAllowedTypes"}], "]"}], "&"}]}], "\n", "\t", 
             "\t\t\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t\t\t", "]"}]}], "\n",
         "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
       RowBox[{"cssGenerate", "[", "l", "]"}]}], "\n", "\t", "\t\t\t", 
      "]"}]}]}], "\n", "\t", "\t", "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.733027760076365*^9, 3.733027888906763*^9}, {
  3.733027944559003*^9, 3.733027960340364*^9}, {3.733028003215768*^9, 
  3.7330281527586403`*^9}, {3.73302819131712*^9, 3.73302834310705*^9}, {
  3.733028454419438*^9, 3.733028477471258*^9}, {3.7330285491377707`*^9, 
  3.733028605188364*^9}, {3.73302877941361*^9, 3.733028794159165*^9}, {
  3.733029200337844*^9, 3.7330292583950977`*^9}, {3.733029380821125*^9, 
  3.7330293832566347`*^9}, {3.733029489138379*^9, 3.7330295081679163`*^9}, {
  3.7330300036763077`*^9, 3.733030048617972*^9}, {3.733030082352434*^9, 
  3.733030216594943*^9}, {3.733030504417598*^9, 3.733030505154811*^9}, {
  3.733031317892159*^9, 3.733031330127441*^9}, {3.7330314300431128`*^9, 
  3.733031495429912*^9}},ExpressionUUID->"2347ac46-c4e3-44e9-a01b-\
67811d3b5d05"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CSSGenerate", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"nb", ":", "\n", "\t\t", 
     RowBox[{
     "_NotebookObject", "|", "_CellObject", "|", "_BoxObject", "|", "\n", 
      "\t\t", "_FrontEnd`EvaluationNotebook", "|", 
      "_FrontEnd`InputNotebook"}], ":", 
     RowBox[{"FrontEnd`InputNotebook", "[", "]"}]}], ",", " ", "\n", "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"CSSGenerate", "[", 
   RowBox[{
    RowBox[{"generateObjectStyles", "[", 
     RowBox[{"FE`Evaluate", "@", "nb"}], "]"}], ",", " ", "ops"}], 
   "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.733028691822049*^9, 3.733028706498887*^9}, {
  3.733029388353176*^9, 
  3.733029474981082*^9}},ExpressionUUID->"27b88d92-52b5-4ad9-ba38-\
7e3fb8ef8ecc"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]toXML\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellLabel->"In[64]:=",ExpressionUUID->"cd5e11a7-45ef-4c4d-a8a3-f335baa2ce4a"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]toNotStupidString\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c41814a8-b341-433d-918d-57308d2ef53c"],

Cell["\<\
\[LeftCeiling]
\tToString[x*10^7] is ridiculously stupid so we need to do this to fix it
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"01b5d6ad-49e2-476e-baac-92603b76156b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toNotStupidString", "[", 
    RowBox[{"n_", "?", "IntegerQ"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"StringTrim", "[", 
    RowBox[{
     RowBox[{"Quiet", "@", 
      RowBox[{"ToString", "@", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"n", ",", " ", 
         RowBox[{"ExponentFunction", "->", 
          RowBox[{"(", 
           RowBox[{"Null", "&"}], ")"}]}]}], "]"}]}]}], ",", " ", 
     "\"\<.\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toNotStupidString", "[", 
    RowBox[{"n_", "?", "NumericQ"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"StringTrim", "[", 
    RowBox[{
     RowBox[{"Quiet", "@", 
      RowBox[{"ToString", "@", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{"N", "@", "n"}], ",", " ", 
         RowBox[{"ExponentFunction", "->", 
          RowBox[{"(", 
           RowBox[{"Null", "&"}], ")"}]}]}], "]"}]}]}], ",", " ", 
     "\"\<.\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"toNotStupidString", "[", "e_", "]"}], ":=", "\n", "\t", 
  RowBox[{
  "ToString", "@", 
   "e"}]}]}], \
"CodeInput",ExpressionUUID->"04ea02bf-a296-490e-af51-d612f3757b39"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$SVGColorMap\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"cbb72ea1-2f14-4772-b7bd-c7e8cadb29ed"],

Cell[BoxData[
 RowBox[{"$SVGColorMap", "=", "\n", "\t", 
  RowBox[{"KeyMap", "[", "\n", "\t\t", 
   RowBox[{"ReleaseHold", ",", "\n", "\t\t", 
    RowBox[{"AssociationMap", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"Hold", "[", "a_", "]"}], ":>", 
        RowBox[{"ToLowerCase", "@", 
         RowBox[{"SymbolName", "[", 
          RowBox[{"Unevaluated", "[", "a", "]"}], "]"}]}]}], "]"}], ",", "\n",
       "\t\t\t", 
      RowBox[{"Thread", "@", 
       RowBox[{"Hold", "@", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{
         "Black", ",", " ", "White", ",", " ", "Gray", ",", "\n", "\t\t\t\t", 
          "Red", ",", " ", "Blue", ",", " ", "Green", ",", " ", "Yellow", ",",
           "\n", "\t\t\t\t", "Orange", ",", " ", "Pink", ",", " ", "Purple"}],
          "\n", "\t\t\t\t", "}"}]}]}]}], "\n", "\t\t\t", "]"}]}], "\n", 
   "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"80847f77-43e4-4a5e-861f-74e304f7f0e6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$SVGValMap\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f1230935-cdae-4c32-8b37-8d5b81113d84"],

Cell[BoxData[
 RowBox[{"$SVGValMap", "=", "\n", "\t", 
  RowBox[{"Join", "[", "\n", "\t\t", 
   RowBox[{"$SVGColorMap", ",", "\n", "\t\t", 
    RowBox[{"KeyMap", "[", 
     RowBox[{"N", ",", " ", "$SVGColorMap"}], "]"}], ",", "\n", "\t\t", 
    RowBox[{"<|", "\n", "\t\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"other", " ", "directly", " ", "convertable", " ", "values"}], 
      " ", "*)"}], "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"None", "\[Rule]", "\"\<none\>\""}], ",", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Opacity", "[", "0", "]"}], "\[Rule]", "\"\<none\>\""}], ",", 
      "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.", "]"}], "\[Rule]", "\"\<none\>\""}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"Automatic", "\[Rule]", "\"\<auto\>\""}]}], "\n", "\t\t\t", 
     "|>"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"1e661bf0-76a9-4ac1-be63-5bcffad7d301"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ScalingFactors\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"007166c5-4f81-4327-b514-974143086b01"],

Cell[BoxData[
 RowBox[{"$symbScalingFactors", "=", "\n", "\t", 
  RowBox[{"6", "*", 
   RowBox[{"10", "^", 
    RowBox[{"-", "2"}]}], "*", 
   RowBox[{"<|", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Tiny", "\[Rule]", ".005"}], ",", "\n", "\t\t", 
     RowBox[{"Small", "\[Rule]", ".01"}], ",", "\n", "\t\t", 
     RowBox[{"Medium", "\[Rule]", ".05"}], ",", "\n", "\t\t", 
     RowBox[{"Large", "\[Rule]", ".1"}]}], "\n", "\t\t", 
    "|>"}]}]}]], \
"CodeInput",ExpressionUUID->"51002824-fa16-4ddb-a152-9ec8476f1036"],

Cell[BoxData[
 RowBox[{"$symbDashingFactors", "=", "\n", "\t", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"#", "*", 
      RowBox[{"{", 
       RowBox[{"2", ",", " ", ".6"}], "}"}]}], "&"}], "]"}], "@", 
   RowBox[{"<|", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Tiny", "\[Rule]", ".005"}], ",", "\n", "\t\t", 
     RowBox[{"Small", "\[Rule]", ".01"}], ",", "\n", "\t\t", 
     RowBox[{"Medium", "\[Rule]", ".05"}], ",", "\n", "\t\t", 
     RowBox[{"Large", "\[Rule]", ".1"}]}], "\n", "\t\t", 
    "|>"}]}]}]], \
"CodeInput",ExpressionUUID->"63a837dc-2a4f-4f74-951e-61f94c6a7be2"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]toSVGString\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b6ce3a22-3432-42de-bb4b-7f80eb97de38"],

Cell["\<\
\[LeftCeiling]
\tThis attempts to take an SVG option value and get a proper string \
representation for it. There is some hacky-ness as handling of things like \
Dashing[{Small, Small}] must be different from that of Thickness[Large]. \
Hopefully this can be cleaned sometime.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"42fd4ad1-8060-4222-a790-9916ad4ef339"],

Cell[BoxData[
 RowBox[{"toSVGString", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"041c6cc8-ce8f-4473-92b3-e8c1e7f84a6f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toSVGString", "[", 
    RowBox[{
     RowBox[{"Scaled", "[", "s_", "]"}], ",", " ", "__"}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{
    RowBox[{"toNotStupidString", "[", 
     RowBox[{
      RowBox[{"Floor", "@", "100"}], "*", "s"}], "]"}], "<>", "\"\<%\>\""}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toSVGString", "[", 
    RowBox[{
     RowBox[{"RGBColor", "[", "r__", "]"}], ",", " ", "h__"}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"\"\<#\>\"", "<>", 
    RowBox[{"IntegerString", "[", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"{", "r", "}"}], "*", "255"}], "]"}], ",", " ", "16", ",", 
      " ", "2"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toSVGString", "[", 
    RowBox[{
     RowBox[{"h_", "?", "ColorQ"}], ",", " ", "__"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"toSVGString", "[", 
    RowBox[{
     RowBox[{"ColorConvert", "[", 
      RowBox[{"h", ",", " ", "RGBColor"}], "]"}], ",", " ", "None", ",", " ", 
     "None"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toSVGString", "[", 
    RowBox[{"v_", ",", " ", "_", ",", " ", "\"\<Style\>\""}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"CSSGenerate", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{"Normal", "@", "v"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toSVGString", "[", 
    RowBox[{"v_", ",", " ", "_", ",", " ", "\"\<Thickness\>\""}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"StringQ", "@", "v"}], ",", " ", "\n", "\t\t", "v", ",", "\n", 
     "\t\t", 
     RowBox[{"toSVGString", "[", 
      RowBox[{
       RowBox[{"Scaled", "[", "v", "]"}], ",", " ", "None", ",", " ", 
       "None"}], "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toSVGString", "[", 
    RowBox[{"v_", ",", " ", "_", ",", " ", "\"\<AbsoluteThickness\>\""}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"StringQ", "@", "v"}], ",", " ", "\n", "\t\t", "v", ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"toSVGString", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "@", "v"}], "&&", 
           RowBox[{"v", ">", "0"}]}], ",", " ", 
          RowBox[{"Max", "@", 
           RowBox[{"{", 
            RowBox[{"v", ",", " ", "1"}], "}"}]}], ",", " ", "v"}], "]"}], 
        ",", " ", "None", ",", " ", "None"}], "]"}], "<>", "\"\<pt\>\""}]}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toSVGString", "[", 
    RowBox[{"v_", ",", " ", "_", ",", " ", "\"\<CapForm\>\""}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"ToLowerCase", "[", "v", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toSVGString", "[", 
    RowBox[{"v_", ",", " ", "_", ",", " ", "\"\<JoinForm\>\""}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"ToLowerCase", "[", "v", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toSVGString", "[", 
    RowBox[{"l_List", ",", " ", "_", ",", " ", "\"\<Dashing\>\""}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"StringRiffle", "@", 
    RowBox[{
     RowBox[{"Map", "[", "ToString", "]"}], "@", "\n", "\t\t", 
     RowBox[{"Module", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"vbmin", "=", 
         RowBox[{"$svgViewBox", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"Min", "[", 
          RowBox[{"$svgViewBox", "[", 
           RowBox[{"[", 
            RowBox[{"3", ";;"}], "]"}], "]"}], "]"}], "*)"}], "\n", "\t", 
        "\t\t\t", "}"}], ",", "\n", "\t", "\t\t", 
       RowBox[{"MapIndexed", "[", "\n", "\t", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{
            RowBox[{"$symbDashingFactors", "[", "#", "]"}], ",", "\n", "\t", 
            "\t", "\t\t\t", 
            RowBox[{"{", "\n", "\t", "\t", "\t\t\t\t", 
             RowBox[{
              RowBox[{"m_Missing", "\[RuleDelayed]", "#"}], ",", "\n", "\t", 
              "\t", "\t\t\t\t", 
              RowBox[{"e_", "\[RuleDelayed]", 
               RowBox[{
                RowBox[{"e", "[", 
                 RowBox[{"[", 
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", "2", ",", " ", 
                    "1"}], "]"}], "]"}], "]"}], "*", "vbmin"}]}]}], "\n", 
             "\t", "\t\t\t\t\t", "}"}]}], "\n", "\t", "\t\t\t\t", "]"}], 
          "&"}], ",", "\n", "\t", "\t\t\t", "l"}], "\n", "\t", "\t\t\t", 
        "]"}]}], "\n", "\t", "\t\t", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toSVGString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"h", ":", 
        RowBox[{"Except", "[", "List", "]"}]}], ")"}], "[", "x_", "]"}], ",", 
     " ", "_", ",", " ", "_"}], "]"}], ":=", 
   RowBox[{"(*", " ", 
    RowBox[{"handling", " ", "things", " ", "like", " ", "Rotate"}], " ", 
    "*)"}], "\n", "\t", 
   RowBox[{
    RowBox[{"ToLowerCase", "@", 
     RowBox[{"ToString", "[", "h", "]"}]}], "<>", "\"\<(\>\"", "<>", 
    RowBox[{"toSVGString", "[", 
     RowBox[{"x", ",", " ", "None", ",", " ", "None"}], "]"}], "<>", 
    "\"\<)\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"toSVGString", "[", 
   RowBox[{"a_", ",", " ", "head_", ",", " ", "_"}], "]"}], ":=", "\n", "\t", 
  
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"$scaling", "=", "$symbScalingFactors"}], "\n", "\t\t\t\t", 
      RowBox[{"(*", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"head", "===", "\"\<stroke-dasharray\>\""}], ",", " ", 
         "$symbDashingFactors", ",", " ", "$symbScalingFactors"}], "]"}], 
       "*)"}], ",", "\n", "\t\t\t", 
      RowBox[{"vbmin", "=", 
       RowBox[{"$svgViewBox", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"Min", "[", 
       RowBox[{"$svgViewBox", "[", 
        RowBox[{"[", 
         RowBox[{"3", ";;"}], "]"}], "]"}], "]"}], "*)"}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "//.", 
       RowBox[{"{", 
        RowBox[{"(*", " ", 
         RowBox[{
         "a", " ", "bunch", " ", "of", " ", "junk", " ", "to", " ", "handle", 
          " ", "symbolic", " ", "sizes"}], " ", "*)"}], "\n", "\t", "\t\t\t", 
        
        RowBox[{
         RowBox[{"k", ":", 
          RowBox[{"Alternatives", "@@", 
           RowBox[{"Keys", "[", "$scaling", "]"}]}]}], ":>", "\n", "\t", 
         "\t\t\t\t", 
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"$scaling", ",", " ", "k"}], "]"}], "*", "vbmin"}]}], "\n",
         "\t\t\t\t", "}"}]}], "//", 
      RowBox[{"ReplaceAll", "@", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n_", "?", "NumericQ"}], ",", " ", 
            RowBox[{"m_", "?", "NumericQ"}]}], "}"}], "\[RuleDelayed]", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"(", "\n", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"toNotStupidString", "[", "n", "]"}], "<>", "\"\<,\>\"", "<>", 
            RowBox[{"toNotStupidString", "[", "m", "]"}]}], "\n", 
           "\t\t\t\t\t\t", ")"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"e", ":", 
           RowBox[{"_", "?", "NumericQ"}]}], "\[RuleDelayed]", 
          RowBox[{"toNotStupidString", "[", "e", "]"}]}]}], "\n", "\t\t\t\t", 
        "}"}]}]}], "//", "\n", "\t\t\t", 
     RowBox[{"Replace", "@", 
      RowBox[{"{", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"l_List", "\[RuleDelayed]", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{"ToString", "/@", "l"}], "]"}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{"e_", "\[RuleDelayed]", 
         RowBox[{"ToString", "@", "e"}]}]}], "\n", "\t\t\t\t", "}"}]}]}]}], 
   "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"768c2284-30fe-4f56-86bc-42ff83c9629f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$SVGPropMap\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"81f45c0c-4c60-4c35-a1b6-0a705a053139"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$SVGFacePropMap", "=", "\n", "\t", 
   RowBox[{
    RowBox[{"KeyMap", "[", "SymbolName", "]"}], "@", 
    RowBox[{"<|", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Filling", "\[Rule]", "\"\<fill\>\""}], ",", "\n", "\t\t", 
      RowBox[{"Opacity", "\[Rule]", "\"\<fill-opacity\>\""}], ",", "\n", 
      "\t\t", 
      RowBox[{"RoundingRadius", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<rx\>\"", ",", " ", "\"\<ry\>\""}], "}"}]}]}], "\n", 
     "\t\t", "|>"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$SVGEdgePropMap", "=", "\n", "\t", 
   RowBox[{
    RowBox[{"KeyMap", "[", "SymbolName", "]"}], "@", 
    RowBox[{"<|", "\n", "\t\t", 
     RowBox[{
      RowBox[{"LineColor", "\[Rule]", "\"\<stroke\>\""}], ",", "\n", "\t\t", 
      RowBox[{"Filling", "\[Rule]", "\"\<stroke\>\""}], ",", "\n", "\t\t", 
      RowBox[{"RoundingRadius", "\[Rule]", "\"\<stroke-round\>\""}], ",", 
      "\n", "\t\t", 
      RowBox[{"CapForm", "\[Rule]", "\"\<stroke-linecap\>\""}], ",", "\n", 
      "\t\t", 
      RowBox[{"Thickness", "\[Rule]", "\"\<stroke-width\>\""}], ",", "\n", 
      "\t\t", 
      RowBox[{"AbsoluteThickness", "->", "\"\<stroke-width\>\""}], ",", "\n", 
      "\t\t", 
      RowBox[{"JoinForm", "\[Rule]", "\"\<stroke-linejoin\>\""}], ",", "\n", 
      "\t\t", 
      RowBox[{"Dashing", "\[Rule]", "\"\<stroke-dasharray\>\""}], ",", "\n", 
      "\t\t", 
      RowBox[{"AbsoluteDashing", "\[Rule]", "\"\<stroke-dasharray\>\""}]}], 
     "\n", "\t\t", "|>"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"12d011ac-f969-4207-a451-d37c0bea398d"],

Cell[BoxData[
 RowBox[{"$SVGPropMap", "=", "\n", "\t", 
  RowBox[{
   RowBox[{"KeyMap", "[", "SymbolName", "]"}], "@", 
   RowBox[{"<|", "\n", "\t\t", 
    RowBox[{
     RowBox[{"TransformationFunction", "\[Rule]", "\"\<transform\>\""}], ",", 
     "\n", "\t\t", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<font\>\""}], ",", "\n", "\t\t", 
     RowBox[{"Style", "\[Rule]", "\"\<style\>\""}]}], "\n", "\t\t", 
    "|>"}]}]}]], \
"CodeInput",ExpressionUUID->"9e74eff9-47de-4bce-b290-086b85c412ee"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]toSVGProp\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e31821f0-19e9-44aa-a2f9-dfa60debb157"],

Cell["\<\
\[LeftCeiling]
\tBuilds an attribute rule for an SVG elements. This has to handle face and \
edge elements differently so there are different prop maps for each.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"bf93f5ac-f99b-4b4f-aae1-a33b4ac4db8d"],

Cell[BoxData[
 RowBox[{"toSVGProp", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"bda72d19-9653-450a-b98d-3cacac5e0fdf"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"decamel", "[", "s_", "]"}], ":=", "\n", "\t", 
   RowBox[{"StringTrim", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"StringJoin", "@", "\n", "\t\t\t", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"s", ",", " ", 
        RowBox[{
         RowBox[{"l", ":", 
          RowBox[{"LetterCharacter", "?", 
           RowBox[{"(", 
            RowBox[{"Not", "@*", "LowerCaseQ"}], ")"}]}]}], "\[RuleDelayed]", 
         
         RowBox[{"\"\<-\>\"", "<>", 
          RowBox[{"ToLowerCase", "@", "l"}]}]}]}], "]"}]}], ",", "\n", "\t\t", 
     RowBox[{"Except", "[", "LetterCharacter", "]"}]}], "\n", "\t\t", "]"}]}],
   "*)"}]], \
"CodeInput",ExpressionUUID->"02588de7-55bb-49da-9d27-f8ea0d3b9390"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toSVGProp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"form", ":", 
        RowBox[{"EdgeForm", "|", "FaceForm", "|", "None"}]}], ")"}], "[", 
      "key_", "]"}], ",", " ", "val_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k1", ",", " ", "k", ",", " ", "m"}], "}"}], ",", "\n", "\t\t", 
     
     RowBox[{
      RowBox[{"k1", "=", 
       RowBox[{"k", "=", 
        RowBox[{"ToString", "@", "key"}]}]}], ";", "\n", "\t\t", 
      RowBox[{"m", "=", "\n", "\t\t\t", 
       RowBox[{"Which", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"form", "===", "EdgeForm"}], ",", " ", "\n", "\t\t\t\t\t", 
         "$SVGEdgePropMap", ",", " ", "\n", "\t\t\t\t", 
         RowBox[{"form", "===", "FaceForm"}], ",", "\n", "\t\t\t\t\t", 
         "$SVGFacePropMap", ",", "\n", "\t\t\t\t", "True", ",", "\n", 
         "\t\t\t\t\t", "$SVGPropMap"}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"k", "=", 
       RowBox[{"Lookup", "[", 
        RowBox[{"m", ",", " ", "k", ",", " ", 
         RowBox[{"Lookup", "[", 
          RowBox[{"$SVGPropMap", ",", " ", "k", ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringQ", "@", "key"}], ",", " ", "k", 
             RowBox[{"(*", 
              RowBox[{"decamel", "[", "k", "]"}], "*)"}], ",", " ", "None"}], 
            "]"}]}], "]"}]}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"Which", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"k", "===", "None"}], ",", "\n", "\t", "\t\t\t", "Nothing", 
        ",", "\n", "\t\t\t", 
        RowBox[{"ListQ", "@", "k"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "->", 
            RowBox[{"Lookup", "[", 
             RowBox[{"$SVGValMap", ",", " ", 
              RowBox[{"Key", "@", "#2"}], ",", " ", 
              RowBox[{"toSVGString", "[", 
               RowBox[{"#2", ",", " ", "#", ",", " ", "k1"}], "]"}]}], 
             "]"}]}], "&"}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t\t\t", 
           RowBox[{"k", ",", "\n", "\t\t\t\t\t\t", "val"}], "\n", 
           "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}], ",", "\n", 
        "\t\t\t", "True", ",", "\n", "\t\t\t\t", 
        RowBox[{"k", "->", 
         RowBox[{"Lookup", "[", 
          RowBox[{"$SVGValMap", ",", " ", 
           RowBox[{"Key", "@", "val"}], ",", " ", 
           RowBox[{"toSVGString", "[", 
            RowBox[{"val", ",", " ", "k", ",", " ", "k1"}], "]"}]}], 
          "]"}]}]}], "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"toSVGProp", "[", 
   RowBox[{"key_", ",", " ", "val_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"toSVGProp", "[", 
   RowBox[{
    RowBox[{"None", "@", "key"}], ",", " ", "val"}], 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"ec8faebf-e8b4-4564-80b0-6cee00afaa53"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]toXML\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"82bd5cd5-db59-4618-b9d6-52512ac81bbd"],

Cell[BoxData[
 RowBox[{"toXML", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"d80bb86f-b3ab-4d4d-962f-fe365666e061"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"toXML", "[", 
   RowBox[{"svgElement", "[", 
    RowBox[{"\"\<style\>\"", ",", " ", "attrs_"}], "]"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\"\<style\>\"", ",", " ", "\n", "\t\t", 
    RowBox[{"{", "}"}], ",", "\n", "\t\t", 
    RowBox[{"KeyValueMap", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "<>", "\"\< { \>\"", "<>", 
        RowBox[{"CSSGenerate", "[", "#2", "]"}], "<>", "\"\< }\>\""}], "&"}], 
      ",", "\n", "\t\t\t", 
      RowBox[{"Association", "@", 
       RowBox[{"attrs", "[", "\"\<Styles\>\"", "]"}]}]}], "\n", "\t\t\t", 
     "]"}]}], "\n", "\t\t", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"toXML", "[", 
   RowBox[{"svgElement", "[", 
    RowBox[{"head_", ",", " ", "attrs_"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"head", ",", " ", "\n", "\t\t", 
    RowBox[{
     RowBox[{"DeleteDuplicatesBy", "[", "First", "]"}], "@", 
     RowBox[{"KeyValueMap", "[", 
      RowBox[{"toSVGProp", ",", "\n", "\t\t\t", 
       RowBox[{"KeyDrop", "[", 
        RowBox[{
         RowBox[{"Association", "@", "attrs"}], ",", " ", "\"\<Body\>\""}], 
        "]"}]}], "\n", "\t\t\t", "]"}]}], ",", "\n", "\t\t", 
    RowBox[{"Flatten", "@", 
     RowBox[{"List", "@", 
      RowBox[{"ReplaceAll", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Lookup", "[", 
         RowBox[{"attrs", ",", " ", "\"\<Body\>\"", ",", " ", 
          RowBox[{"{", "}"}]}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"s", ":", 
          RowBox[{"(", 
           RowBox[{"Alternatives", "@@", 
            RowBox[{"Map", "[", 
             RowBox[{"Blank", ",", " ", 
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"Keys", "@", "$svgPrimitives"}], ",", " ", 
                "svgElement"}], "]"}]}], "]"}]}], ")"}]}], ":>", "\n", 
         "\t\t\t\t", 
         RowBox[{"toXML", "@", 
          RowBox[{"toEl", "[", "s", "]"}]}]}]}], "\n", "\t\t\t", "]"}]}]}]}], 
   "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"3f17de62-c8a5-44f8-aafb-a3bf23140272"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]toEl\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellLabel->"In[66]:=",ExpressionUUID->"b8f3104a-3a24-4380-8e64-d013c14ab5b5"],

Cell["\<\
\[LeftCeiling]
\tThis defines the DSL and primary aliasing for Mathematica objects. Extra \
rules can be added in the Aliases section.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"793f538d-a936-4e3c-a982-d79ef9eac332"],

Cell[BoxData[
 RowBox[{"ClearAll", "@", "toEl"}]], "CodeInput",
 CellLabel->"In[67]:=",ExpressionUUID->"943eb1e6-db6e-4d7b-b167-bb63417b05dc"],

Cell[BoxData[
 RowBox[{"toEl", "~", "SetAttributes", "~", 
  "Listable"}]], \
"CodeInput",ExpressionUUID->"dc9697ff-81d3-46ed-aafe-3f2ea1c9d761"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"opsPatRule", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"_FaceForm", "|", "_EdgeForm", "|", "_String", "|", "_Symbol"}], 
     ")"}], "\[Rule]", "_"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opsPat", "[", "]"}], "=", 
   RowBox[{"___", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "#", "}"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"opsPatRule", "..."}], "}"}]}], "]"}], "&"}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"notOp", "[", "]"}], ":=", 
  RowBox[{"_", "?", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Not", "@", 
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"{", "#", "}"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"opsPatRule", "..."}], "}"}]}], "]"}]}], "&"}], 
    ")"}]}]}]}], \
"CodeInput",ExpressionUUID->"0e7ba366-bf72-44cc-a5cb-8759e5e6dda2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$toElConvertsFully", "=", "True"}], 
  ";"}]], "CodeInput",ExpressionUUID->"a1c41e3e-6046-422b-86fc-e63e0c09c713"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]register\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"d1bb876f-4e40-4e42-9505-59e9779322ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$svgPrimitives", "=", "\n", "\t", 
   RowBox[{"<|", "\n", "\t\t", "\n", "\t\t", "|>"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"19b49844-5d7b-4550-866a-0e7555ec2b70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"register", "[", 
   RowBox[{"fn_", ",", " ", "head_", ",", " ", "args__"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"flargs", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", "args", "}"}]}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Context", "[", "fn", "]"}], "=", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"Context", "[", "fn", "]"}], ",", " ", 
        RowBox[{"\"\<Private\>\"", "\[Rule]", "\"\<Package\>\""}]}], "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"$svgPrimitives", "[", "fn", "]"}], "=", "head"}], ";", "\n", 
     "\t\t", 
     RowBox[{"Replace", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "args", "}"}], "/.", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"pat_", "\[Rule]", "key_String"}], ")"}], 
           "\[RuleDelayed]", "pat"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Cases", "[", 
          RowBox[{"flargs", ",", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"_", "\[Rule]", "key_String"}], ")"}], "\[RuleDelayed]", 
            "key"}]}], "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Thread", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{"flargs", ",", " ", "\n", "\t\t\t\t\t\t", 
             RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Verbatim", "[", "Pattern", "]"}], "[", 
                   RowBox[{"a_", ",", " ", "_"}], "]"}], "\[Rule]", 
                  "key_String"}], ")"}], "\[RuleDelayed]", 
                RowBox[{"Hold", "[", "a", "]"}]}], ",", "\n", 
               "\t\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"(", "\n", "\t\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    "Optional", "|", "PatternTest", "|", "Condition"}], ")"}],
                    "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Verbatim", "[", "Pattern", "]"}], "[", 
                    RowBox[{"a_", ",", " ", "_"}], "]"}], ",", " ", "_"}], 
                   "]"}], "\[Rule]", "key_String"}], "\n", "\t\t\t\t\t\t\t\t",
                  ")"}], "\[RuleDelayed]", 
                RowBox[{"Hold", "[", "a", "]"}]}], ",", "\n", 
               "\t\t\t\t\t\t\t", 
               RowBox[{"_", "\[Rule]", "Nothing"}]}], "\n", "\t\t\t\t\t\t\t", 
              "}"}], ",", " ", "\n", "\t\t\t\t\t\t", "1"}], "\n", 
            "\t\t\t\t\t\t", "]"}], ",", " ", "\n", "\t\t\t\t\t", "Hold"}], 
          "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "}"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"{", "pats__", "}"}], ",", "\n", "\t\t\t\t\t", "vars_", 
            ",", "\n", "\t\t\t\t\t", 
            RowBox[{"Hold", "[", "vals_", "]"}]}], "\n", "\t\t\t\t\t", "}"}], 
          ":>", "\n", "\t\t\t\t", 
          RowBox[{"(", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"toEl", "[", 
             RowBox[{"svg", ":", 
              RowBox[{"fn", "[", 
               RowBox[{"pats", ",", " ", 
                RowBox[{"ops", ":", 
                 RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], "]"}], ":=", "\n",
             "\t\t\t\t\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"TrueQ", "@", "$toElConvertsFully"}], ",", "\n", 
              "\t\t\t\t\t\t\t", 
              RowBox[{"svgElement", "[", 
               RowBox[{"head", ",", " ", "\n", "\t", "\t", "\t\t\t\t\t\t", 
                RowBox[{"Merge", "[", "\n", "\t", "\t", "\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"{", "\n", "\t", "\t", "\t\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"vars", "\[Rule]", "vals"}], "]"}], ",", "\n", 
                    "\t", "\t", "\t\t\t\t\t\t\t\t", "ops"}], "\n", "\t", "\t",
                    "\t\t\t\t\t\t\t\t", "}"}], ",", "\n", "\t", "\t", 
                  "\t\t\t\t\t\t\t", "First"}], "\n", "\t\t\t\t\t\t\t\t\t", 
                 "]"}]}], "\n", "\t\t\t\t\t\t\t\t", "]"}], ",", "\n", 
              "\t\t\t\t\t\t\t", "svg"}], "\n", "\t\t\t\t\t\t\t", "]"}]}], 
           "\n", "\t\t\t\t\t", ")"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"_", "\[RuleDelayed]", 
          RowBox[{"Failure", "[", 
           RowBox[{"\"\<RegistrationFailure\>\"", ",", "\n", "\t\t\t\t\t", 
            RowBox[{"<|", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{
              "\"\<MessageTemplate\>\"", "->", "\n", "\t\t\t\t\t\t\t", 
               "\"\<Failed to register conversion rule for head `` and type \
`` with argspec ``\>\""}], ",", "\n", "\t\t\t\t\t\t", 
              RowBox[{
              "\"\<MessageParameters\>\"", ":>", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"fn", ",", " ", "head", ",", " ", 
                 RowBox[{"{", "args", "}"}]}], "}"}]}]}], "\n", 
             "\t\t\t\t\t\t", "|>"}]}], "\n", "\t\t\t\t\t", "]"}]}]}], "\n", 
        "\t\t\t\t", "}"}]}], "\n", "\t\t", "]"}]}]}], "\n", "\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8f19499a-a2b2-4f22-aaa6-a9822f968282"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]alias\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"68acf0dc-555e-4059-aeec-8c52b22920cb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "alias"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "@", "aliasedQ"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "@", "aliasTarget"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "@", "lineTypeAlias"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"cc3d098c-2d30-4bc7-8dc2-5fdf9a09b47a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"alias", "/:", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"alias", "[", 
       RowBox[{"lineType", ":", 
        RowBox[{"True", "|", "False"}]}], "]"}], "[", "expr_", "]"}], ":=", 
     "form_"}], ")"}], ":=", "\n", "\t", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$svgLineType", "=", "False"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"aliasedQ", "[", "expr", "]"}], "=", "True"}], ";", "\n", 
      "\t\t", 
      RowBox[{
       RowBox[{"lineTypeAlias", "[", "expr", "]"}], "=", "lineType"}], ";", 
      "\n", "\t\t", 
      RowBox[{
       RowBox[{"aliasTarget", "[", "expr", "]"}], "=", "\n", "\t\t\t", 
       RowBox[{"FirstCase", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"HoldComplete", "[", "form", "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Alternatives", "@@", 
          RowBox[{"Keys", "[", "$svgPrimitives", "]"}]}], ",", "\n", 
         "\t\t\t\t", "None", ",", "\n", "\t\t\t\t", "\[Infinity]", ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"Heads", "\[Rule]", "True"}]}], "\n", "\t\t\t\t", "]"}]}], 
      ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"toEl", "[", "expr", "]"}], ":=", 
       RowBox[{"toEl", "[", "form", "]"}]}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"alias", "/:", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"alias", "[", "expr_", "]"}], ":=", "form_"}], ")"}], ":=", "\n", 
  "\t", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"alias", "[", "False", "]"}], "[", "expr", "]"}], ":=", "form"}],
    ")"}]}]}], \
"CodeInput",ExpressionUUID->"f5e4e6bc-48f5-406a-8d7f-d1d13020a5d4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Fallthrough\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellLabel->"In[70]:=",ExpressionUUID->"bb4e1b1d-22f9-49b7-914f-6765f9ee7ce3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"toEl", "[", 
    RowBox[{"e", ":", 
     RowBox[{"_svgElement", "|", "_XMLElement", "|", "_Failure"}]}], "]"}], ":=",
    "\n", "\t", "e"}], 
  ";"}]], "CodeInput",ExpressionUUID->"0c6b19d4-805a-449b-8608-4ae4e94aa2a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toEl", "[", "e_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Failure", "[", 
   RowBox[{"\"\<XMLConversion\>\"", ",", " ", "\n", "\t\t", 
    RowBox[{"<|", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{
      "\"\<MessageTemplate\>\"", "\[Rule]", "\"\<Failed to convert ``\>\""}], 
      ",", "\n", "\t\t\t", 
      RowBox[{"\"\<MessageParameters\>\"", "\[RuleDelayed]", 
       RowBox[{"{", "e", "}"}]}]}], "\n", "\t\t\t", "|>"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"f52e99e8-566b-4019-95d4-1f6ca51d667d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]circle\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellLabel->"In[72]:=",ExpressionUUID->"07501db5-fc9f-44e7-a2bd-5d3c20b058e6"],

Cell[BoxData[
 RowBox[{"register", "[", 
  RowBox[{"svgCircle", ",", " ", "\"\<circle\>\"", ",", " ", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"cx_", "?", "NumericQ"}], "\[Rule]", "\"\<cx\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"cy_", "?", "NumericQ"}], "\[Rule]", "\"\<cy\>\""}]}], "}"}], 
   ",", " ", "\n", "\t", 
   RowBox[{
    RowBox[{"r_", "?", "NumericQ"}], "\[Rule]", "\"\<r\>\""}]}], "\n", "\t", 
  "]"}]], "CodeInput",
 CellLabel->
  "In[73]:=",ExpressionUUID->"71b3f394-8737-4dac-b184-d45ae76fe549"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ellipse\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellLabel->"In[74]:=",ExpressionUUID->"47cb4809-4dfb-4b80-aed3-84e0df1bdacb"],

Cell[BoxData[
 RowBox[{"register", "[", 
  RowBox[{"svgEllipse", ",", " ", "\"\<ellipse\>\"", ",", " ", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"cx_", "?", "NumericQ"}], "\[Rule]", "\"\<cx\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"cy_", "?", "NumericQ"}], "\[Rule]", "\"\<cy\>\""}]}], "}"}], 
   ",", " ", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"rx_", "?", "NumericQ"}], "\[Rule]", "\"\<rx\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"ry_", "?", "NumericQ"}], "\[Rule]", "\"\<ry\>\""}]}], "}"}]}], 
  "\n", "\t", "]"}]], "CodeInput",
 CellLabel->
  "In[75]:=",ExpressionUUID->"bcfe5ad5-d03a-4ad6-93c3-946a19dcc262"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]line\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9647a581-f489-41c0-aa7e-895ea08d7a23"],

Cell[BoxData[
 RowBox[{"register", "[", 
  RowBox[{"svgLine", ",", " ", "\"\<line\>\"", ",", " ", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x1_", "?", "NumericQ"}], "\[Rule]", "\"\<x1\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"y1_", "?", "NumericQ"}], "\[Rule]", "\"\<y1\>\""}]}], "}"}], 
     ",", " ", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x2_", "?", "NumericQ"}], "\[Rule]", "\"\<x2\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"y2_", "?", "NumericQ"}], "\[Rule]", "\"\<y2\>\""}]}], 
      "}"}]}], "\n", "\t\t", "}"}]}], "\n", "\t", 
  "]"}]], "CodeInput",ExpressionUUID->"0e2c8cd6-83d1-4531-8a19-a2e026544a16"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]path\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"541b0585-8faa-4e9c-a43e-ac55c0701aaa"],

Cell[BoxData[
 RowBox[{"register", "[", 
  RowBox[{"svgPath", ",", " ", "\"\<path\>\"", ",", " ", 
   RowBox[{
    RowBox[{"path_", "?", "StringQ"}], "\[Rule]", "\"\<d\>\""}]}], 
  "]"}]], "CodeInput",ExpressionUUID->"ee4da45c-236d-46fb-9091-1a6de8bac495"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]polygon\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c212ec98-d82f-4fea-926b-ed291dcfdced"],

Cell[BoxData[
 RowBox[{"register", "[", 
  RowBox[{"svgPolygon", ",", " ", "\"\<polygon\>\"", ",", " ", "\n", "\t", 
   RowBox[{
    RowBox[{"pts", ":", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumericQ"}], ",", " ", 
         RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "\n", "\t\t", 
      "}"}]}], "\[Rule]", "\"\<points\>\""}]}], "\n", "\t", 
  "]"}]], "CodeInput",ExpressionUUID->"bda18a14-4515-4bae-8f6e-48d03582ecd1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]polyline\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c31e119f-8367-4ab9-87fc-28ccdd7eff95"],

Cell[BoxData[
 RowBox[{"register", "[", 
  RowBox[{"svgPolyline", ",", " ", "\"\<polyline\>\"", ",", " ", "\n", "\t", 
   RowBox[{
    RowBox[{"pts", ":", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumericQ"}], ",", " ", 
         RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "\n", "\t\t", 
      "}"}]}], "\[Rule]", "\"\<points\>\""}]}], "\n", "\t", 
  "]"}]], "CodeInput",ExpressionUUID->"a1e7bb0a-c512-4919-bb46-fd866c74408b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]rect\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ccb4f7ee-063a-4285-886d-d5b64843011a"],

Cell[BoxData[
 RowBox[{"register", "[", 
  RowBox[{"svgRect", ",", " ", "\"\<rect\>\"", ",", " ", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x_", "?", "NumericQ"}], "\[Rule]", "\"\<x\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"y_", "?", "NumericQ"}], "\[Rule]", "\"\<y\>\""}]}], "}"}], ",",
    "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"w_", "?", "NumericQ"}], "\[Rule]", "\"\<width\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"h_", "?", "NumericQ"}], "\[Rule]", "\"\<height\>\""}]}], 
    "}"}]}], "\n", "\t", 
  "]"}]], "CodeInput",ExpressionUUID->"415cb66d-7318-4bde-9673-c4b20968c75f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]marker\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"01501b0c-a9ed-4e94-a8de-5a21dbec143c"],

Cell[BoxData[
 RowBox[{"register", "[", 
  RowBox[{"svgMarker", ",", " ", "\"\<marker\>\"", ",", " ", 
   RowBox[{
    RowBox[{"id_", "?", "StringQ"}], "\[Rule]", "\"\<id\>\""}], ",", " ", 
   RowBox[{"body_", "\[Rule]", "\"\<Body\>\""}]}], 
  "]"}]], "CodeInput",ExpressionUUID->"3bcfb29f-ded2-4ab8-8cfc-d6ac6d003459"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]text\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9e2fbe9c-6727-42da-9bde-04be2f3dd2f8"],

Cell[BoxData[
 RowBox[{"register", "[", 
  RowBox[{"svgText", ",", " ", "\"\<text\>\"", ",", " ", 
   RowBox[{"body_", "\[Rule]", "\"\<Body\>\""}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x_", "?", "NumericQ"}], "\[Rule]", "\"\<x\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"y_", "?", "NumericQ"}], "\[Rule]", "\"\<y\>\""}]}], "}"}]}], 
  "]"}]], "CodeInput",ExpressionUUID->"5487fcb1-b8e4-4df3-b6b0-617e1a4bd30a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]style\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"06dd1428-9905-4f25-a4f0-4d04fd0a6fd2"],

Cell[BoxData[
 RowBox[{"register", "[", 
  RowBox[{"svgStyle", ",", " ", "\"\<style\>\"", ",", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"styles_", "?", "OptionQ"}], ")"}], "\[Rule]", 
    "\"\<Styles\>\""}]}], 
  "]"}]], "CodeInput",ExpressionUUID->"b54b8bc1-0be0-4fb2-83ae-afd9c0e8ce81"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]title\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b634c096-28ad-471d-953f-f380fe54d956"],

Cell[BoxData[
 RowBox[{"register", "[", 
  RowBox[{"svgTitle", ",", " ", "\"\<title\>\"", ",", " ", 
   RowBox[{"body_", "\[Rule]", "\"\<Body\>\""}]}], 
  "]"}]], "CodeInput",ExpressionUUID->"3ca30606-a72b-4894-9fa3-5af298f6bc64"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]g\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c8a07cee-cbfe-479b-a169-0a1438112869"],

Cell[BoxData[
 RowBox[{
  RowBox[{"register", "[", 
   RowBox[{"svgGroup", ",", " ", "\"\<g\>\"", ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"bodies", ":", 
       RowBox[{"{", "__", "}"}]}], ")"}], "\[Rule]", "\"\<Body\>\""}]}], 
   "]"}], ";"}]], \
"CodeInput",ExpressionUUID->"64935215-68bb-49a5-833c-9500f22164cf"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]symbol\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"0b165fee-7cf7-4da0-814f-922e12d3ff4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"register", "[", 
   RowBox[{"svgSymbol", ",", " ", "\"\<symbol\>\"", ",", " ", "\n", "\t", 
    RowBox[{"id_String", "\[Rule]", "\"\<id\>\""}], ",", "\n", "\t", 
    RowBox[{"b_", "\[Rule]", "\"\<Body\>\""}]}], "\n", "\t", "]"}], 
  ";"}]], "CodeInput",ExpressionUUID->"25dcd428-b00a-4f90-be64-9855a32ba5c8"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]use\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"6cca7c90-b8ed-44fa-a869-7184b91a14d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"register", "[", 
   RowBox[{"svgUse", ",", " ", "\"\<use\>\"", ",", " ", "\n", "\t", 
    RowBox[{"id_String", "\[Rule]", "\"\<href\>\""}], ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x_", "?", "NumericQ"}], "\[Rule]", "\"\<x\>\""}], ",", " ", 
      RowBox[{
       RowBox[{"y_", "?", "NumericQ"}], "\[Rule]", "\"\<y\>\""}]}], "}"}]}], 
   "\n", "\t", "]"}], 
  ";"}]], "CodeInput",ExpressionUUID->"2a211077-679d-4d96-9ace-c2e5e922dfec"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]a\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ebf1891c-0b31-459f-94e5-74a9b5bfcec7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"register", "[", 
   RowBox[{"svgLink", ",", " ", "\"\<a\>\"", ",", " ", 
    RowBox[{"href_String", "\[Rule]", "\"\<href\>\""}], ",", " ", 
    RowBox[{"body_", "\[Rule]", "\"\<Body\>\""}]}], "]"}], 
  ";"}]], "CodeInput",ExpressionUUID->"3ff8d35b-3e01-4fbd-8dc1-b68e4d51e23d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]mask\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"a7b82050-0df4-4574-881e-ceb73d14975f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"register", "[", 
   RowBox[{"svgMask", ",", " ", "\"\<mask\>\"", ",", " ", 
    RowBox[{"id_String", "\[Rule]", "\"\<id\>\""}], ",", " ", 
    RowBox[{"body_", "\[Rule]", "\"\<Body\>\""}]}], "]"}], 
  ";"}]], "CodeInput",ExpressionUUID->"d45ed5fe-a6d6-4fba-9be0-a373139e355d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Aliases\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"1e28b9c2-4388-4418-8b94-20c9544cfdc4"],

Cell["\<\
\[LeftCeiling]
\tNeed to handle some kind of directive stack that things get pushed onto \
when recursing.
Currently directives have to be manually passed down but this isn\
\[CloseCurlyQuote]t the eventual goal.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"b8a61b8c-f03f-492a-8310-71d848e01462"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]adjustCoord\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"d39fcfa1-a9af-4cd1-bc21-e5fbf4dad4de"],

Cell["\<\
\[LeftCeiling]
\tLittle function to get the coordinate system corrected
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"5d16c767-a792-45c3-925d-23730e27a920"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"adjustCoordC", "=", "\n", "\t", 
   RowBox[{"Compile", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xy", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pr", ",", " ", "_Real", ",", " ", "2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"scaling", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"shift", ",", " ", "_Real", ",", " ", "1"}], "}"}]}], "}"}], 
     ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"xy", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "*", 
         RowBox[{"scaling", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"pr", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", " ", "2"}], "]"}], "]"}], "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"scaling", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "*", 
            RowBox[{"xy", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "-", 
           RowBox[{"pr", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", " ", "1"}], "]"}], "]"}]}], ")"}]}]}], "}"}], 
      "-", "shift"}], ",", "\n", "\t\t", 
     RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}], ",", "\n", 
     "\t\t", 
     RowBox[{"RuntimeAttributes", "\[Rule]", 
      RowBox[{"{", "Listable", "}"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"adjustCoord", "[", "blah_", "]"}], ":=", "\n", "\t", 
  RowBox[{"adjustCoordC", "[", 
   RowBox[{
   "blah", ",", " ", "$svgPlotRange", ",", " ", "$svgScaling", ",", " ", 
    "$svgViewShift"}], 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"27212f36-036c-4f32-b689-f62def9ac218"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Disk\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"7f24f9e0-e739-4b6a-8b3b-456f294c2c84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"alias", "@", "\n", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"center", ":", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", " ", 
         RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], ",", " ", 
      RowBox[{"rad", ":", 
       RowBox[{"notOp", "[", "]"}], ":", "Automatic"}], ",", " ", 
      RowBox[{"ops", ":", 
       RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ListQ", "@", 
      RowBox[{"center", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t\t", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"svgCircle", "[", 
         RowBox[{"##", ",", " ", "ops"}], "]"}], "&"}], ",", " ", "\n", 
       "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"adjustCoord", "@", "center"}], ",", " ", "\n", "\t\t\t\t", 
         RowBox[{"Replace", "[", 
          RowBox[{"rad", ",", " ", 
           RowBox[{"{", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"r_", "?", "NumericQ"}], "\[RuleDelayed]", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"r", ",", " ", 
                RowBox[{"Length", "@", "center"}]}], "]"}]}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"Except", "[", 
               RowBox[{"{", 
                RowBox[{"__", "?", "NumericQ"}], "}"}], "]"}], ":>", "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"1.", ",", " ", 
                RowBox[{"Length", "@", "center"}]}], "]"}]}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"e_", ":>", "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"PadRight", "[", 
                RowBox[{"e", ",", " ", 
                 RowBox[{"Length", "@", "center"}], ",", " ", "e"}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{";;", 
                 RowBox[{"Length", "@", "center"}]}], "]"}], "]"}]}]}], "\n", 
            "\t\t\t\t\t", "}"}]}], "]"}]}], "\n", "\t\t\t\t", "}"}]}], "\n", 
      "\t\t\t", "]"}], ",", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"NumericQ", "@", "rad"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"Ellipsoid", "[", 
        RowBox[{"center", ",", " ", "rad", ",", " ", "ops"}], "]"}], ",", 
       "\n", "\t\t\t", 
       RowBox[{"svgCircle", "[", 
        RowBox[{
         RowBox[{"adjustCoord", "@", "center"}], ",", " ", "\n", "\t", 
         "\t\t\t", 
         RowBox[{"Replace", "[", 
          RowBox[{"rad", ",", "\n", "\t", "\t\t\t\t", 
           RowBox[{
            RowBox[{"Except", "[", 
             RowBox[{"_", "?", "NumericQ"}], "]"}], "\[Rule]", "1"}]}], "\n", 
          "\t", "\t\t\t\t", "]"}], ",", " ", "\n", "\t\t\t\t", "ops"}], "\n", 
        "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alias", "@", "\n", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"rad", ":", 
       RowBox[{"notOp", "[", "]"}], ":", "Automatic"}], ",", " ", 
      RowBox[{"ops", ":", 
       RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
   RowBox[{"toEl", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", "rad", ",", " ", "ops"}],
     "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"d117fa16-e39b-486a-ab4f-afefba117b7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "@", "\n", 
    RowBox[{"DiskBox", "[", "a___", "]"}]}], ":=", "\n", "\t", 
   RowBox[{"Disk", "[", "a", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"dd177c50-77db-479c-b741-c1d8da0af43f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Circle\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f024bff5-d0b8-4d61-a877-f6bacd5a0a1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "[", "True", "]"}], "@", "\n", 
   RowBox[{"Circle", "[", 
    RowBox[{"center_", ",", " ", 
     RowBox[{"rad", ":", 
      RowBox[{"notOp", "[", "]"}], ":", "Automatic"}], ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"toEl", "[", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"adjustCoord", "@", "center"}], ",", " ", "rad", ",", " ", 
      "ops"}], "]"}], "]"}], "/.", "\n", "\t\t", 
   RowBox[{
    RowBox[{"svgElement", "[", 
     RowBox[{"\"\<circle\>\"", ",", " ", "a_"}], "]"}], "\[RuleDelayed]", 
    RowBox[{"svgElement", "[", 
     RowBox[{"\"\<circle\>\"", ",", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"a", ",", " ", 
        RowBox[{
         RowBox[{"FaceForm", "[", "Filling", "]"}], "\[Rule]", "None"}]}], 
       "]"}]}], 
     "]"}]}]}]}]], \
"CodeInput",ExpressionUUID->"30703804-b53e-4947-b1cd-9f7a9757f41c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alias", "@", "\n", 
   RowBox[{"CircleBox", "[", "a___", "]"}]}], ":=", "\n", "\t", 
  RowBox[{
  "Circle", "[", "a", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"c11c4015-96d3-4fb9-a7da-3b94b62771a2"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Ellipsoid\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"7c1186e8-4d97-4b9d-ae69-18ba21da301a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alias", "@", "\n", 
   RowBox[{"Ellipsoid", "[", 
    RowBox[{"center_", ",", " ", "radii_", ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"svgEllipsoid", "[", 
   RowBox[{
    RowBox[{"adjustCoord", "@", "center"}], ",", " ", "radii", ",", " ", 
    "ops"}], "]"}]}]], \
"CodeInput",ExpressionUUID->"af3c094c-9fd0-4da8-a806-929bae52f8b3"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Rectangle\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e174626d-f2ad-47c0-91e7-31850c85d07b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alias", "@", "\n", 
   RowBox[{"Rectangle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xmin_", ",", " ", "ymin_"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"xmax_", ",", " ", "ymax_"}], "}"}], ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"svgRect", "[", 
   RowBox[{
    RowBox[{"adjustCoord", "@", 
     RowBox[{"{", 
      RowBox[{"xmin", ",", " ", "ymin"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xmax", "-", "xmin"}], ",", " ", 
      RowBox[{"ymax", "-", "ymin"}]}], "}"}], ",", " ", "ops"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"60474ede-4095-44d9-84fe-3655fa157d36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alias", "@", "\n", 
   RowBox[{"Rectangle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xmin_", ",", " ", "ymin_"}], "}"}], ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"svgRect", "[", 
   RowBox[{
    RowBox[{"adjustCoord", "@", 
     RowBox[{"{", 
      RowBox[{"xmin", ",", " ", "ymin"}], "}"}]}], ",", " ", 
    RowBox[{"Lookup", "[", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"{", "ops", "}"}]}], ",", " ", "ImageSize", ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "1"}], "}"}]}], "]"}], ",", " ", "ops"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8c8372a2-3a66-4e0f-9000-627ede366050"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "@", "\n", 
    RowBox[{"RectangleBox", "[", "a___", "]"}]}], ":=", "\n", "\t", 
   RowBox[{"Rectangle", "[", "a", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"8adf0bc1-eeba-4a5e-80c4-14bf4c9333df"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Polygon\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"95043227-a482-431c-a2ac-1159c6f86c3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"alias", "@", "\n", 
   RowBox[{"Polygon", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_", "?", "NumericQ"}], ",", " ", 
          RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}], ",", " ", 
     
     RowBox[{"ops", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"svgPolygon", "[", 
   RowBox[{
    RowBox[{"adjustCoord", "@", "pts"}], ",", " ", "ops"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"alias", "@", "\n", 
   RowBox[{"Polygon", "[", 
    RowBox[{
     RowBox[{"poly", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"_", "?", "NumericQ"}], ",", " ", 
            RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}], ".."}], 
       "}"}]}], ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"svgPolygon", "[", 
     RowBox[{
      RowBox[{"adjustCoord", "@", "#"}], ",", " ", "ops"}], "]"}], "&"}], "/@",
    "poly"}]}]}], \
"CodeInput",ExpressionUUID->"e76c1ce5-dd07-4b2c-af92-f610e121b732"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "@", "\n", 
    RowBox[{"PolygonBox", "[", "a___", "]"}]}], ":=", "\n", "\t", 
   RowBox[{"Polygon", "[", "a", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"6cb7a2de-b481-4a69-aceb-b88eef56e495"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Line\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9f7dd0e3-6dc7-49c9-acfa-c0e436caf3f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "[", "True", "]"}], "@", "\n", 
   RowBox[{"Line", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_", "?", "NumericQ"}], ",", " ", 
          RowBox[{"_", "?", "NumericQ"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_", "?", "NumericQ"}], ",", " ", 
          RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"svgLine", "[", 
   RowBox[{
    RowBox[{"adjustCoord", "@", "pts"}], ",", " ", "ops"}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"183cb89a-84be-40b5-8a64-0609d97771b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "[", "True", "]"}], "@", "\n", 
   RowBox[{"Line", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_", "?", "NumericQ"}], ",", " ", 
          RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}], ",", " ", 
     
     RowBox[{"ops", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dat", "=", 
      RowBox[{"adjustCoord", "@", "pts"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"svgPolyline", "[", 
     RowBox[{
      RowBox[{"adjustCoord", "@", "pts"}], ",", " ", 
      RowBox[{
       RowBox[{"FaceForm", "[", "Filling", "]"}], "\[Rule]", "None"}], ",", 
      " ", "ops"}], "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"0eabc654-a76d-41be-890e-b808153e4273"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "@", "\n", 
    RowBox[{"LineBox", "[", "a___", "]"}]}], ":=", "\n", "\t", 
   RowBox[{"LineBox", "[", "a", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"c1696b4f-f482-4654-96c0-fad57a7f0dc1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Arrow\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"5782753b-2ffb-44f6-ab48-c48496dc9b38"],

Cell[BoxData[
 RowBox[{"arrowMarker", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"2f3baff9-d267-4c62-a7fa-005456d9253e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"arrowMarker", "[", 
   RowBox[{"ops", ":", 
    RowBox[{"opsPat", "[", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"heads", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"ops", ",", " ", 
        RowBox[{"EdgeForm", "@", "Arrowheads"}], ",", " ", "ops"}], "]"}]}], 
     "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"svgMarker", "[", 
     RowBox[{
      RowBox[{"\"\<arrow-\>\"", "<>", 
       RowBox[{"StringTake", "[", 
        RowBox[{
         RowBox[{"ToString", "@", 
          RowBox[{"Hash", "@", "ops"}]}], ",", " ", "5"}], "]"}]}], ",", "\n",
       "\t\t\t", 
      RowBox[{"svgPath", "@", "\"\<M0,0 L0,6 L9,3 z\>\""}], ",", "\n", "\t", 
      "\t\t", 
      RowBox[{"\"\<markerWidth\>\"", "\[Rule]", "10"}], ",", "\n", "\t", 
      "\t\t", 
      RowBox[{"\"\<markerHeight\>\"", "\[Rule]", "10"}], ",", "\n", "\t", 
      "\t\t", 
      RowBox[{"\"\<refX\>\"", "\[Rule]", "0"}], ",", "\n", "\t", "\t\t", 
      RowBox[{"\"\<refY\>\"", "\[Rule]", "0"}], ",", "\n", "\t", "\t\t", 
      RowBox[{"\"\<orient\>\"", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
      "\t\t", 
      RowBox[{"\"\<markerUnits\>\"", "->", "\"\<strokeWidth\>\""}], ",", "\n",
       "\t\t\t", "ops"}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"84a17e85-d0e4-43c8-9896-f0d1bcaa40c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "[", "True", "]"}], "@", "\n", 
   RowBox[{"Arrow", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_", "?", "NumericQ"}], ",", " ", 
          RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}], ",", " ", 
     
     RowBox[{"setBack", ":", 
      RowBox[{"notOp", "[", "]"}], ":", "Automatic"}], ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"I", "'"}], "m", " ", "ignoring", " ", "setBack", " ", "for", 
     " ", "now", " ", "but", " ", 
     RowBox[{"I", "'"}], "ll", " ", "have", " ", "to", " ", "handle", " ", 
     "it", " ", "some", " ", "day"}], "..."}], " ", "*)"}], "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mark", "=", 
      RowBox[{"arrowMarker", "[", "ops", "]"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Sow", "@", "mark"}], ";", "\n", "\t\t", 
     RowBox[{"Line", "[", 
      RowBox[{"pts", ",", " ", "ops", ",", " ", 
       RowBox[{"\"\<marker\>\"", "\[Rule]", 
        RowBox[{"URL", "[", 
         RowBox[{"mark", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"b68d4597-cc1f-40ad-a54f-0f43696a2ee8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "@", "\n", 
    RowBox[{"ArrowBox", "[", "a___", "]"}]}], ":=", "\n", "\t", 
   RowBox[{"Arrow", "[", "a", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"0c484dc1-5c0e-47a3-ab7e-88296943d727"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]GraphicsComplex\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f4bbd4a8-570c-407b-b597-9722e4c01f15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alias", "@", "\n", 
   RowBox[{"g", ":", 
    RowBox[{"GraphicsComplex", "[", 
     RowBox[{"pts_", ",", " ", "data_", ",", " ", "o___"}], "]"}]}]}], ":=", 
  "\n", "\t", 
  RowBox[{"toSVGCore", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Flatten", "@", 
     RowBox[{"Replace", "[", 
      RowBox[{
       RowBox[{"Normal", "@", "g"}], ",", "\n", "\t", "\t\t", 
       RowBox[{"gc_GraphicsComplex", ":>", "\n", "\t", "\t\t\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"map", "=", 
            RowBox[{"AssociationThread", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "@", "pts"}], "]"}], ",", " ", "pts"}], 
             "]"}]}], "}"}], ",", "\n", "\t", "\t\t\t\t", 
          RowBox[{"data", "/.", "map"}]}], " ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"this", " ", 
            RowBox[{"isn", "'"}], "t", " ", "actually", " ", "going", " ", 
            "to", " ", "be", " ", "entirely", " ", "clean"}], ",", " ", 
           RowBox[{"but", " ", 
            RowBox[{"it", "'"}], "s", " ", "good", " ", "enough", " ", "for", 
            " ", "now"}]}], " ", "*)"}], "\n", "\t\t\t\t\t", "]"}]}]}], "\n", 
      "\t\t\t", "]"}]}], ",", "\n", "\t\t", 
    RowBox[{"{", "o", "}"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"90b57948-a3d4-41b5-8134-cbfd6a5f1c51"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "@", "\n", 
    RowBox[{"GraphicsComplexBox", "[", "a___", "]"}]}], ":=", "\n", "\t", 
   RowBox[{"GraphicsComplex", "[", "a", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"9681ecbd-05d1-4342-acc7-24b2fda1c6f4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Text\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"23599dc2-b90b-45f7-b210-c32982c9a1b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$fontSettings", "=", 
   RowBox[{"{", 
    RowBox[{
    "FontSize", ",", " ", "FontWeight", ",", " ", "FontSlant", ",", " ", 
     "FontFamily"}], "}"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"d23b8bf3-309c-44aa-83ee-5595e66c9889"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prepTextStyles", "[", "bops_", "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"asd", "=", 
      RowBox[{"Association", "@", "bops"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Style", "->", "\n", "\t\t\t\t", 
       RowBox[{"Normal", "@", 
        RowBox[{
         RowBox[{"DeleteCases", "[", "None", "]"}], "@", "\n", "\t", "\t", 
         "\t\t\t", 
         RowBox[{"Join", "[", "\n", "\t", "\t", "\t\t\t\t", 
          RowBox[{
           RowBox[{"<|", "\n", "\t", "\t", "\t\t\t\t\t", 
            RowBox[{
            "\"\<font\>\"", "\[Rule]", "\n", "\t", "\t", "\t\t\t\t\t\t", 
             RowBox[{"StringTrim", "@", 
              RowBox[{"StringDelete", "[", "\n", "\t", "\t", "\t\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"CSSGenerate", "@", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"DeleteCases", "[", "None", "]"}], "@", "\n", "\t",
                    "\t", "\t\t\t\t\t\t\t\t", 
                   RowBox[{
                   "AssociationThread", "[", "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "$fontSettings", ",", "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{
                    "asd", ",", " ", "$fontSettings", ",", " ", "None"}], 
                    "]"}]}], "\n", "\t", "\t", "\t\t\t\t\t\t\t\t\t", 
                    "]"}]}]}]}], ",", "\n", "\t", "\t", "\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Except", "[", "WhitespaceCharacter", "]"}], 
                    ".."}], "~~", "\"\<:\>\""}], ")"}], "|", "\"\<;\>\""}]}], 
               "\n", "\t", "\t", "\t\t\t\t\t\t\t", "]"}]}]}], "\n", "\t", 
            "\t", "\t\t\t\t\t", "|>"}], ",", "\n", "\t", "\t", "\t\t\t\t", 
           RowBox[{"KeyDrop", "[", "\n", "\t", "\t", "\t\t\t\t\t", 
            RowBox[{"asd", ",", "\n", "\t", "\t", "\t\t\t\t\t", 
             RowBox[{"Prepend", "[", 
              RowBox[{"$fontSettings", ",", " ", "FontColor"}], "]"}]}], "\n",
             "\t\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t\t", "]"}]}]}]}], 
      ",", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"Lookup", "[", 
         RowBox[{"bops", ",", " ", "FontColor", ",", " ", "Nothing"}], "]"}], 
        ",", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"c_", "?", "ColorQ"}], ":>", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FaceForm", "[", "Filling", "]"}], "\[Rule]", "c"}], 
          ")"}]}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "}"}]}], "\n",
    "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"dfd0f068-2335-4514-93c0-b4d3ba03bf63"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alias", "@", "\n", 
   RowBox[{"Text", "[", 
    RowBox[{"body_", ",", " ", "coord_", ",", " ", 
     RowBox[{"diffs", ":", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_", ",", " ", "_"}], "}"}], "|", "None"}], ":", "None"}], 
     ",", " ", 
     RowBox[{"o", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"bops", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"body", ",", " ", "_Style"}], "]"}], ",", " ", 
         RowBox[{"List", "@@", 
          RowBox[{"Rest", "@", "body"}]}], ",", " ", 
         RowBox[{"{", "}"}]}], "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"boo", "=", 
       RowBox[{"toNotStupidString", "@", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"body", ",", " ", "_Style"}], "]"}], ",", " ", 
          RowBox[{"First", "@", "body"}], ",", " ", "body"}], "]"}]}]}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"id", "=", 
       RowBox[{"ToString", "@", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"100", ",", " ", "999"}], "}"}], "]"}]}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"pos", "=", "\n", "\t\t\t\t", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"diffs", "===", "None"}], ",", " ", "\n", "\t", "\t\t\t\t", 
          
          RowBox[{"{", "}"}], ",", "\n", "\t", "\t\t\t\t", 
          RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Which", "[", "\n", "\t", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"diffs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ">=", ".5"}], ",", "\n", "\t",
               "\t\t\t\t\t\t\t", 
              RowBox[{"\"\<text-anchor\>\"", "\[Rule]", "\"\<end\>\""}], ",", 
              "\n", "\t", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"diffs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "<=", 
               RowBox[{"-", ".5"}]}], ",", "\n", "\t", "\t\t\t\t\t\t\t", 
              RowBox[{"\"\<text-anchor\>\"", "\[Rule]", "\"\<start\>\""}], 
              ",", "\n", "\t", "\t\t\t\t\t\t", "True", ",", "\n", "\t", 
              "\t\t\t\t\t\t\t", 
              RowBox[{"\"\<text-anchor\>\"", "\[Rule]", "\"\<middle\>\""}]}], 
             "\n", "\t", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{"Which", "[", "\n", "\t", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"diffs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">=", ".5"}], ",", "\n", "\t",
               "\t\t\t\t\t\t\t", 
              RowBox[{
              "\"\<dominant-baseline\>\"", "\[Rule]", "\"\<hanging\>\""}], 
              ",", "\n", "\t", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"diffs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "<=", 
               RowBox[{"-", ".5"}]}], ",", "\n", "\t", "\t\t\t\t\t\t\t", 
              RowBox[{
              "\"\<dominant-baseline\>\"", "\[Rule]", "\"\<baseline\>\""}], 
              ",", "\n", "\t", "\t\t\t\t\t\t", "True", ",", "\n", "\t", 
              "\t\t\t\t\t\t\t", 
              RowBox[{
              "\"\<dominant-baseline\>\"", "\[Rule]", "\"\<middle\>\""}]}], 
             "\n", "\t", "\t\t\t\t\t\t", "]"}]}], "\n", "\t", "\t\t\t\t\t", 
           "}"}]}], "\n", "\t", "\t\t\t\t", "]"}]}]}]}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{"svgText", "[", "\n", "\t\t\t\t", 
     RowBox[{"boo", ",", " ", "\n", "\t\t\t\t", 
      RowBox[{"adjustCoord", "@", "coord"}], ",", " ", "\n", "\t\t\t\t", 
      "pos", ",", " ", "\n", "\t\t\t\t", 
      RowBox[{"DeleteCases", "[", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{"Flatten", "@", "\n", "\t\t\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
          RowBox[{"o", ",", " ", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{"prepTextStyles", "@", "bops"}]}], "\n", "\t", 
          "\t\t\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"EdgeForm", "[", "Thickness", "]"}], "\[Rule]", "_"}]}], 
       "\n", "\t", "\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", 
   "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"f7273db9-3d59-4afb-a142-14d20c030578"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Tooltip\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"1d0a3487-c063-4ffa-9834-9596fa95069d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alias", "@", "\n", 
   RowBox[{"Tooltip", "[", 
    RowBox[{"body_", ",", " ", "spec_", ",", " ", 
     RowBox[{"o", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"svgGroup", "[", "\n", "\t\t", 
   RowBox[{"{", "\n", "\t\t\t", 
    RowBox[{
     RowBox[{"svgTitle", "[", "spec", "]"}], ",", "\n", "\t", "\t\t", 
     RowBox[{"toSVGCore", "[", 
      RowBox[{"body", ",", " ", "o"}], "]"}]}], "\n", "\t", "\t\t", "}"}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"9ee46067-513d-469d-9b98-f97a6a3a14a9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Dynamic\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"026e1bd3-084a-4b05-a88e-802a9a4a16cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "@", "\n", 
    RowBox[{"Dynamic", "[", 
     RowBox[{"body_", ",", " ", 
      RowBox[{"blah", ":", 
       RowBox[{"notOp", "[", "]"}], ":", "Automatic"}], ",", " ", 
      RowBox[{"o", ":", 
       RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", "body"}], 
  ";"}]], "CodeInput",ExpressionUUID->"0d8fa1b1-6ce1-4510-a561-130b856c949c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]TransparentObjects\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b723baba-1c73-49c8-8396-b6a02291522a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "@", "\n", 
    RowBox[{"StatusArea", "[", 
     RowBox[{"body_", ",", " ", "spec_", ",", " ", 
      RowBox[{"o", ":", 
       RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", "body"}], 
  ";"}]], "CodeInput",ExpressionUUID->"383efe5c-2551-4012-a537-89f747f5bfac"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Rotate\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"71bb02f2-a34c-4cf3-974d-7e5deb69df22"],

Cell["\<\
\[LeftCeiling]
\tThis doesn\[CloseCurlyQuote]t actually work yet...
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"b2506e7a-2988-4e92-947c-c904298fd2c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alias", "@", "\n", 
   RowBox[{"Rotate", "[", 
    RowBox[{"g_", ",", " ", "q_"}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"Append", "[", 
   RowBox[{"g", ",", " ", 
    RowBox[{"TransformationFunction", "\[Rule]", 
     RowBox[{"Rotate", "[", 
      RowBox[{"q", "*", "Degree"}], "]"}]}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"6f73e926-cbc5-45f9-897b-8f574ce25961"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Annotation\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"45fc7e3a-b615-42ce-806d-10fee3fc2979"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alias", "@", "\n", 
    RowBox[{"Annotation", "[", 
     RowBox[{"a_", ",", " ", "d_", ",", " ", "e___"}], "]"}]}], ":=", "\n", 
   "\t", 
   RowBox[{"toSVGCore", "[", 
    RowBox[{"a", ",", "\n", "\t\t", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<AnnotationData\>\"", "\[Rule]", "d"}], ",", " ", "e"}], 
       "}"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"c539acce-d1d0-41af-9eb6-8474dbcebc38"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Paths\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"8663b581-c2ff-42e2-87bf-b34832058b1c"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]cleanPathCoords\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"94ef32a6-dc00-44ce-acef-f80b5104777e"],

Cell[BoxData[{
 RowBox[{"cleanPathCoords", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"cleanPathCoords", "[", 
   RowBox[{"d_String", ",", " ", "view_", ",", " ", "cbs_"}], "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"vb", " ", "=", " ", "\n", "\t\t\t\t", 
       RowBox[{"ToExpression", "@", 
        RowBox[{"StringSplit", "@", "\n", "\t\t\t\t\t", 
         RowBox[{"Lookup", "[", 
          RowBox[{"view", ",", " ", "\"\<viewbox\>\"", ",", " ", 
           RowBox[{"Lookup", "[", 
            RowBox[{"view", ",", " ", "\"\<viewBox\>\""}], "]"}]}], 
          "]"}]}]}]}], ",", "\n", "\t\t\t", 
      RowBox[{"wh", " ", "=", " ", 
       RowBox[{"ToExpression", "@", 
        RowBox[{"StringTrim", "[", 
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"view", ",", " ", 
            RowBox[{"{", 
             RowBox[{"\"\<width\>\"", ",", " ", "\"\<height\>\""}], "}"}]}], 
           "]"}], ",", " ", "\"\<pt\>\""}], "]"}]}]}], ",", "\n", "\t\t\t", 
      "shifts", ",", "\n", "\t\t\t", "scales", ",", "\n", "\t\t\t", 
      RowBox[{"crd1", " ", "=", " ", 
       RowBox[{"StringCases", "[", 
        RowBox[{"d", ",", " ", 
         RowBox[{"NumberString", "~~", "\"\< \>\"", "~~", "NumberString"}]}], 
        "]"}]}], ",", "\n", "\t\t\t", "crdLists", ",", "\n", "\t\t\t", "crd2",
       ",", "\n", "\t\t\t", "crd3", ",", "\n", "\t\t\t", "cb2"}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"crdLists", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"Internal`StringToDouble", ",", " ", 
        RowBox[{"StringSplit", "[", "crd1", "]"}], ",", " ", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"cb2", " ", "=", " ", 
      RowBox[{"CoordinateBounds", "[", "crdLists", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"shifts", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cb2", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
        RowBox[{"cbs", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "}"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"scales", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Subtract", "@@", 
          RowBox[{"Transpose", "[", "cbs", "]"}]}], "//", "Abs"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Subtract", "@@", 
          RowBox[{"Transpose", "[", "cb2", "]"}]}], "//", "Abs"}], ")"}]}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"crd2", "=", "\n", "\t\t\t", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"$svgViewShift", "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", " ", 
             RowBox[{"-", "1"}]}], "}"}], "*", "$svgViewShift"}]}], "}"}], 
        ",", "\n", "\t\t\t\t", 
        RowBox[{"adjustCoord", "@", "\n", "\t\t\t\t\t", 
         RowBox[{"Map", "[", "\n", "\t", "\t", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"scales", "*", 
              RowBox[{"(", 
               RowBox[{"#", "-", 
                RowBox[{"shifts", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "+", 
             RowBox[{"shifts", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", "\n", 
           "\t\t\t\t\t\t", "crdLists"}], "\n", "\t\t\t\t\t\t", "]"}]}]}], 
       "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"crd2", " ", "=", " ", 
      RowBox[{"adjustCoordC", "[", 
       RowBox[{"crd2", ",", " ", "$svgPlotRange", ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0"}], "}"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"crd3", "=", "\n", "\t\t\t", 
      RowBox[{"Map", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\< \>\"", "<>", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{"StringPadRight", "[", 
             RowBox[{"#", ",", " ", "8", ",", " ", "\"\<0\>\""}], "]"}], ",", 
            " ", "8"}], "]"}], "&"}], "/@", "\n", "\t\t\t\t\t", 
         RowBox[{"Map", "[", 
          RowBox[{"Internal`DoubleToString", ",", " ", "crd2", ",", " ", 
           RowBox[{"{", "2", "}"}]}], "]"}]}]}], "\n", "\t\t\t\t", "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"d", ",", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{"crd1", "\[Rule]", "crd3"}], "]"}]}], "]"}]}]}], "\n", "\t\t",
    "]"}]}]}], \
"CodeInput",ExpressionUUID->"73b2c91c-4b0a-45d8-8b4e-660cc5f720ce"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]parsePathStyles\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"a743851e-d102-430f-9de6-74070ed7c28a"],

Cell[BoxData[{
 RowBox[{"parsePathStyles", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parsePathStyles", "[", "styles_String", "]"}], ":=", "\n", "\t", 
   RowBox[{"\"\<style\>\"", "\[Rule]", "\n", "\t\t", 
    RowBox[{
     RowBox[{"StringRiffle", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Replace", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"StringTrim", ",", " ", 
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{"styles", ",", " ", "\"\<;\>\""}], "]"}], ",", " ", 
             "\"\<:\>\""}], "]"}]}], "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"k", ":", 
               RowBox[{"(", 
                RowBox[{"\"\<fill-rule\>\"", "|", "\"\<stroke\>\""}], ")"}]}],
               ",", " ", "r_"}], "}"}], "\[RuleDelayed]", 
            RowBox[{"(", 
             RowBox[{"k", "<>", "\"\<:\>\"", "<>", "r"}], ")"}]}], ",", "\n", 
           "\t", "\t", "\t\t\t", 
           RowBox[{"_", "\[Rule]", "Nothing"}]}], "\n", "\t", "\t", "\t\t\t", 
          "}"}], ",", "\n", "\t", "\t\t\t", "1"}], "\n", "\t", "\t\t\t", 
        "]"}], ",", "\n", "\t\t\t", "\"\<;\>\""}], "\n", "\t\t\t", "]"}], 
     "<>", "\"\<;\>\""}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"parsePathStyles", "[", "_", "]"}], ":=", 
  "Nothing"}]}], \
"CodeInput",ExpressionUUID->"4a795768-02e0-4b55-9f77-27b1baa9e8b6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Path Elements\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"d0326544-0674-4f30-9b67-e0877fe0d517"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alias", "@", "\n", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"h", ":", 
      RowBox[{"FilledCurve", "|", "BezierCurve", "|", "JoinedCurve"}]}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"a", ":", 
      RowBox[{
       RowBox[{"Except", "[", 
        RowBox[{"_", "?", "OptionQ"}], "]"}], "..."}]}], ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"opsPat", "[", "]"}]}]}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"coordlists", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{"a", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"_", "?", "NumericQ"}], ",", " ", 
           RowBox[{"_", "?", "NumericQ"}]}], "}"}], ",", " ", "Infinity"}], 
        "]"}]}], ",", "\n", "\t", "\t\t", "cbs", ",", "\n", "\t", "\t\t", 
      "ims"}], "\n", "\t", "\t", "}"}], ",", "\n", "\t", "\t", 
    RowBox[{
     RowBox[{"cbs", " ", "=", " ", 
      RowBox[{"CoordinateBounds", "[", "coordlists", "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"FirstCase", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"ImportString", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"ExportString", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Graphics", "[", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"h", "[", "a", "]"}], ",", "\n", "\t\t\t\t\t\t", 
             RowBox[{"PlotRange", "\[Rule]", "cbs"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Subtract", "@@", 
                 RowBox[{"Transpose", "[", "cbs", "]"}]}], "//", "Abs"}], 
               ")"}]}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", 
           "\t\t\t\t\t", "\"\<SVG\>\""}], "\n", "\t", "\t", "\t\t\t", "]"}], 
         ",", "\n", "\t", "\t", "\t  ", "\"\<XML\>\""}], "\n", "\t", "\t\t  ",
         "]"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"XMLElement", "[", 
         RowBox[{"\"\<svg\>\"", ",", " ", "view_", ",", " ", "p_"}], "]"}], ":>",
         "\n", "\t\t\t\t", 
        RowBox[{"FirstCase", "[", 
         RowBox[{"p", ",", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<path\>\"", ",", " ", "data_", ",", " ", "_"}], "]"}],
            ":>", "\n", "\t\t\t\t\t\t", 
           RowBox[{"svgPath", "[", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"cleanPathCoords", "[", "\n", "\t\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Lookup", "[", 
                RowBox[{"data", ",", " ", "\"\<d\>\""}], "]"}], ",", "\n", 
               "\t\t\t\t\t\t\t\t", "view", ",", "\n", "\t\t\t\t\t\t\t\t", 
               "cbs"}], "\n", "\t\t\t\t\t\t\t\t", "]"}], ",", " ", "\n", 
             "\t\t\t\t\t\t\t", 
             RowBox[{"Flatten", "@", 
              RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
               RowBox[{"ops", ",", "\n", "\t\t\t\t\t\t\t\t", 
                RowBox[{"parsePathStyles", "[", 
                 RowBox[{"Lookup", "[", 
                  RowBox[{"data", ",", " ", "\"\<style\>\""}], "]"}], "]"}]}],
                "\n", "\t\t\t\t\t\t\t\t", "}"}]}]}], "\n", "\t\t\t\t\t\t\t", 
            "]"}]}], ",", "\n", "\t\t\t\t\t", "Nothing", ",", "\n", 
          "\t\t\t\t\t", "Infinity"}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
       "\t\t\t", "Nothing", ",", "\n", "\t\t\t", "Infinity"}], "\n", "\t\t\t",
       "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"46aadd91-e314-4f7e-8b0e-302592d6657e"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ToSVG\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"a5c0419d-e896-4b4b-8991-3006ade3d00b"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ToSVG\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"af0b2b9a-ad97-4c6d-ae9f-0d5a1e6df2ef"],

Cell["\<\
\[LeftCeiling]
\tThis is the main function. Currently I only allow Graphics to be passed in.
\tIt parse the directives into rules which are all wrapped in FaceForm or \
EdgeForm to specify to which they should apply.
\tThese then get fed to the DSL convert, then finally get pushed through to \
the XMLElement generator. The latter probably needs the most work.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"7e4272db-13d2-463c-8e2b-56b0596c8e93"],

Cell[BoxData[{
 RowBox[{"ToSVG", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"ToSVG", "[", 
   RowBox[{"g_Graphics", ",", " ", "\n", "\t", 
    RowBox[{"defaultDirectives", ":", 
     RowBox[{"Except", "[", 
      RowBox[{"_", "?", "OptionQ"}], "]"}], ":", "Automatic"}], ",", "\n", 
    "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"$defaultDirectives", "=", "\n", "\t\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{"defaultDirectives", ",", " ", "\n", "\t\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Automatic", "\[RuleDelayed]", "$defaultDirectives"}], ",", 
          "\n", "\t\t\t\t\t\t", 
          RowBox[{"None", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "\n", "\t\t\t\t\t\t", "}"}]}], "\n", 
       "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"Module", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t\t\t", 
       RowBox[{
       "imsize", ",", "\n", "\t", "\t\t\t", "viewbox", ",", "\n", "\t", 
        "\t\t\t", "pr", ",", "\n", "\t", "\t\t\t", "scalingFactors", ",", 
        "\n", "\t", "\t\t\t", "g2", ",", "\n", "\t", "\t\t\t", "svgBody", ",",
         "\n", "\t\t\t\t", "defs", ",", "\n", "\t\t\t\t", "opr", ",", "\n", 
        "\t\t\t\t", "viewshift"}], "\n", "\t\t\t\t", "}"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "pr", ",", " ", "viewbox", ",", " ", "imsize", ",", " ", 
          "scalingFactors", ",", " ", "g2", ",", "\n", "\t\t\t\t", "opr", ",",
           " ", "viewshift"}], "\n", "\t\t\t\t", "}"}], "=", "\n", "\t\t\t\t", 
        RowBox[{"prepareSVGGraphics", "[", 
         RowBox[{"g", ",", " ", "ops"}], "]"}]}], ";", "\n", "\t", "\t\t", 
       RowBox[{"Block", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"$origPlotRange", "=", "opr"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"$svgPlotRange", "=", "pr"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"$svgViewShift", "=", "viewshift"}], ",", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"$svgViewBox", "=", "viewbox"}], ",", "\n", "\t", 
           "\t\t\t\t", 
           RowBox[{"$svgViewSize", "=", "imsize"}], ",", "\n", "\t", 
           "\t\t\t\t", 
           RowBox[{"$svgScaling", "=", "scalingFactors"}]}], "\n", "\t", 
          "\t\t\t\t", "}"}], ",", "\n", "\t", "\t\t\t", 
         RowBox[{
          RowBox[{"Quiet", "[", "\n", "\t", "\t", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"svgBody", "=", 
              RowBox[{"Reap", "[", 
               RowBox[{"toXML", "/@", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"toSVGCore", "[", 
                  RowBox[{
                   RowBox[{"First", "@", "g2"}], ",", " ", 
                   RowBox[{"Flatten", "@", 
                    RowBox[{"{", "ops", "}"}]}]}], "]"}]}]}], "]"}]}], ";", 
             "\n", "\t", "\t\t\t\t", 
             RowBox[{"defs", "=", 
              RowBox[{"Flatten", "@", 
               RowBox[{"svgBody", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}]}], ",", "\n", "\t", "\t", 
            "\t\t\t", 
            RowBox[{"{", "\n", "\t", "\t", "\t\t\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"optx", " ", "messages", " ", 
                RowBox[{"don", "'"}], "t", " ", "matter", " ", "here"}], ",", 
               " ", 
               RowBox[{
               "so", " ", "we", " ", "quiet", " ", "them", " ", "if", " ", 
                "they", " ", "show", " ", "up"}]}], " ", "*)"}], "\n", "\t", 
             "\t", "\t\t\t\t", 
             RowBox[{
              RowBox[{"GraphicsComplex", "::", "optx"}], ",", "\n", "\t", 
              "\t", "\t\t\t\t", 
              RowBox[{"GraphicsComplex", "::", "optrs"}]}], "\n", "\t", "\t", 
             "\t\t\t\t", "}"}]}], "\n", "\t", "\t", "\t\t\t", "]"}], ";", 
          "\n", "\t", "\t", "\t\t", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<svg\>\"", ",", "\n", "\t", "\t", "\t", "\t\t", 
            RowBox[{"Flatten", "@", 
             RowBox[{"{", "\n", "\t", "\t", "\t", "\t\t\t", 
              RowBox[{
               RowBox[{"Thread", "[", "\n", "\t", "\t", "\t", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<width\>\"", ",", "\"\<height\>\""}], "}"}], "->", 
                 RowBox[{
                  RowBox[{"Map", "[", "toNotStupidString", "]"}], "@", 
                  RowBox[{"Floor", "@", "imsize"}]}]}], "\n", "\t", "\t", 
                "\t", "\t\t\t\t", "]"}], ",", "\n", "\t", "\t", "\t", 
               "\t\t\t", 
               RowBox[{"\"\<viewbox\>\"", "\[Rule]", 
                RowBox[{"StringRiffle", "@", 
                 RowBox[{
                  RowBox[{"Map", "[", "toNotStupidString", "]"}], "@", 
                  "viewbox"}]}]}], ",", "\n", "\t", "\t\t\t\t\t", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "\"\<preserveAspectRatio\>\"", "\[Rule]", "\"\<none\>\""}], 
                 ","}], "*)"}], "\n", "\t", "\t\t\t\t\t", 
               RowBox[{"\"\<version\>\"", "\[Rule]", "\"\<1.1\>\""}], ",", 
               "\n", "\t", "\t", "\t", "\t\t\t", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<http://www.w3.org/2000/xmlns/\>\"", ",", 
                  "\"\<xmlns\>\""}], "}"}], "\[Rule]", 
                "\"\<http://www.w3.org/2000/svg\>\""}]}], "\n", 
              "\t\t\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "defs"}], ">", "0"}], ",", "\n", "\t", 
               "\t", "\t", "\t\t\t", 
               RowBox[{"Prepend", "@", 
                RowBox[{"XMLElement", "[", 
                 RowBox[{
                 "\"\<defs\>\"", ",", "\n", "\t", "\t", "\t", "\t\t\t\t", 
                  RowBox[{"{", "}"}], ",", "\n", "\t", "\t", "\t", "\t\t\t\t", 
                  RowBox[{
                   RowBox[{"toXML", "@*", "toEl"}], "/@", 
                   RowBox[{"DeleteDuplicates", "@", "defs"}]}]}], "\n", "\t", 
                 "\t", "\t", "\t\t\t\t", "]"}]}], ",", "\n", "\t", "\t", "\t",
                "\t\t\t", "Identity"}], "\n", "\t", "\t", "\t", "\t\t\t", 
              "]"}], "@", "\n", "\t", "\t", "\t", "\t\t\t", 
             RowBox[{"svgBody", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", "\t", "\t", "\t\t\t", 
           "]"}]}]}], "\n", "\t\t\t\t", "]"}]}]}], "\n", "\t\t\t", "]"}]}], 
   "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"5f952b1a-b63a-4f7a-976b-2cbb30a25bec"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]prepareSVGGraphics\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"255b78f8-2b4b-4c10-9c2e-2b707ef31e20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$viewCorner", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0"}], "}"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"28217ee1-5c65-4851-b850-f0ab403bf6ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prepareSVGGraphics", "[", 
   RowBox[{"g_Graphics", ",", " ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"opp", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{"ops", ",", " ", 
          RowBox[{"Options", "[", "g", "]"}]}], "}"}]}]}], ",", "\n", 
      "\t\t\t", "imsize", ",", "\n", "\t\t\t", "viewboxBase", ",", "\n", 
      "\t\t\t", "viewbox", ",", "\n", "\t\t\t", "pr", ",", "\n", "\t", "\t\t",
       "prpad", ",", "\n", "\t", "\t\t", "svgBody", ",", "\n", "\t", "\t\t", 
      "defs", ",", "\n", "\t\t\t", "extra", ",", "\n", "\t\t\t", "$$", ",", 
      "\n", "\t\t\t", "asp", ",", "\n", "\t\t\t", "scalingFactors", ",", "\n",
       "\t\t\t", "gpr", ",", "\n", "\t\t\t", "opr", ",", " ", "oim", ",", " ",
       "viewshift", ",", "\n", "\t\t\t", "corner"}], "\n", "\t\t\t", "}"}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"corner", "=", "\n", "\t\t\t", 
      RowBox[{"Lookup", "[", 
       RowBox[{
        RowBox[{"{", "ops", "}"}], ",", " ", "\"\<ViewBoxCorner\>\"", ",", 
        " ", "$viewCorner"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"opp", "=", 
      RowBox[{"FilterRules", "[", 
       RowBox[{
        RowBox[{"{", "opp", "}"}], ",", " ", 
        RowBox[{"Options", "[", "Graphics", "]"}]}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"asp", "=", 
      RowBox[{"getAspRat", "[", "opp", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"imsize", "=", 
      RowBox[{"getImSize", "[", 
       RowBox[{"opp", ",", " ", "asp"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"gpr", "=", 
      RowBox[{"getPlotRange", "@", "g"}]}], ";", "\n", "\t\t", 
     RowBox[{"opr", "=", "gpr"}], ";", "\n", "\t\t", 
     RowBox[{"viewbox", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Transpose", "@", "gpr"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"prpad", "=", 
      RowBox[{"getPlotRangePad", "[", "opp", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"prpad", ",", " ", "viewbox"}], "}"}], "=", 
      RowBox[{"getViewBox", "[", 
       RowBox[{"viewbox", ",", " ", "prpad", ",", " ", "imsize"}], "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"extra", "=", 
      RowBox[{"axesAndFrame", "[", 
       RowBox[{"opp", ",", " ", "gpr", ",", " ", "prpad"}], "]"}]}], ";", 
     "\n", "\t\t", 
     RowBox[{"scalingFactors", "=", 
      RowBox[{"imsize", "/", 
       RowBox[{"viewbox", "[", 
        RowBox[{"[", 
         RowBox[{"3", ";;", "4"}], "]"}], "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "extra"}], ">", "1"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"$$", ",", " ", "viewbox"}], "}"}], "=", 
         RowBox[{"getViewBox", "[", 
          RowBox[{"viewbox", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", ".10", "]"}], ",", " ", 
             RowBox[{"Scaled", "[", "0", "]"}]}], "}"}], ",", " ", "imsize"}],
           "]"}]}], ";"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"viewbox", "*=", 
      RowBox[{"Join", "[", 
       RowBox[{"scalingFactors", ",", " ", "scalingFactors"}], "]"}]}], ";", 
     "\n", "\t\t", 
     RowBox[{"viewboxBase", "=", "viewbox"}], ";", "\n", "\t\t", 
     RowBox[{"viewshift", "=", 
      RowBox[{
       RowBox[{"viewboxBase", "[", 
        RowBox[{"[", 
         RowBox[{";;", "2"}], "]"}], "]"}], "-", "corner"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"viewbox", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"corner", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"corner", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"viewbox", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"viewbox", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ";", "\n", "\t\t", 
     RowBox[{"gpr", "*=", "scalingFactors"}], ";", "\n", "\t\t", 
     RowBox[{"imsize", "=", 
      RowBox[{"Ceiling", "@", 
       RowBox[{"(", 
        RowBox[{"viewbox", "[", 
         RowBox[{"[", 
          RowBox[{"3", ";;", "4"}], "]"}], "]"}], ")"}]}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"gpr", ",", " ", "\n", "\t\t\t", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Floor", "[", 
           RowBox[{"viewbox", "[", 
            RowBox[{"[", 
             RowBox[{";;", "2"}], "]"}], "]"}], "]"}], ",", " ", 
          RowBox[{"Ceiling", "@", 
           RowBox[{"viewbox", "[", 
            RowBox[{"[", 
             RowBox[{"3", ";;", "4"}], "]"}], "]"}]}]}], "}"}]}], ",", " ", 
       "\n", "\t\t\t", "imsize", ",", " ", "scalingFactors", ",", " ", "\n", 
       "\t\t\t", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"g", ",", " ", 
         RowBox[{"1", "->", 
          RowBox[{"{", 
           RowBox[{"extra", ",", " ", 
            RowBox[{"First", "@", "g"}]}], "}"}]}]}], "]"}], ",", "\n", 
       "\t\t\t", "opr", ",", " ", "viewshift"}], "\n", "\t\t\t", "}"}]}]}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"edab59ae-2913-4bfd-a41f-23d46c577557"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getPlotRangePad\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"3011d6c5-6ebc-404c-9b9c-af89ad7718a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getPlotRangePad", "[", "opp_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"OptionValue", "[", 
      RowBox[{"Graphics", ",", " ", "opp", ",", " ", "PlotRangePadding"}], 
      "]"}], ",", "\n", "\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", ":", 
         RowBox[{
          RowBox[{"_", "?", "NumericQ"}], "|", "_Scaled"}]}], 
        "\[RuleDelayed]", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "i"}], "}"}]}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Except", "[", 
         RowBox[{"{", 
          RowBox[{"_", ",", " ", "_"}], "}"}], "]"}], "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", ".02", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".02", "]"}]}], "}"}]}]}], "\n", "\t\t\t", 
      "}"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"e6d1e252-a7b7-4b10-8956-14f40783a52c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getAspRat\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"d2226c10-3a7a-467b-837e-d03fd7f723eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAspRat", "[", "opp_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"OptionValue", "[", 
      RowBox[{"Graphics", ",", " ", "opp", ",", " ", "AspectRatio"}], "]"}], 
     ",", " ", 
     RowBox[{
      RowBox[{"Except", "[", 
       RowBox[{"_", "?", "NumericQ"}], "]"}], "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"fe903c41-1881-4127-8f0f-ba747c511c69"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getImSize\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"857fe254-e2a5-432a-83f6-61c6025032dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getImSize", "[", 
   RowBox[{"opp_", ",", " ", "asp_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"4", "/", "3"}], "*", "\n", "\t\t", 
   RowBox[{"Replace", "[", "\n", "\t\t\t", 
    RowBox[{
     RowBox[{"Replace", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", 
        RowBox[{"Graphics", ",", " ", "opp", ",", " ", "ImageSize"}], "]"}], 
       ",", "\n", "\t", "\t", "\t\t", 
       RowBox[{"{", "\n", "\t", "\t", "\t\t\t", 
        RowBox[{
         RowBox[{"Automatic", ":>", "\n", "\t", "\t", "\t\t\t ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", " ", "asp"}], "}"}], "*", "360"}]}], ",", "\n", 
         "\t", "\t", "\t\t\t", 
         RowBox[{
          RowBox[{"n_", "?", "NumericQ"}], "\[RuleDelayed]", "\n", "\t", "\t",
           "\t\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", " ", "asp"}], "}"}], "*", "n"}]}]}], "\n", 
        "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}], ",", "\n", "\t\t ", 
     RowBox[{"{", "\n", "\t\t \t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"n_", "?", "NumericQ"}], ",", " ", "Automatic"}], "}"}], ":>",
         "\n", "\t\t \t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "asp"}], "}"}], "*", "n"}]}], ",", "\n", 
       "\t\t \t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", 
          RowBox[{"n_", "?", "NumericQ"}]}], "}"}], ":>", "\n", "\t\t \t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"asp", ",", " ", "1"}], "}"}], "*", "n"}]}]}], "\n", 
      "\t\t \t", "}"}]}], "\n", "\t\t ", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"783fd8d8-4fb1-498f-91d8-5b6f3f08afcb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getPlotRange\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"fd657236-9e3b-4c45-9167-421456dc785e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"igetPlotRange", "[", "g_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
      "plop", ",", "\n", "\t\t\t", "cbs", ",", "\n", "\t\t\t", "xdim", ",", 
       "\n", "\t\t\t", "ydim"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"plop", "=", 
       RowBox[{"Lookup", "[", 
        RowBox[{
         RowBox[{"Options", "[", 
          RowBox[{"g", ",", " ", "PlotRange"}], "]"}], ",", " ", "PlotRange", 
         ",", " ", "All"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AllTrue", "[", 
         RowBox[{
          RowBox[{"Flatten", "@", "plop"}], ",", " ", "NumericQ"}], "]"}], 
        ",", "\n", "\t\t\t", "plop", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"cbs", "=", 
          RowBox[{"CoordinateBounds", "@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"g", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"_", "?", "NumericQ"}], ",", " ", 
               RowBox[{"_", "?", "NumericQ"}]}], "}"}], ",", " ", 
             "\[Infinity]"}], "]"}]}]}], ";", "\n", "\t\t\t", 
         RowBox[{"xdim", "=", 
          RowBox[{
           RowBox[{"cbs", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], "-", 
           RowBox[{"cbs", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}]}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"ydim", "=", 
          RowBox[{
           RowBox[{"cbs", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", " ", "2"}], "]"}], "]"}], "-", 
           RowBox[{"cbs", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", " ", "1"}], "]"}], "]"}]}]}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"plop", "=", 
          RowBox[{
           RowBox[{"Nest", "[", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
              RowBox[{"{", "\n", "\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", " ", "_"}], "}"}]}], ",", " ", 
                   RowBox[{"b", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", " ", "_"}], "}"}], "]"}]}]}], "}"}], 
                 "\[RuleDelayed]", 
                 RowBox[{"{", 
                  RowBox[{"a", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"b", ",", " ", "b"}], "}"}]}], "}"}]}], ",", "\n",
                 "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"b", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", " ", "_"}], "}"}], "]"}]}], ",", " ", 
                   RowBox[{"a", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", " ", "_"}], "}"}]}]}], "}"}], 
                 "\[RuleDelayed]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"b", ",", " ", "b"}], "}"}], ",", " ", "a"}], 
                  "}"}]}], ",", "\n", "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", " ", "_"}], "}"}], "]"}]}], ",", " ", 
                   RowBox[{"b", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", " ", "_"}], "}"}], "]"}]}]}], "}"}], 
                 "\[RuleDelayed]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"a", ",", " ", "a"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"b", ",", " ", "b"}], "}"}]}], "}"}]}], ",", "\n",
                 "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"e", ":", 
                  RowBox[{"Except", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", " ", "_"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", " ", "_"}], "}"}]}], "}"}], "]"}]}], 
                 "\[RuleDelayed]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"e", ",", " ", "e"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"e", ",", " ", "e"}], "}"}]}], "}"}]}]}], "\n", 
               "\t\t\t\t\t\t", "}"}], "\n", "\t\t\t\t\t", "]"}], ",", " ", 
             "\n", "\t\t\t\t", "plop", ",", " ", "\n", "\t\t\t\t", "3"}], 
            "]"}], "/.", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"All", "|", "Automatic"}], "\[Rule]", 
             RowBox[{"Scaled", "[", "1", "]"}]}], ")"}]}]}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Replace", "[", 
              RowBox[{
               RowBox[{"plop", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", "\n", 
               "\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"Scaled", "[", "s_", "]"}], "\[RuleDelayed]", 
                RowBox[{
                 RowBox[{"cbs", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], "-", 
                 RowBox[{"xdim", "*", "s"}]}]}]}], "\n", "\t\t\t\t\t\t", 
              "]"}], ",", "\n", "\t\t\t\t\t", 
             RowBox[{"Replace", "[", 
              RowBox[{
               RowBox[{"plop", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], ",", "\n", 
               "\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"Scaled", "[", "s_", "]"}], "\[RuleDelayed]", 
                RowBox[{
                 RowBox[{"cbs", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "+", 
                 RowBox[{"xdim", "*", "s"}]}]}]}], "\n", "\t\t\t\t\t\t", 
              "]"}]}], "\n", "\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Replace", "[", 
              RowBox[{
               RowBox[{"plop", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", " ", "1"}], "]"}], "]"}], ",", "\n", 
               "\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"Scaled", "[", "s_", "]"}], "\[RuleDelayed]", 
                RowBox[{
                 RowBox[{"cbs", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", " ", "2"}], "]"}], "]"}], "-", 
                 RowBox[{"ydim", "*", "s"}]}]}]}], "\n", "\t\t\t\t\t\t", 
              "]"}], ",", "\n", "\t\t\t\t\t", 
             RowBox[{"Replace", "[", 
              RowBox[{
               RowBox[{"plop", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", " ", "2"}], "]"}], "]"}], ",", "\n", 
               "\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"Scaled", "[", "s_", "]"}], "\[RuleDelayed]", 
                RowBox[{
                 RowBox[{"cbs", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", " ", "1"}], "]"}], "]"}], "+", 
                 RowBox[{"ydim", "*", "s"}]}]}]}], "\n", "\t\t\t\t\t\t", 
              "]"}]}], "\n", "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", 
          "}"}]}]}], "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"d312fa14-a18c-4673-987a-d13abcea85bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPlotRange", "[", "g_Graphics", "]"}], ":=", "\n", "\t", 
  RowBox[{"Quiet", "@", 
   RowBox[{"Check", "[", 
    RowBox[{
     RowBox[{"PlotRange", "@", "g"}], ",", " ", 
     RowBox[{"igetPlotRange", "@", "g"}]}], 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"624068c1-b13f-4980-9e66-05f518dbc50c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getViewBox\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"676029fb-a517-4bab-9bfd-2b29b4390e80"],

Cell["\<\
\[LeftCeiling]
\tHandling things like the PlotRangePadding is non-trivial. 
\tThis is probably only like 50% of the way there.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"21787c6c-68cf-4db0-af82-d50fc96a0ff7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getViewBox", "[", 
   RowBox[{"view_", ",", " ", "pad_", ",", " ", "size_"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"viewbox", "=", "view"}], ",", "\n", "\t\t\t", 
      RowBox[{"prpad", "=", "pad"}]}], "\n", "\t\t\t", "}"}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"viewbox", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"viewbox", "[", 
         RowBox[{"[", 
          RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"viewbox", "[", 
          RowBox[{"[", 
           RowBox[{"3", ";;"}], "]"}], "]"}], "-", 
         RowBox[{"viewbox", "[", 
          RowBox[{"[", 
           RowBox[{";;", "2"}], "]"}], "]"}]}]}], "]"}]}], ";", "\n", "\t\t", 
     
     RowBox[{"prpad", "=", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", "\n", "\t\t\t\t", 
       RowBox[{"prpad", ",", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"i", ":", 
              RowBox[{
               RowBox[{"_", "?", "NumericQ"}], "|", "_Scaled"}]}], ",", " ", 
             RowBox[{"j", ":", 
              RowBox[{
               RowBox[{"_", "?", "NumericQ"}], "|", "_Scaled"}]}]}], "}"}], 
           "\[RuleDelayed]", "\n", "\t\t\t\t\t\t", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "/", "2"}], ",", " ", 
                 RowBox[{"j", "/", "2"}]}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "/", "2"}], ",", " ", 
                 RowBox[{"j", "/", "2"}]}], "}"}]}], "}"}], "/.", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Scaled", "[", "a_", "]"}], "/", "2"}], ")"}], 
              "\[RuleDelayed]", 
              RowBox[{"Scaled", "[", 
               RowBox[{"a", "/", "2"}], "]"}]}]}], ")"}]}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"l_List", ",", " ", 
             RowBox[{"e", ":", 
              RowBox[{"Except", "[", "_List", "]"}]}]}], "}"}], ":>", "\n", 
           "\t", "\t\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"l", ",", " ", 
             RowBox[{"{", 
              RowBox[{"e", ",", " ", "e"}], "}"}]}], "}"}]}], ",", "\n", "\t",
           "\t\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"e", ":", 
              RowBox[{"Except", "[", "_List", "]"}]}], ",", " ", "l_List"}], 
            "}"}], ":>", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"e", ",", " ", "e"}], "}"}], ",", " ", "l"}], "}"}]}]}],
          "\n", "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"prpad", "=", "\n", "\t\t\t", 
      RowBox[{"prpad", "//.", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Scaled", "[", "x_", "]"}], ",", " ", "y_"}], "}"}], ":>",
           "\n", "\t\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"viewbox", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "*", "x"}], ",", " ", "y"}], 
           "}"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x_", ",", " ", 
            RowBox[{"Scaled", "[", "y_", "]"}]}], "}"}], ":>", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", 
            RowBox[{
             RowBox[{"viewbox", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "*", "y"}]}], "}"}]}]}], "\n", 
        "\t\t\t\t", "}"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"prpad", ",", "\n", "\t\t\t", 
       RowBox[{"viewbox", "+", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"prpad", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", 
              RowBox[{";;", "2"}]}], "]"}], "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"prpad", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"prpad", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "\n", "\t\t\t", 
      "}"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"da1f9904-d923-47ad-a346-a73537f43359"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]axesAndFrame\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"6372042c-d943-4cbc-b0e5-190f915e6145"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPlotTicksObjects", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xmin_", ",", " ", "xmax_"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"ymin_", ",", " ", "ymax_"}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x0_", ",", " ", "y0_"}], "}"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xbase", ",", " ", "ybase", ",", " ", "ends", ",", " ", "xdiff", ",", 
      " ", "ydiff"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"xbase", "=", 
      RowBox[{
       RowBox[{"Charting`ScaledTicks", "[", 
        RowBox[{"{", 
         RowBox[{"Identity", ",", "Identity"}], "}"}], "]"}], "[", 
       RowBox[{"xmin", ",", " ", "xmax", ",", " ", "25"}], "]"}]}], ";", "\n",
      "\t\t", 
     RowBox[{"ybase", "=", 
      RowBox[{"Rest", "@", 
       RowBox[{
        RowBox[{"Charting`ScaledTicks", "[", 
         RowBox[{"{", 
          RowBox[{"Identity", ",", "Identity"}], "}"}], "]"}], "[", 
        RowBox[{"ymin", ",", " ", "ymax", ",", " ", "25"}], "]"}]}]}], ";", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xbase", ",", " ", "ybase"}], "}"}], "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"MapIndexed", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", " ", "5"}], "]"}], 
              "\[Equal]", "4"}], ",", " ", "\n", "\t\t\t\t\t", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", " ", 
               RowBox[{"3", "\[Rule]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", ",", " ", "1"}], "}"}], "*", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}]}]}], "]"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", " ", 
               RowBox[{"2", "\[Rule]", "\"\<\>\""}]}], "]"}]}], "\n", 
            "\t\t\t\t\t", "]"}], "&"}], ",", "\n", "\t\t\t\t", "#"}], "\n", 
         "\t\t\t\t", "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"xbase", ",", " ", "ybase"}], "}"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"xdiff", "=", 
      RowBox[{"(", 
       RowBox[{"xmax", "-", "xmin"}], ")"}]}], ";", "\n", "\t\t", 
     RowBox[{"ydiff", "=", 
      RowBox[{"(", 
       RowBox[{"ymax", "-", "ymin"}], ")"}]}], ";", "\n", "\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Function", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"ends", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"y0", "-", 
                RowBox[{"ydiff", "*", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", " ", "2"}], "]"}], "]"}]}]}]}], "}"}], 
             ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"y0", "+", 
                RowBox[{"ydiff", "*", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", " ", "1"}], "]"}], "]"}]}]}]}], "}"}]}], 
            "}"}]}], ";", "\n", "\t\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=!=", "\"\<\>\""}], ",", " ",
               "\n", "\t\t\t\t\t\t", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"ToString", "@", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                RowBox[{"ends", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "1.2"}], "}"}]}], "]"}], ",", " ", 
              "\n", "\t\t\t\t\t\t", "Nothing"}], "\n", "\t\t\t\t\t\t", "]"}], 
            ",", " ", "\n", "\t\t\t\t\t", 
            RowBox[{"Line", "[", "ends", "]"}]}], "\n", "\t\t\t\t\t", "}"}]}],
          "\n", "\t\t\t\t", "]"}], "/@", "xbase"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Function", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"ends", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x0", "-", 
                RowBox[{"xdiff", "*", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", " ", "2"}], "]"}], "]"}]}]}], ",", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x0", "+", 
                RowBox[{"xdiff", "*", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", " ", "1"}], "]"}], "]"}]}]}], ",", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}]}], ";", "\n",
           "\t\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=!=", "\"\<\>\""}], ",", " ", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"ToString", "@", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                RowBox[{"ends", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"1.2", ",", " ", "0"}], "}"}]}], "]"}], ",", " ", 
              "Nothing"}], "]"}], ",", " ", "\n", "\t\t\t\t\t", 
            RowBox[{"Line", "[", "ends", "]"}]}], "\n", "\t\t\t\t\t", "}"}]}],
          "\n", "\t\t\t\t", "]"}], "/@", "ybase"}]}], "\n", "\t\t\t", 
      "}"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"4cd136cc-708a-433b-a81c-c82c65277aca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"axesAndFrame", "[", 
   RowBox[{"opp_", ",", " ", "prange_", ",", " ", "pad_"}], "]"}], ":=", "\n",
   "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"pr", "=", 
       RowBox[{"prange", "+", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], "}"}], "*", 
         "pad"}]}]}], ",", "\n", "\t\t\t", "axes", ",", "\n", "\t\t\t", 
      "aticks", ",", "\n", "\t\t\t", "ast", ",", "\n", "\t\t\t", "orgy", ",", 
      "\n", "\t\t\t", "axesLines", ",", "\n", "\t\t\t", "fst", ",", "\n", 
      "\t\t\t", "frame", ",", "\n", "\t\t\t", "frameLines", ",", "\n", 
      "\t\t\t", "axesTicks", ",", "\n", "\t\t\t", "frameTicks", ",", "\n", 
      "\t\t\t", "tst"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"axes", "=", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", 
         RowBox[{"Graphics", ",", " ", "opp", ",", " ", "Axes"}], "]"}], ",", 
        " ", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Automatic", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", "\n", "\t", 
          "\t\t\t\t", 
          RowBox[{
           RowBox[{"e", ":", 
            RowBox[{"Except", "[", 
             RowBox[{"{", 
              RowBox[{"_", ",", " ", "_"}], "}"}], "]"}]}], "\[RuleDelayed]", 
           
           RowBox[{"{", 
            RowBox[{"e", ",", " ", "e"}], "}"}]}]}], "\n", "\t", "\t\t\t\t", 
         "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"orgy", "=", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", 
         RowBox[{"Graphics", ",", " ", "opp", ",", " ", "AxesOrigin"}], "]"}],
         ",", " ", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"e", ":", 
           RowBox[{"Except", "[", 
            RowBox[{"{", 
             RowBox[{"_", ",", " ", "_"}], "}"}], "]"}]}], "\[RuleDelayed]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"prange", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"prange", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", " ", "1"}], "]"}], "]"}]}], "}"}]}], "\n", 
         "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     
     RowBox[{"ast", "=", 
      RowBox[{
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", 
          RowBox[{"Graphics", ",", " ", "opp", ",", " ", "AxesStyle"}], "]"}],
          ",", "\n", "\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", "}"}], "|", "Automatic"}], "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", " ", "Automatic"}], "}"}]}], ",", "\n",
            "\t\t\t\t", 
           RowBox[{
            RowBox[{"e", ":", 
             RowBox[{"Except", "[", 
              RowBox[{"{", 
               RowBox[{"_", ",", " ", "_"}], "}"}], "]"}]}], "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{"e", ",", " ", "e"}], "}"}]}]}], "\n", "\t\t\t\t", 
          "}"}]}], "\n", "\t\t\t", "]"}], "/.", 
       RowBox[{"Automatic", "->", 
        RowBox[{"Thickness", "[", ".001", "]"}]}]}]}], ";", "\n", "\t\t", 
     RowBox[{"axesLines", "=", "\n", "\t\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{"TrueQ", ",", " ", "axes"}], "]"}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"TrueQ", "@", 
             RowBox[{"axes", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ast", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
              RowBox[{"Line", "[", 
               RowBox[{"Thread", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"pr", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                  RowBox[{"orgy", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
             "}"}], ",", "\n", "\t\t\t\t\t\t", "Nothing"}], "\n", 
           "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"TrueQ", "@", 
             RowBox[{"axes", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "\n", "\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ast", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
              RowBox[{"Line", "[", 
               RowBox[{"Thread", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"orgy", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                  RowBox[{"pr", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
             "}"}], ",", "\n", "\t\t\t\t\t\t", "Nothing"}], "\n", 
           "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "}"}], ",", "\n", 
        "\t\t\t\t", "Nothing"}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"aticks", "=", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", 
         RowBox[{"Graphics", ",", " ", "opp", ",", " ", "Ticks"}], "]"}], ",",
         " ", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Automatic", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"axes", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"axes", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"e", ":", 
            RowBox[{"Except", "[", 
             RowBox[{"{", 
              RowBox[{"_", ",", " ", "_"}], "}"}], "]"}]}], "\[RuleDelayed]", 
           
           RowBox[{"{", 
            RowBox[{"e", ",", " ", "e"}], "}"}]}]}], "\n", "\t", "\t\t\t\t", 
         "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"aticks", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"aticks", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"aticks", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "===", "Automatic"}], "&&", 
         RowBox[{"axes", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"aticks", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"aticks", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"aticks", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "===", "Automatic"}], "&&", 
         RowBox[{"axes", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"tst", "=", 
      RowBox[{
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", 
          RowBox[{"Graphics", ",", " ", "opp", ",", " ", "TicksStyle"}], 
          "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", "}"}], "|", "Automatic"}], "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", " ", "Automatic"}], "}"}]}], ",", "\n",
            "\t\t\t\t", 
           RowBox[{
            RowBox[{"e", ":", 
             RowBox[{"Except", "[", 
              RowBox[{"{", 
               RowBox[{"_", ",", " ", "_"}], "}"}], "]"}]}], "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{"e", ",", " ", "e"}], "}"}]}]}], "\n", "\t\t\t\t", 
          "}"}]}], "\n", "\t\t\t", "]"}], "/.", 
       RowBox[{"Automatic", "->", 
        RowBox[{"Thickness", "[", ".001", "]"}]}]}]}], ";", "\n", "\t\t", 
     RowBox[{"axesTicks", "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"aticks", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tst", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", "Nothing"}],
            "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"aticks", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tst", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", "Nothing"}],
            "]"}]}], "\n", "\t\t\t\t", "}"}], "&"}], "@", 
       RowBox[{"getPlotTicksObjects", "[", 
        RowBox[{"pr", ",", " ", "orgy"}], "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"frame", "=", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", 
         RowBox[{"Graphics", ",", " ", "opp", ",", " ", "Frame"}], "]"}], ",",
         " ", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Automatic", "\[Rule]", "\n", "\t\t\t\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"False", ",", " ", "False"}], "}"}], ",", "\n", 
             "\t\t\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"False", ",", " ", "False"}], "}"}]}], "\n", 
            "\t\t\t\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"f", ":", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"_", ",", " ", "_"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"_", ",", " ", "_"}], "}"}]}], "}"}]}], 
           "\[RuleDelayed]", "f"}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a_", ",", " ", "b_"}], "}"}], ":>", "\n", "\t\t\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"a", ",", " ", "b"}], "}"}]}], "}"}]}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"e", ":", 
            RowBox[{"Except", "[", 
             RowBox[{"{", 
              RowBox[{"_", ",", " ", "_"}], "}"}], "]"}]}], "\[RuleDelayed]", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"e", ",", " ", "e"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"e", ",", " ", "e"}], "}"}]}], "}"}]}]}], "\n", 
         "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     
     RowBox[{"fst", "=", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", 
         RowBox[{"Graphics", ",", " ", "opp", ",", " ", "FrameStyle"}], "]"}],
         ",", " ", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Automatic", "\[Rule]", "\n", "\t\t\t\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "}"}], ",", " ", 
               RowBox[{"{", "}"}]}], "}"}], ",", "\n", "\t\t\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "}"}], ",", " ", 
               RowBox[{"{", "}"}]}], "}"}]}], "\n", "\t\t\t\t\t\t\t", "}"}]}],
           ",", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"f", ":", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"_", ",", " ", "_"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"_", ",", " ", "_"}], "}"}]}], "}"}]}], 
           "\[RuleDelayed]", "f"}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a_", ",", " ", "b_"}], "}"}], ":>", "\n", "\t\t\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"a", ",", " ", "b"}], "}"}]}], "}"}]}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"e", ":", 
            RowBox[{"Except", "[", 
             RowBox[{"{", 
              RowBox[{"_", ",", " ", "_"}], "}"}], "]"}]}], "\[RuleDelayed]", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"e", ",", " ", "e"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"e", ",", " ", "e"}], "}"}]}], "}"}]}]}], "\n", 
         "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     
     RowBox[{"frameLines", "=", "\n", "\t\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{"TrueQ", ",", " ", 
           RowBox[{"Flatten", "@", "frame"}]}], "]"}]}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TrueQ", "@", 
              RowBox[{"frame", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], "&&", 
             RowBox[{
              RowBox[{"fst", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "=!=", "None"}]}],
             ",", "\n", "\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"fst", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
              RowBox[{"Line", "@", 
               RowBox[{"Thread", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"pr", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"pr", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}]}], "}"}], 
            ",", "\n", "\t\t\t\t\t\t", "Nothing"}], "\n", "\t\t\t\t\t\t", 
           "]"}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TrueQ", "@", 
              RowBox[{"frame", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "&&", 
             RowBox[{
              RowBox[{"fst", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], "=!=", "None"}]}],
             ",", "\n", "\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"fst", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
              RowBox[{"Line", "@", 
               RowBox[{"Thread", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"pr", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                  RowBox[{"pr", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", " ", "1"}], "]"}], "]"}]}], "}"}], 
                "]"}]}]}], "}"}], ",", "\n", "\t\t\t\t\t\t", "Nothing"}], 
           "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TrueQ", "@", 
              RowBox[{"frame", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", " ", "1"}], "]"}], "]"}]}], "&&", 
             RowBox[{
              RowBox[{"fst", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", " ", "1"}], "]"}], "]"}], "=!=", "None"}]}],
             ",", "\n", "\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"fst", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
              RowBox[{"Line", "@", 
               RowBox[{"Thread", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"pr", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"pr", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}]}], "}"}], 
            ",", "\n", "\t\t\t\t\t\t", "Nothing"}], "\n", "\t\t\t\t\t\t", 
           "]"}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TrueQ", "@", 
              RowBox[{"frame", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", " ", "2"}], "]"}], "]"}]}], "&&", 
             RowBox[{
              RowBox[{"fst", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", " ", "2"}], "]"}], "]"}], "=!=", "None"}]}],
             ",", "\n", "\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"fst", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
              RowBox[{"Line", "@", 
               RowBox[{"Thread", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"pr", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                  RowBox[{"pr", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", " ", "2"}], "]"}], "]"}]}], "}"}], 
                "]"}]}]}], "}"}], ",", "\n", "\t\t\t\t\t\t", "Nothing"}], 
           "\n", "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "}"}], ",", 
        "\n", "\t\t\t\t", "Nothing"}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
      "axesLines", ",", "\n", "\t\t\t", "axesTicks", ",", "\n", "\t\t\t", 
       "frameLines"}], "\n", "\t\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "need", " ", "to", " ", "do", " ", "the", " ", "FrameTicks", " ", 
        "stuff"}], " ", "*)"}], "\n", "\t\t\t", "}"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"f5dfa67e-f681-4e38-9435-5ac8d6559e05"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]toSVGCore\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"8fafc82f-b446-43d8-9355-23934678da83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toSVGCore", "[", 
   RowBox[{"e_", ",", " ", "opp_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"exportGraphics", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Most", "[", "#", "]"}], ",", " ", "opp", ",", " ", 
       RowBox[{"{", 
        RowBox[{"Last", "@", "#"}], "}"}]}], "]"}], "]"}], "&"}], "/@", "\n", 
   "\t\t", 
   RowBox[{
   "splitGraphicsList", "[", "e", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"4ce4013c-015f-4e89-a46d-5acb0135ce3d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]exportGraphics\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"cd492080-6713-4e21-a12c-4f1161b9cb8e"],

Cell[BoxData[
 RowBox[{"exportGraphics", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"72ddb298-a4bd-40df-87b6-33303a80348d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"exportGraphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dir___", ",", " ", "expr_"}], "}"}], ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"toEl", "@", "\n", "\t\t", 
    RowBox[{"Insert", "[", "\n", "\t\t\t", 
     RowBox[{"expr", ",", "\n", "\t\t\t", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"canonicalizeDirectives", "[", 
         RowBox[{
          RowBox[{"{", "dir", 
           RowBox[{"(*", 
            RowBox[{",", " ", "ops"}], "*)"}], "}"}], ",", " ", "expr"}], 
         "]"}], "\n", "\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"-", "1"}]}], "\n", "\t\t\t", "]"}]}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"520fd4ad-491f-48e7-a617-07109ad3b403"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]canonicalizeDirectives\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"88b1ffbb-8bb7-4e2d-9051-00560965d8a3"],

Cell[BoxData[
 RowBox[{"$basicDirectives", "=", "\n", "\t", 
  RowBox[{
  "_RGBColor", "|", "_Hue", "|", "_GrayLevel", "|", "_LABColor", "|", 
   "_XYZColor", "|", "_Thickness", "|", "_Dashing", "|", "\n", "\t\t", 
   "_AbsoluteThickness", "|", "_AbsoluteDashing", "|", "_JoinForm", "|", 
   "_CapForm", "|", "\n", "\t\t", "_PointSize", "|", 
   "_AbsolutePointSize"}]}]], \
"CodeInput",ExpressionUUID->"4a9067cb-71c1-4eff-911c-525674a35a46"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]canonicalizeDirectives\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"01f5810a-5bac-4077-87ba-f51130e5f7ed"],

Cell[BoxData[
 RowBox[{"canonicalizeDirectives", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"0aae74f3-1057-4862-8112-5feb4f4b4b44"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"canonicalizeDirectives", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"canonicalizeDirectives", "[", 
    RowBox[{"dir_", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Block", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"targ", "=", 
        RowBox[{"aliasTarget", "[", "expr", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"$svgLineType", "=", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"lineTypeAlias", "[", "expr", "]"}]}]}]}], "\n", "\t\t\t", 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"DeleteDuplicatesBy", "[", "First", "]"}], "@", 
      RowBox[{"Reverse", "@", 
       RowBox[{"Map", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"canonicalizeDirective", "[", 
           RowBox[{"#", ",", " ", "targ"}], "]"}], "&"}], ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "dir", "}"}], "//.", "\n", "\t\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"e", ":", 
               RowBox[{"EdgeForm", "[", "_List", "]"}]}], "\[RuleDelayed]", 
              RowBox[{"Directive", "@@", 
               RowBox[{"Thread", "[", "e", "]"}]}]}], ",", "\n", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"e", ":", 
               RowBox[{"FaceForm", "[", "_List", "]"}]}], "\[RuleDelayed]", 
              RowBox[{"Directive", "@@", 
               RowBox[{"Thread", "[", "e", "]"}]}]}], ",", "\n", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"e", ":", 
               RowBox[{"EdgeForm", "[", "__", "]"}]}], "\[RuleDelayed]", 
              RowBox[{"Thread", "[", 
               RowBox[{"e", ",", " ", "Directive"}], "]"}]}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"e", ":", 
               RowBox[{"FaceForm", "[", "__", "]"}]}], "\[RuleDelayed]", 
              RowBox[{"Thread", "[", 
               RowBox[{"e", ",", " ", "Directive"}], "]"}]}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"Directive", "[", "d___", "]"}], "\[RuleDelayed]", 
              "d"}]}], "\n", "\t\t\t\t\t", "}"}]}], "//", "Flatten"}]}], "\n",
         "\t\t\t", "]"}]}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"fdcf5169-507f-43ca-9991-84447cb6c0fa"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]canonicalizeDirective\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c363d121-250e-48a0-a84a-2def3d8a8934"],

Cell[BoxData[{
 RowBox[{"canonicalizeDirective", "//", "ClearAll"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"canonicalizeDirective", "[", 
    RowBox[{
     RowBox[{"c_", "?", "ColorQ"}], ",", " ", "_"}], "]"}], ":=", "\n", "\t", 
   
   RowBox[{"If", "[", 
    RowBox[{"$svgLineType", ",", " ", "\n", "\t\t", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"EdgeForm", "[", "Filling", "]"}], "\[Rule]", "c"}], "]"}], 
     ",", "\n", "\t\t", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"FaceForm", "[", "Filling", "]"}], "\[Rule]", "c"}], "]"}]}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"canonicalizeDirective", "[", 
    RowBox[{
     RowBox[{"FaceForm", "[", "x_", "]"}], ",", " ", "targ_"}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$svgLineType", "=", "False"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"canonicalizeDirective", "[", 
      RowBox[{"x", ",", " ", "targ"}], "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"canonicalizeDirective", "[", 
    RowBox[{
     RowBox[{"EdgeForm", "[", "x_", "]"}], ",", " ", "targ_"}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$svgLineType", "=", "True"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"canonicalizeDirective", "[", 
      RowBox[{"x", ",", " ", "targ"}], "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"canonicalizeDirective", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"r", ":", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
       RowBox[{
        RowBox[{"op", ":", 
         RowBox[{"Except", "[", 
          RowBox[{"_FaceForm", "|", "_EdgeForm"}], "]"}]}], ",", " ", 
        "val_"}], "]"}]}], ",", "\n", "\t", "_"}], "\n", "\t", "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{"$svgLineType", ",", " ", "\n", "\t\t", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "op", "]"}], "\[Rule]", "val"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"FaceForm", "[", "op", "]"}], "\[Rule]", "val"}]}], "\n", 
    "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"canonicalizeDirective", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"r", ":", 
     RowBox[{"(", 
      RowBox[{"_Rule", "|", "_RuleDelayed"}], ")"}]}], ",", "\n", "\t", "_"}],
    "\n", "\t", "]"}], ":=", "r"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"canonicalizeDirective", "[", 
    RowBox[{
     RowBox[{"dirs", ":", 
      RowBox[{"{", 
       RowBox[{"$basicDirectives", ".."}], "}"}]}], ",", " ", "targ_"}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{"Apply", "[", 
    RowBox[{"Directive", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"canonicalizeDirective", "[", 
        RowBox[{"#", ",", " ", "targ"}], "]"}], "&"}], "/@", "dirs"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"canonicalizeDirective", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"head", ":", 
        RowBox[{"Except", "[", "List", "]"}]}], ")"}], "[", 
      RowBox[{"x_", ",", " ", "___"}], "]"}], ",", " ", "_"}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{"$svgLineType", ",", " ", "\n", "\t\t", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"EdgeForm", "[", "head", "]"}], "\[Rule]", "x"}], "]"}], ",", 
     "\n", "\t\t", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"FaceForm", "[", "head", "]"}], "\[Rule]", "x"}], "]"}]}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"canonicalizeDirective", "[", "e___", "]"}], ":=", "\n", "\t", 
  RowBox[{
  "(", "Nothing", 
   ")"}]}]}], \
"CodeInput",ExpressionUUID->"d11d6d34-aa5f-4093-9625-475532355890"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$defaultDirectives\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"cbe3cffb-49a5-44f6-8040-eefc247c0a8a"],

Cell[BoxData[
 RowBox[{"$defaultDirectives", "=", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"EdgeForm", "@", "\n", "\t\t\t", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"Thickness", "[", ".01", "]"}]}], "]"}]}], ",", "\n", "\t\t", 
    RowBox[{"FaceForm", "[", "Black", "]"}]}], "\n", "\t\t", 
   "}"}]}]], \
"CodeInput",ExpressionUUID->"48dcf8f7-ce12-4915-b245-049b08b8aa36"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]splitGraphicsList\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f74c8051-f6d6-4bdd-9100-b7cfa8b812f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"splitGraphicsListRec", "[", "gl_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"direct", "=", "direct"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Which", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"ListQ", "@", "#"}], ",", " ", "\n", "\t\t\t\t", 
        RowBox[{"splitGraphicsListRec", "[", "#", "]"}], ",", "\n", "\t\t\t", 
        
        RowBox[{"TrueQ", "@", 
         RowBox[{"aliasedQ", "[", "#", "]"}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{"Sow", "@", 
         RowBox[{"Flatten", "@", 
          RowBox[{"{", 
           RowBox[{"direct", ",", " ", "#"}], "}"}]}]}], ",", "\n", "\t\t\t", 
        "True", ",", "\n", "\t\t\t\t", 
        RowBox[{"direct", "=", 
         RowBox[{"{", 
          RowBox[{"direct", ",", " ", "#"}], "}"}]}]}], "\n", "\t\t\t", "]"}],
       "&"}], "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", "gl", "}"}], ",", " ", "1"}], "]"}]}]}], "\n", "\t\t", 
   "]"}], " "}]], \
"CodeInput",ExpressionUUID->"88cc07a9-02d1-4f34-8795-398a02455539"],

Cell[BoxData[
 RowBox[{
  RowBox[{"splitGraphicsList", "[", "gl_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"direct", "=", "$defaultDirectives"}], "}"}], ",", "\n", "\t\t", 
    
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Reap", "[", 
        RowBox[{
         RowBox[{"splitGraphicsListRec", "[", "gl", "]"}], ";"}], "]"}], "[", 
       
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}], "\n", "\t\t",
    "]"}]}]], \
"CodeInput",ExpressionUUID->"f83aea33-449d-4d02-aaf3-c1800ff5478e"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "InputSection",
 CellLabel->"In[76]:=",ExpressionUUID->"f97e01de-9143-4641-b8e1-93798e8c9b40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]], "InputSection",
 CellLabel->
  "In[77]:=",ExpressionUUID->"885cd692-a77d-4971-abac-d333bee0ea42"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"04101e11-9cad-42d7-9f87-\
a3306437e5d9"]
},
WindowSize->{808, 755},
WindowMargins->{{Automatic, 292}, {0, Automatic}},
TaggingRules->{
 "UUIDButtons" -> {
   "Active" -> {
     "Button-89ffd2c3-ec41-4179-a9b1-8e28670bca2c" -> False, 
      "Button-ca46e5e0-4fd1-47e8-8cf6-72998922b757" -> False, 
      "Button-a6d68254-3684-4d32-83fc-e5ef6f443930" -> False}}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]

